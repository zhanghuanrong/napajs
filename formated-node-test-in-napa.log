

[00:00|%   0|+   0|-   0]: release test-callback-error 
                                                      
[00:00|%   0|+   1|-   0]: release test-crypto-pbkdf2 
                                                     
=== release test-crypto-pbkdf2 ===
Path: async-hooks/test-crypto-pbkdf2
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-crypto-pbkdf2.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-crypto-pbkdf2.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 0
+ 1
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-crypto-pbkdf2.js:38:10)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-crypto-pbkdf2.js

                                                     
[00:01|%   0|+   1|-   1]: release test-crypto-randomBytes 
                                                          
=== release test-crypto-randomBytes ===
Path: async-hooks/test-crypto-randomBytes
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-crypto-randomBytes.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-crypto-randomBytes.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 0
+ 1
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-crypto-randomBytes.js:39:10)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-crypto-randomBytes.js

                                                          
[00:01|%   0|+   1|-   2]: release test-disable-in-init 
                                                       
[00:01|%   0|+   2|-   2]: release test-embedder.api.async-resource 
                                                                   
=== release test-embedder.api.async-resource ===
Path: async-hooks/test-embedder.api.async-resource
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
(node:71542) [DEP0098] DeprecationWarning: asyncResource.emitBefore and emitAfter are deprecated. Please use asyncResource.runInAsyncScope instead
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
out/Release/node[71542]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x56011f519048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x56011f51a1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x56011f798bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x289d42d8427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource.js
--- CRASHED (Signal: 6) ---

                                                                   
[00:02|%   0|+   2|-   3]: release test-embedder.api.async-resource-no-type 
                                                                           
=== release test-embedder.api.async-resource-no-type ===
Path: async-hooks/test-embedder.api.async-resource-no-type
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource-no-type.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource-no-type.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 1
+ 0
    at ChildProcess.spawn.on.common.mustCall (/home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource-no-type.js:32:14)
    at ChildProcess.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at ChildProcess.emit (events.js:182:13)
    at maybeClose (internal/child_process.js:947:16)
    at Socket.stream.socket.on (internal/child_process.js:368:11)
    at Socket.emit (events.js:182:13)
    at Pipe._handle.close [as _onclose] (net.js:598:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource-no-type.js

                                                                           
[00:02|%   0|+   2|-   4]: release test-embedder.api.async-resource.after-o... 
                                                                              
=== release test-embedder.api.async-resource.after-on-destroyed ===
Path: async-hooks/test-embedder.api.async-resource.after-on-destroyed
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource.after-on-destroyed.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource.after-on-destroyed.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: did not crash until we reached offending line of code (found )
    at ChildProcess.child.on.common.mustCall (/home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource.after-on-destroyed.js:43:12)
    at ChildProcess.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at ChildProcess.emit (events.js:182:13)
    at maybeClose (internal/child_process.js:947:16)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:236:5)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource.after-on-destroyed.js

                                                                              
[00:03|%   0|+   2|-   5]: release test-embedder.api.async-resource.before-... 
                                                                              
=== release test-embedder.api.async-resource.before-on-destroyed ===
Path: async-hooks/test-embedder.api.async-resource.before-on-destroyed
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource.before-on-destroyed.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource.before-on-destroyed.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: did not crash until we reached offending line of code (found )
    at ChildProcess.child.on.common.mustCall (/home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource.before-on-destroyed.js:43:12)
    at ChildProcess.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at ChildProcess.emit (events.js:182:13)
    at maybeClose (internal/child_process.js:947:16)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:236:5)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource.before-on-destroyed.js

                                                                              
[00:03|%   0|+   2|-   6]: release test-embedder.api.async-resource.imprope... 
                                                                              
=== release test-embedder.api.async-resource.improper-order ===
Path: async-hooks/test-embedder.api.async-resource.improper-order
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource.improper-order.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource.improper-order.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: did not crash until we reached offending line of code (found )
    at ChildProcess.child.on.common.mustCall (/home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource.improper-order.js:41:12)
    at ChildProcess.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at ChildProcess.emit (events.js:182:13)
    at maybeClose (internal/child_process.js:947:16)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:236:5)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource.improper-order.js

                                                                              
[00:03|%   0|+   2|-   7]: release test-embedder.api.async-resource.imprope... 
                                                                              
=== release test-embedder.api.async-resource.improper-unwind ===
Path: async-hooks/test-embedder.api.async-resource.improper-unwind
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource.improper-unwind.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource.improper-unwind.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: did not crash until we reached offending line of code (found )
    at ChildProcess.child.on.common.mustCall (/home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource.improper-unwind.js:50:12)
    at ChildProcess.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at ChildProcess.emit (events.js:182:13)
    at maybeClose (internal/child_process.js:947:16)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:236:5)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-embedder.api.async-resource.improper-unwind.js

                                                                              
[00:04|%   0|+   2|-   8]: release test-embedder.api.async-resource.runInAs... 
                                                                              
[00:04|%   0|+   3|-   8]: release test-emit-before-after 
                                                         
=== release test-emit-before-after ===
Path: async-hooks/test-emit-before-after
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-emit-before-after.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-emit-before-after.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 10
+ 8
    at ActivityCollector.initHooks.onbefore.common.mustCall (/home/zhanglei/src/node/test/async-hooks/test-emit-before-after.js:46:44)
    at ActivityCollector.onbefore (/home/zhanglei/src/node/test/common/index.js:475:15)
    at ActivityCollector._before (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:192:10)
    at emitBeforeNative (internal/async_hooks.js:170:40)
    at emitBeforeScript (internal/async_hooks.js:350:5)
    at process._tickCallback (internal/process/next_tick.js:157:9)
out/Release/node[71629]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x557be220f048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x557be22101d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x557be248ebca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0xdce51d8427d
Command: out/Release/node --expose-internals /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-emit-before-after.js
--- CRASHED (Signal: 6) ---

                                                         
[00:05|%   0|+   3|-   9]: release test-emit-init 
                                                 
=== release test-emit-init ===
Path: async-hooks/test-emit-init
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-emit-init.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-emit-init.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 10
+ 8
    at ActivityCollector.initHooks.oninit.common.mustCall (/home/zhanglei/src/node/test/async-hooks/test-emit-init.js:72:12)
    at ActivityCollector.oninit (/home/zhanglei/src/node/test/common/index.js:475:15)
    at ActivityCollector._init (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:185:10)
    at emitInitNative (internal/async_hooks.js:137:43)
    at emitInitScript (internal/async_hooks.js:336:3)
    at new TickObject (internal/process/next_tick.js:196:9)
    at process.nextTick (internal/process/next_tick.js:225:10)
    at onwrite (_stream_writable.js:482:15)
    at SyncWriteStream._write (internal/fs.js:294:3)
    at doWrite (_stream_writable.js:413:12)
out/Release/node[71650]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x560c0c68e048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x560c0c68f1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x560c0c90dbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x11a797a8427d
Command: out/Release/node --expose-internals /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-emit-init.js
--- CRASHED (Signal: 6) ---

                                                 
[00:05|%   0|+   3|-  10]: release test-enable-disable 
                                                      
=== release test-enable-disable ===
Path: async-hooks/test-enable-disable
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-enable-disable.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-enable-disable.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "hook1First: when process exits":
    Trying to check invocation for an activity, but it was empty/undefined.
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:22:10)
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-enable-disable.js:246:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-enable-disable.js

                                                      
[00:06|%   0|+   3|-  11]: release test-enable-in-init 
                                                      
=== release test-enable-in-init ===
Path: async-hooks/test-enable-in-init
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-enable-in-init.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-enable-in-init.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
AssertionError [ERR_ASSERTION]: function should not have been called at /home/zhanglei/src/node/test/async-hooks/test-enable-in-init.js:8
    at AsyncHook.mustNotCall (/home/zhanglei/src/node/test/common/index.js:539:12)
    at emitInitNative (internal/async_hooks.js:137:43)
    at emitInitScript (internal/async_hooks.js:336:3)
    at new TickObject (internal/process/next_tick.js:196:9)
    at process.nextTick (internal/process/next_tick.js:225:10)
    at onwrite (_stream_writable.js:482:15)
    at SyncWriteStream._write (internal/fs.js:294:3)
    at doWrite (_stream_writable.js:413:12)
    at writeOrBuffer (_stream_writable.js:397:5)
    at SyncWriteStream.Writable.write (_stream_writable.js:295:11)
out/Release/node[71685]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55c4dbd71048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55c4dbd721d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55c4dbff0bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x24c1be30427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-enable-in-init.js
--- CRASHED (Signal: 6) ---

                                                      
[00:06|%   0|+   3|-  12]: release test-fseventwrap 
                                                   
=== release test-fseventwrap ===
Path: async-hooks/test-fseventwrap
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-fseventwrap.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-fseventwrap.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 0
+ 1
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-fseventwrap.js:31:10)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-fseventwrap.js

                                                   
[00:06|%   0|+   3|-  13]: release test-fsreqwrap-access 
                                                        
=== release test-fsreqwrap-access ===
Path: async-hooks/test-fsreqwrap-access
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-fsreqwrap-access.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-fsreqwrap-access.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "when process exits":
    Never called "before", but expected 1 invocation(s).
    at checkHook (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:45:7)
    at Array.forEach (<anonymous>)
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:28:44)
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-fsreqwrap-access.js:35:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-fsreqwrap-access.js

                                                        
[00:07|%   0|+   3|-  14]: release test-fsreqwrap-readFile 
                                                          
=== release test-fsreqwrap-readFile ===
Path: async-hooks/test-fsreqwrap-readFile
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-fsreqwrap-readFile.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-fsreqwrap-readFile.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "when process exits":
    Never called "before", but expected 1 invocation(s).
    at checkHook (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:45:7)
    at Array.forEach (<anonymous>)
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:28:44)
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-fsreqwrap-readFile.js:46:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-fsreqwrap-readFile.js

                                                          
[00:07|%   0|+   3|-  15]: release test-getaddrinforeqwrap 
                                                          
=== release test-getaddrinforeqwrap ===
Path: async-hooks/test-getaddrinforeqwrap
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-getaddrinforeqwrap.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-getaddrinforeqwrap.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "when process exits":
    Never called "before", but expected 1 invocation(s).
    at checkHook (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:45:7)
    at Array.forEach (<anonymous>)
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:28:44)
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-getaddrinforeqwrap.js:37:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-getaddrinforeqwrap.js

                                                          
[00:07|%   0|+   3|-  16]: release test-getnameinforeqwrap 
                                                          
=== release test-getnameinforeqwrap ===
Path: async-hooks/test-getnameinforeqwrap
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-getnameinforeqwrap.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-getnameinforeqwrap.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "when process exits":
    Never called "before", but expected 1 invocation(s).
    at checkHook (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:45:7)
    at Array.forEach (<anonymous>)
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:28:44)
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-getnameinforeqwrap.js:38:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-getnameinforeqwrap.js

                                                          
[00:08|%   0|+   3|-  17]: release test-graph.fsreq-readFile 
                                                            
=== release test-graph.fsreq-readFile ===
Path: async-hooks/test-graph.fsreq-readFile
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-graph.fsreq-readFile.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-graph.fsreq-readFile.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
out/Release/node[71755]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x5653dd804048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x5653dd8051d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x5653dda83bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x1b8822f0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-graph.fsreq-readFile.js
--- CRASHED (Signal: 6) ---

                                                            
[00:08|%   0|+   3|-  18]: release test-graph.http 
                                                  
=== release test-graph.http ===
Path: async-hooks/test-graph.http
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-graph.http.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-graph.http.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
out/Release/node[71768]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x557587c21048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x557587c221d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x557587ea0bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x3c8c4b78427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-graph.http.js
--- CRASHED (Signal: 6) ---

                                                  
[00:09|%   1|+   3|-  19]: release test-graph.intervals 
                                                       
=== release test-graph.intervals ===
Path: async-hooks/test-graph.intervals
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-graph.intervals.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-graph.intervals.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
out/Release/node[71777]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55d50e2fe048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55d50e2ff1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55d50e57dbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x364ef8c8427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-graph.intervals.js
--- CRASHED (Signal: 6) ---

                                                       
[00:09|%   1|+   3|-  20]: release test-graph.pipe 
                                                  
=== release test-graph.pipe ===
Path: async-hooks/test-graph.pipe
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-graph.pipe.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-graph.pipe.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
out/Release/node[71788]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x556e991b5048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x556e991b61d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x556e99434bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x3169b028427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-graph.pipe.js
--- CRASHED (Signal: 6) ---

                                                  
[00:09|%   1|+   3|-  21]: release test-graph.pipeconnect 
                                                         
=== release test-graph.pipeconnect ===
Path: async-hooks/test-graph.pipeconnect
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-graph.pipeconnect.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-graph.pipeconnect.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
out/Release/node[71798]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x563e25ae4048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x563e25ae51d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x563e25d63bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x3642d298427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-graph.pipeconnect.js
--- CRASHED (Signal: 6) ---

                                                         
[00:10|%   1|+   3|-  22]: release test-graph.shutdown 
                                                      
=== release test-graph.shutdown ===
Path: async-hooks/test-graph.shutdown
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-graph.shutdown.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-graph.shutdown.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
out/Release/node[71809]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x555bf165b048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x555bf165c1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x555bf18dabca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x7512be8427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-graph.shutdown.js
--- CRASHED (Signal: 6) ---

                                                      
[00:10|%   1|+   3|-  23]: release test-graph.signal 
                                                    
=== release test-graph.signal ===
Path: async-hooks/test-graph.signal
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-graph.signal.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-graph.signal.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
out/Release/node[71824]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x5569e99b7048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x5569e99b81d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x5569e9c36bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x16c8a918427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-graph.signal.js
--- CRASHED (Signal: 6) ---

                                                    
[00:11|%   1|+   3|-  24]: release test-graph.statwatcher 
                                                         
=== release test-graph.statwatcher ===
Path: async-hooks/test-graph.statwatcher
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-graph.statwatcher.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-graph.statwatcher.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
out/Release/node[71834]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x557eef76d048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x557eef76e1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x557eef9ecbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x2b45c830427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-graph.statwatcher.js
--- CRASHED (Signal: 6) ---

                                                         
[00:11|%   1|+   3|-  25]: release test-graph.tcp 
                                                 
=== release test-graph.tcp ===
Path: async-hooks/test-graph.tcp
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-graph.tcp.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-graph.tcp.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
out/Release/node[71847]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55e422834048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55e4228351d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55e422ab3bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x1332d958427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-graph.tcp.js
--- CRASHED (Signal: 6) ---

                                                 
[00:12|%   1|+   3|-  26]: release test-graph.timeouts 
                                                      
=== release test-graph.timeouts ===
Path: async-hooks/test-graph.timeouts
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-graph.timeouts.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-graph.timeouts.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
out/Release/node[71857]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55cfb290d048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55cfb290e1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55cfb2b8cbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x1fd11990427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-graph.timeouts.js
--- CRASHED (Signal: 6) ---

                                                      
[00:12|%   1|+   3|-  27]: release test-graph.tls-write 
                                                       
=== release test-graph.tls-write ===
Path: async-hooks/test-graph.tls-write
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-graph.tls-write.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-graph.tls-write.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
out/Release/node[71866]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55883f76e048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55883f76f1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55883f9edbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0xa7464f0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-graph.tls-write.js
--- CRASHED (Signal: 6) ---

                                                       
[00:13|%   1|+   3|-  28]: release test-httpparser.request 
                                                          
=== release test-httpparser.request ===
Path: async-hooks/test-httpparser.request
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-httpparser.request.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-httpparser.request.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "when process exits":
    Never called "destroy", but expected 1 invocation(s).
    at checkHook (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:45:7)
    at Array.forEach (<anonymous>)
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:28:44)
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-httpparser.request.js:52:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-httpparser.request.js

                                                          
[00:13|%   1|+   3|-  29]: release test-httpparser.response 
                                                           
=== release test-httpparser.response ===
Path: async-hooks/test-httpparser.response
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-httpparser.response.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-httpparser.response.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "when process exits":
    Never called "destroy", but expected 1 invocation(s).
    at checkHook (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:45:7)
    at Array.forEach (<anonymous>)
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:28:44)
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-httpparser.response.js:62:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-httpparser.response.js

                                                           
[00:13|%   1|+   3|-  30]: release test-immediate 
                                                 
=== release test-immediate ===
Path: async-hooks/test-immediate
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-immediate.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-immediate.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "imd1: when process exits":
    Never called "before", but expected 1 invocation(s).
    at checkHook (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:45:7)
    at Array.forEach (<anonymous>)
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:28:44)
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-immediate.js:59:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-immediate.js

                                                 
[00:13|%   1|+   3|-  31]: release test-net-get-connections 
                                                           
[00:14|%   1|+   4|-  31]: release test-nexttick-default-trigger 
                                                                
=== release test-nexttick-default-trigger ===
Path: async-hooks/test-nexttick-default-trigger
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-nexttick-default-trigger.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-nexttick-default-trigger.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
out/Release/node[71911]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55f6e2e84048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55f6e2e851d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55f6e3103bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x3811ab20427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-nexttick-default-trigger.js
--- CRASHED (Signal: 6) ---

                                                                
[00:14|%   1|+   4|-  32]: release test-no-assert-when-disabled 
                                                               
[00:14|%   1|+   5|-  32]: release test-pipeconnectwrap 
                                                       
=== release test-pipeconnectwrap ===
Path: async-hooks/test-pipeconnectwrap
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-pipeconnectwrap.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-pipeconnectwrap.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "pipeserver, process exiting":
    Never called "before", but expected 1 invocation(s).
    at checkHook (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:45:7)
    at Array.forEach (<anonymous>)
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:28:44)
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-pipeconnectwrap.js:88:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-pipeconnectwrap.js

                                                       
[00:15|%   1|+   5|-  33]: release test-pipewrap 
                                                
=== release test-pipewrap ===
Path: async-hooks/test-pipewrap
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-pipewrap.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-pipewrap.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 0
+ 1 Unhandled Rejection at Promise Promise {
  <rejected> 'AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:\n+ expected - actual\n\n- 0\n+ 1' }
Command: out/Release/node --expose-gc /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-pipewrap.js

                                                
[00:15|%   1|+   5|-  34]: release test-promise 
                                               
=== release test-promise ===
Path: async-hooks/test-promise
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-promise.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-promise.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 0
+ 1
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-promise.js:46:10)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-promise.js

                                               
[00:15|%   1|+   5|-  35]: release test-promise.chain-promise-before-init-h... 
                                                                              
[00:16|%   1|+   6|-  35]: release test-promise.promise-before-init-hooks 
                                                                         
[00:16|%   1|+   7|-  35]: release test-querywrap 
                                                 
=== release test-querywrap ===
Path: async-hooks/test-querywrap
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-querywrap.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-querywrap.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "when process exits":
    Never called "before", but expected 1 invocation(s).
    at checkHook (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:45:7)
    at Array.forEach (<anonymous>)
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:28:44)
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-querywrap.js:38:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node --expose-gc /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-querywrap.js

                                                 
[00:16|%   2|+   7|-  36]: release test-shutdownwrap 
                                                    
=== release test-shutdownwrap ===
Path: async-hooks/test-shutdownwrap
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-shutdownwrap.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-shutdownwrap.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
/home/zhanglei/src/node/test/async-hooks/test-shutdownwrap.js:58
  assert.strictEqual(a.type, 'SHUTDOWNWRAP');
                       ^

TypeError: Cannot read property 'type' of undefined
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-shutdownwrap.js:58:24)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-shutdownwrap.js

                                                    
[00:16|%   2|+   7|-  37]: release test-signalwrap 
                                                  
=== release test-signalwrap ===
Path: async-hooks/test-signalwrap
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-signalwrap.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-signalwrap.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "signal1: when second SIGUSR2 process exits":
    Never called "before", but expected 2 invocation(s).
    at checkHook (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:45:7)
    at Array.forEach (<anonymous>)
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:28:44)
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-signalwrap.js:90:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-signalwrap.js

                                                  
[00:17|%   2|+   7|-  38]: release test-statwatcher 
                                                   
=== release test-statwatcher ===
Path: async-hooks/test-statwatcher
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-statwatcher.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-statwatcher.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 0
+ 1 Unhandled Rejection at Promise Promise {
  <rejected> 'AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:\n+ expected - actual\n\n- 0\n+ 1' }
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
out/Release/node[72000]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55efb589c048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55efb589d1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55efb5b1bbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x9a7eb28427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-statwatcher.js
--- CRASHED (Signal: 6) ---

                                                   
[00:17|%   2|+   7|-  39]: release test-tcpwrap 
                                               
=== release test-tcpwrap ===
Path: async-hooks/test-tcpwrap
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-tcpwrap.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-tcpwrap.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "tcpserver when process exits":
    Never called "before", but expected 1 invocation(s).
    at checkHook (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:45:7)
    at Array.forEach (<anonymous>)
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:28:44)
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-tcpwrap.js:154:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-tcpwrap.js

                                               
[00:18|%   2|+   7|-  40]: release test-timers.setInterval 
                                                          
=== release test-timers.setInterval ===
Path: async-hooks/test-timers.setInterval
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-timers.setInterval.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-timers.setInterval.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "t1: when process exits":
    Never called "before", but expected 1 invocation(s).
    at checkHook (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:45:7)
    at Array.forEach (<anonymous>)
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:28:44)
    at process.on (/home/zhanglei/src/node/test/async-hooks/test-timers.setInterval.js:35:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-timers.setInterval.js

                                                          
[00:18|%   2|+   7|-  41]: release test-timers.setTimeout 
                                                         
=== release test-timers.setTimeout ===
Path: async-hooks/test-timers.setTimeout
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-timers.setTimeout.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-timers.setTimeout.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "t1: when process exits":
    Never called "before", but expected 1 invocation(s).
    at checkHook (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:45:7)
    at Array.forEach (<anonymous>)
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:28:44)
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-timers.setTimeout.js:57:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-timers.setTimeout.js

                                                         
[00:19|%   2|+   7|-  42]: release test-timerwrap.setInterval 
                                                             
=== release test-timerwrap.setInterval ===
Path: async-hooks/test-timerwrap.setInterval
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-timerwrap.setInterval.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-timerwrap.setInterval.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "t: when process exits":
    Never called "before", but expected 3 invocation(s).
    at checkHook (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:45:7)
    at Array.forEach (<anonymous>)
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:28:44)
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-timerwrap.setInterval.js:54:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-timerwrap.setInterval.js

                                                             
[00:19|%   2|+   7|-  43]: release test-timerwrap.setTimeout 
                                                            
=== release test-timerwrap.setTimeout ===
Path: async-hooks/test-timerwrap.setTimeout
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-timerwrap.setTimeout.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-timerwrap.setTimeout.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "t1: when process exits":
    Never called "before", but expected 2 invocation(s).
    at checkHook (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:45:7)
    at Array.forEach (<anonymous>)
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:28:44)
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-timerwrap.setTimeout.js:72:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-timerwrap.setTimeout.js

                                                            
[00:19|%   2|+   7|-  44]: release test-tlswrap 
                                               
=== release test-tlswrap ===
Path: async-hooks/test-tlswrap
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-tlswrap.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-tlswrap.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "server: when process exits":
    Never called "before", but expected 2 invocation(s).
    at checkHook (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:45:7)
    at Array.forEach (<anonymous>)
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:28:44)
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-tlswrap.js:130:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-tlswrap.js

                                               
[00:20|%   2|+   7|-  45]: release test-ttywrap.readstream 
                                                          
=== release test-ttywrap.readstream ===
Path: async-hooks/test-ttywrap.readstream
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-ttywrap.readstream.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-ttywrap.readstream.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "when process exits":
    Never called "before", but expected 1 invocation(s).
    at checkHook (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:45:7)
    at Array.forEach (<anonymous>)
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:28:44)
    at process.on (/home/zhanglei/src/node/test/async-hooks/test-ttywrap.readstream.js:46:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-ttywrap.readstream.js

                                                          
[00:20|%   2|+   7|-  46]: release test-ttywrap.writestream 
                                                           
=== release test-ttywrap.writestream ===
Path: async-hooks/test-ttywrap.writestream
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-ttywrap.writestream.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-ttywrap.writestream.js' ]
1..0 # Skipped: no valid writable TTY available
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[72073]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x564e38eec048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x564e38eed1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x564e3916bbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x19a7a4a8427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-ttywrap.writestream.js
--- CRASHED (Signal: 6) ---

                                                           
[00:20|%   2|+   7|-  47]: release test-udpsendwrap 
                                                   
=== release test-udpsendwrap ===
Path: async-hooks/test-udpsendwrap
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-udpsendwrap.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-udpsendwrap.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "when process exits":
    Trying to check invocation for an activity, but it was empty/undefined.
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:22:10)
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-udpsendwrap.js:53:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-udpsendwrap.js

                                                   
[00:21|%   2|+   7|-  48]: release test-udpwrap 
                                               
=== release test-udpwrap ===
Path: async-hooks/test-udpwrap
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-udpwrap.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-udpwrap.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "when process exits":
    Never called "destroy", but expected 1 invocation(s).
    at checkHook (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:45:7)
    at Array.forEach (<anonymous>)
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:28:44)
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-udpwrap.js:35:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-udpwrap.js

                                               
[00:21|%   2|+   7|-  49]: release test-writewrap 
                                                 
=== release test-writewrap ===
Path: async-hooks/test-writewrap
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-writewrap.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-writewrap.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: 0 out of 1 WRITEWRAPs when process exits
    at checkDestroyedWriteWraps (/home/zhanglei/src/node/test/async-hooks/test-writewrap.js:36:10)
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-writewrap.js:112:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-writewrap.js

                                                 
[00:21|%   2|+   7|-  50]: release test-zlib.zlib-binding.deflate 
                                                                 
=== release test-zlib.zlib-binding.deflate ===
Path: async-hooks/test-zlib.zlib-binding.deflate
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/async-hooks/test-zlib.zlib-binding.deflate.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/async-hooks/test-zlib.zlib-binding.deflate.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Found a handle whose destroy hook was invoked but not its init hook
    at ActivityCollector._getActivity (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:162:21)
    at ActivityCollector._destroy (/home/zhanglei/src/node/test/async-hooks/init-hooks.js:203:20)
    at emitDestroyNative (internal/async_hooks.js:170:40)
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Checking invocations at stage "when process exits":
    Never called "before", but expected 2 invocation(s).
    at checkHook (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:45:7)
    at Array.forEach (<anonymous>)
    at checkInvocations (/home/zhanglei/src/node/test/async-hooks/hook-checks.js:28:44)
    at process.onexit (/home/zhanglei/src/node/test/async-hooks/test-zlib.zlib-binding.deflate.js:63:3)
    at process.emit (events.js:187:15)
    at process.exit (internal/process.js:164:15)
    at fatalError (internal/async_hooks.js:113:11)
    at emitDestroyNative (internal/async_hooks.js:174:7)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/async-hooks/test-zlib.zlib-binding.deflate.js

                                                                 
[00:22|%   2|+   7|-  51]: release test-accessor-properties 
                                                           
[00:22|%   2|+   8|-  51]: release test-arm-math-illegal-instruction 
                                                                    
[00:22|%   2|+   9|-  51]: release test-assert 
                                              
[00:23|%   2|+  10|-  51]: release test-assert-async 
                                                    
[00:23|%   2|+  11|-  51]: release test-assert-checktag 
                                                       
[00:27|%   2|+  12|-  51]: release test-assert-deep 
                                                   
[00:27|%   3|+  13|-  51]: release test-assert-fail 
                                                   
[00:28|%   3|+  14|-  51]: release test-assert-fail-deprecation 
                                                               
[00:28|%   3|+  15|-  51]: release test-assert-if-error 
                                                       
[00:28|%   3|+  16|-  51]: release test-assert-typedarray-deepequal 
                                                                   
[00:29|%   3|+  17|-  51]: release test-async-hooks-asyncresource-construct... 
                                                                              
[00:29|%   3|+  18|-  51]: release test-async-hooks-close-during-destroy 
                                                                        
[00:29|%   3|+  19|-  51]: release test-async-hooks-constructor 
                                                               
[00:30|%   3|+  20|-  51]: release test-async-hooks-destroy-on-gc 
                                                                 
[00:30|%   3|+  21|-  51]: release test-async-hooks-disable-during-promise 
                                                                          
[00:30|%   3|+  22|-  51]: release test-async-hooks-disable-gc-tracking 
                                                                       
[00:30|%   3|+  23|-  51]: release test-async-hooks-enable-disable 
                                                                  
[00:31|%   3|+  24|-  51]: release test-async-hooks-enable-during-promise 
                                                                         
[00:31|%   3|+  25|-  51]: release test-async-hooks-enable-recursive 
                                                                    
[00:31|%   3|+  26|-  51]: release test-async-hooks-http-agent 
                                                              
[00:32|%   3|+  27|-  51]: release test-async-hooks-prevent-double-destroy 
                                                                          
[00:32|%   3|+  28|-  51]: release test-async-hooks-promise 
                                                           
=== release test-async-hooks-promise ===
Path: parallel/test-async-hooks-promise
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-async-hooks-promise.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-async-hooks-promise.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 0
+ 1 Unhandled Rejection at Promise Promise {
  <rejected> 'AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:\n+ expected - actual\n\n- 0\n+ 1' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-async-hooks-promise.js

                                                           
[00:32|%   3|+  28|-  52]: release test-async-hooks-promise-enable-disable 
                                                                          
[00:32|%   3|+  29|-  52]: release test-async-hooks-promise-triggerid 
                                                                     
=== release test-async-hooks-promise-triggerid ===
Path: parallel/test-async-hooks-promise-triggerid
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-async-hooks-promise-triggerid.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-async-hooks-promise-triggerid.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 1
+ 0
    at AsyncHook.async_hooks.createHook.init.common.mustCallAtLeast (/home/zhanglei/src/node/test/parallel/test-async-hooks-promise-triggerid.js:15:14)
    at AsyncHook.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at PromiseWrap.emitInitNative (internal/async_hooks.js:137:43)
    at Function.resolve (<anonymous>)
    at Object.<anonymous> (/home/zhanglei/src/node/test/parallel/test-async-hooks-promise-triggerid.js:28:9)
    at Module._compile (internal/modules/cjs/loader.js:678:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:689:10)
    at Module.load (internal/modules/cjs/loader.js:589:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:528:12)
    at Function.Module._load (internal/modules/cjs/loader.js:520:3)
out/Release/node[72315]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x56088c740048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x56088c7411d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x56088c9bfbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x1141bda8427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-async-hooks-promise-triggerid.js
--- CRASHED (Signal: 6) ---

                                                                     
[00:33|%   3|+  29|-  53]: release test-async-hooks-recursive-stack 
                                                                   
[00:33|%   3|+  30|-  53]: release test-async-hooks-recursive-stack-runInAs... 
                                                                              
[00:34|%   3|+  31|-  53]: release test-async-hooks-top-level-clearimmediat... 
                                                                              
=== release test-async-hooks-top-level-clearimmediate ===
Path: parallel/test-async-hooks-top-level-clearimmediate
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-async-hooks-top-level-clearimmediate.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-async-hooks-top-level-clearimmediate.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 0
+ 1
    at AsyncHook.async_hooks.createHook.init.common.mustCall (/home/zhanglei/src/node/test/parallel/test-async-hooks-top-level-clearimmediate.js:16:12)
    at AsyncHook.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at emitInitNative (internal/async_hooks.js:137:43)
    at emitInitScript (internal/async_hooks.js:336:3)
    at initAsyncResource (internal/timers.js:50:5)
    at new Immediate (timers.js:713:5)
    at setImmediate (timers.js:765:10)
    at Object.<anonymous> (/home/zhanglei/src/node/test/parallel/test-async-hooks-top-level-clearimmediate.js:25:19)
    at Module._compile (internal/modules/cjs/loader.js:678:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:689:10)
out/Release/node[72340]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55faf1da3048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55faf1da41d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55faf2022bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x25619fa0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-async-hooks-top-level-clearimmediate.js
--- CRASHED (Signal: 6) ---

                                                                              
[00:34|%   3|+  31|-  54]: release test-async-wrap-constructor 
                                                              
[00:34|%   4|+  32|-  54]: release test-async-wrap-destroyid 
                                                            
[00:35|%   4|+  33|-  54]: release test-async-wrap-pop-id-during-load 
                                                                     
[00:36|%   4|+  34|-  54]: release test-async-wrap-promise-after-enabled 
                                                                        
[00:36|%   4|+  35|-  54]: release test-async-wrap-tlssocket-asyncreset 
                                                                       
[00:37|%   4|+  36|-  54]: release test-async-wrap-trigger-id 
                                                             
[00:37|%   4|+  37|-  54]: release test-async-wrap-uncaughtexception 
                                                                    
[00:37|%   4|+  38|-  54]: release test-bad-unicode 
                                                   
[00:37|%   4|+  39|-  54]: release test-beforeexit-event-exit 
                                                             
=== release test-beforeexit-event-exit ===
Path: parallel/test-beforeexit-event-exit
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-beforeexit-event-exit.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-beforeexit-event-exit.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[72429]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x56550a5ba048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x56550a5bb1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x56550a839bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x1f1d1d60427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-beforeexit-event-exit.js
--- CRASHED (Signal: 6) ---

                                                             
[00:38|%   4|+  39|-  55]: release test-benchmark-arrays 
                                                        
[00:39|%   4|+  40|-  55]: release test-benchmark-assert 
                                                        
[00:40|%   4|+  41|-  55]: release test-benchmark-cluster 
                                                         
[00:41|%   4|+  42|-  55]: release test-benchmark-crypto 
                                                        
[00:42|%   4|+  43|-  55]: release test-benchmark-dgram 
                                                       
[00:44|%   4|+  44|-  55]: release test-benchmark-dns 
                                                     
[00:45|%   4|+  45|-  55]: release test-benchmark-domain 
                                                        
[00:45|%   4|+  46|-  55]: release test-benchmark-es 
                                                    
[00:47|%   4|+  47|-  55]: release test-benchmark-events 
                                                        
[00:48|%   4|+  48|-  55]: release test-benchmark-fs 
                                                    
[00:52|%   4|+  49|-  55]: release test-benchmark-misc 
                                                      
[00:53|%   4|+  50|-  55]: release test-benchmark-module 
                                                        
[00:54|%   4|+  51|-  55]: release test-benchmark-os 
                                                    
[00:55|%   5|+  52|-  55]: release test-benchmark-path 
                                                      
[00:58|%   5|+  53|-  55]: release test-benchmark-process 
                                                         
[01:00|%   5|+  54|-  55]: release test-benchmark-querystring 
                                                             
[01:01|%   5|+  55|-  55]: release test-benchmark-string_decoder 
                                                                
[01:01|%   5|+  56|-  55]: release test-benchmark-timers 
                                                        
[01:03|%   5|+  57|-  55]: release test-benchmark-url 
                                                     
[01:05|%   5|+  58|-  55]: release test-benchmark-util 
                                                      
[01:06|%   5|+  59|-  55]: release test-benchmark-zlib 
                                                      
[01:07|%   5|+  60|-  55]: release test-binding-constants 
                                                         
[01:07|%   5|+  61|-  55]: release test-buffer-alloc 
                                                    
[01:08|%   5|+  62|-  55]: release test-buffer-arraybuffer 
                                                          
[01:08|%   5|+  63|-  55]: release test-buffer-ascii 
                                                    
[01:08|%   5|+  64|-  55]: release test-buffer-bad-overload 
                                                           
[01:08|%   5|+  65|-  55]: release test-buffer-badhex 
                                                     
[01:09|%   5|+  66|-  55]: release test-buffer-bindingobj-no-zerofill 
                                                                     
[01:09|%   5|+  67|-  55]: release test-buffer-bytelength 
                                                         
[01:09|%   5|+  68|-  55]: release test-buffer-compare 
                                                      
[01:09|%   5|+  69|-  55]: release test-buffer-compare-offset 
                                                             
[01:10|%   5|+  70|-  55]: release test-buffer-concat 
                                                     
[01:10|%   5|+  71|-  55]: release test-buffer-constants 
                                                        
[01:10|%   5|+  72|-  55]: release test-buffer-constructor-node-modules-pat... 
                                                                              
[01:11|%   6|+  73|-  55]: release test-buffer-constructor-outside-node-mod... 
                                                                              
[01:12|%   6|+  74|-  55]: release test-buffer-copy 
                                                   
[01:12|%   6|+  75|-  55]: release test-buffer-equals 
                                                     
[01:12|%   6|+  76|-  55]: release test-buffer-failed-alloc-typed-arrays 
                                                                        
[01:12|%   6|+  77|-  55]: release test-buffer-fakes 
                                                    
[01:13|%   6|+  78|-  55]: release test-buffer-fill 
                                                   
[01:13|%   6|+  79|-  55]: release test-buffer-from 
                                                   
[01:13|%   6|+  80|-  55]: release test-buffer-includes 
                                                       
[01:14|%   6|+  81|-  55]: release test-buffer-indexof 
                                                      
[01:14|%   6|+  82|-  55]: release test-buffer-inheritance 
                                                          
[01:14|%   6|+  83|-  55]: release test-buffer-inspect 
                                                      
[01:15|%   6|+  84|-  55]: release test-buffer-isencoding 
                                                         
[01:15|%   6|+  85|-  55]: release test-buffer-iterator 
                                                       
[01:15|%   6|+  86|-  55]: release test-buffer-negative-length 
                                                              
[01:15|%   6|+  87|-  55]: release test-buffer-new 
                                                  
[01:16|%   6|+  88|-  55]: release test-buffer-no-negative-allocation 
                                                                     
[01:16|%   6|+  89|-  55]: release test-buffer-nopendingdep-map 
                                                               
[01:16|%   6|+  90|-  55]: release test-buffer-of-no-deprecation 
                                                                
[01:16|%   6|+  91|-  55]: release test-buffer-over-max-length 
                                                              
[01:17|%   6|+  92|-  55]: release test-buffer-parent-property 
                                                              
[01:17|%   6|+  93|-  55]: release test-buffer-pending-deprecation 
                                                                  
[01:17|%   6|+  94|-  55]: release test-buffer-prototype-inspect 
                                                                
[01:17|%   7|+  95|-  55]: release test-buffer-read 
                                                   
[01:18|%   7|+  96|-  55]: release test-buffer-readdouble 
                                                         
[01:18|%   7|+  97|-  55]: release test-buffer-readfloat 
                                                        
[01:18|%   7|+  98|-  55]: release test-buffer-readint 
                                                      
[01:19|%   7|+  99|-  55]: release test-buffer-safe-unsafe 
                                                          
[01:19|%   7|+ 100|-  55]: release test-buffer-sharedarraybuffer 
                                                                
[01:19|%   7|+ 101|-  55]: release test-buffer-slice 
                                                    
[01:19|%   7|+ 102|-  55]: release test-buffer-slow 
                                                   
[01:20|%   7|+ 103|-  55]: release test-buffer-swap 
                                                   
[01:20|%   7|+ 104|-  55]: release test-buffer-tojson 
                                                     
[01:20|%   7|+ 105|-  55]: release test-buffer-tostring 
                                                       
[01:21|%   7|+ 106|-  55]: release test-buffer-tostring-range 
                                                             
[01:21|%   7|+ 107|-  55]: release test-buffer-tostring-rangeerror 
                                                                  
[01:21|%   7|+ 108|-  55]: release test-buffer-write 
                                                    
[01:21|%   7|+ 109|-  55]: release test-buffer-writedouble 
                                                          
[01:22|%   7|+ 110|-  55]: release test-buffer-writefloat 
                                                         
[01:22|%   7|+ 111|-  55]: release test-buffer-writeint 
                                                       
[01:22|%   7|+ 112|-  55]: release test-buffer-writeuint 
                                                        
[01:22|%   7|+ 113|-  55]: release test-buffer-zero-fill 
                                                        
[01:23|%   7|+ 114|-  55]: release test-buffer-zero-fill-cli 
                                                            
[01:23|%   7|+ 115|-  55]: release test-buffer-zero-fill-reset 
                                                              
[01:23|%   8|+ 116|-  55]: release test-c-ares 
                                              
[01:23|%   8|+ 117|-  55]: release test-child-process-bad-stdio 
                                                               
[01:24|%   8|+ 118|-  55]: release test-child-process-buffering 
                                                               
[01:24|%   8|+ 119|-  55]: release test-child-process-can-write-to-stdout 
                                                                         
=== release test-child-process-can-write-to-stdout ===
Path: parallel/test-child-process-can-write-to-stdout
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-child-process-can-write-to-stdout.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-child-process-can-write-to-stdout.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
events.js:167
      throw er; // Unhandled 'error' event
      ^

Error: spawn /home/zhanglei/src/node/test/parallel/test-child-process-can-write-to-stdout.js EACCES
    at Process.ChildProcess._handle.onexit (internal/child_process.js:217:19)
    at onErrorNT (internal/child_process.js:394:16)
    at process._tickCallback (internal/process/next_tick.js:174:19)
Emitted 'error' event at:
    at Process.ChildProcess._handle.onexit (internal/child_process.js:223:12)
    at onErrorNT (internal/child_process.js:394:16)
    at process._tickCallback (internal/process/next_tick.js:174:19)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-child-process-can-write-to-stdout.js

                                                                         
[01:24|%   8|+ 119|-  56]: release test-child-process-constructor 
                                                                 
[01:25|%   8|+ 120|-  56]: release test-child-process-custom-fds 
                                                                
[01:25|%   8|+ 121|-  56]: release test-child-process-cwd 
                                                         
[01:25|%   8|+ 122|-  56]: release test-child-process-default-options 
                                                                     
[01:26|%   8|+ 123|-  56]: release test-child-process-detached 
                                                              
[01:26|%   8|+ 124|-  56]: release test-child-process-disconnect 
                                                                
[01:26|%   8|+ 125|-  56]: release test-child-process-double-pipe 
                                                                 
[01:27|%   8|+ 126|-  56]: release test-child-process-env 
                                                         
[01:27|%   8|+ 127|-  56]: release test-child-process-exec-cwd 
                                                              
[01:27|%   8|+ 128|-  56]: release test-child-process-exec-encoding 
                                                                   
[01:28|%   8|+ 129|-  56]: release test-child-process-exec-env 
                                                              
[01:28|%   8|+ 130|-  56]: release test-child-process-exec-error 
                                                                
[01:29|%   8|+ 131|-  56]: release test-child-process-exec-kill-throws 
                                                                      
[01:29|%   8|+ 132|-  56]: release test-child-process-exec-maxBuffer 
                                                                    
[01:29|%   8|+ 133|-  56]: release test-child-process-exec-stdout-stderr-da... 
                                                                              
[01:30|%   8|+ 134|-  56]: release test-child-process-exec-timeout 
                                                                  
[01:31|%   8|+ 135|-  56]: release test-child-process-execfile 
                                                              
[01:32|%   9|+ 136|-  56]: release test-child-process-exit-code 
                                                               
=== release test-child-process-exit-code ===
Path: parallel/test-child-process-exit-code
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-child-process-exit-code.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-child-process-exit-code.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
events.js:167
      throw er; // Unhandled 'error' event
      ^

Error: spawn /home/zhanglei/src/node/test/parallel/test-child-process-exit-code.js EACCES
    at Process.ChildProcess._handle.onexit (internal/child_process.js:217:19)
    at onErrorNT (internal/child_process.js:394:16)
    at process._tickCallback (internal/process/next_tick.js:174:19)
Emitted 'error' event at:
    at Process.ChildProcess._handle.onexit (internal/child_process.js:223:12)
    at onErrorNT (internal/child_process.js:394:16)
    at process._tickCallback (internal/process/next_tick.js:174:19)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-child-process-exit-code.js

                                                               
[01:32|%   9|+ 136|-  57]: release test-child-process-flush-stdio 
                                                                 
[01:32|%   9|+ 137|-  57]: release test-child-process-fork 
                                                          
[01:32|%   9|+ 138|-  57]: release test-child-process-fork-and-spawn 
                                                                    
[01:33|%   9|+ 139|-  57]: release test-child-process-fork-close 
                                                                
[01:33|%   9|+ 140|-  57]: release test-child-process-fork-closed-channel-s... 
                                                                              
[01:34|%   9|+ 141|-  57]: release test-child-process-fork-dgram 
                                                                
[01:34|%   9|+ 142|-  57]: release test-child-process-fork-exec-argv 
                                                                    
[01:34|%   9|+ 143|-  57]: release test-child-process-fork-exec-path 
                                                                    
[01:35|%   9|+ 144|-  57]: release test-child-process-fork-net 
                                                              
=== release test-child-process-fork-net ===
Path: parallel/test-child-process-fork-net
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-child-process-fork-net.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-child-process-fork-net.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: CHILD: died with 1, null
    at ChildProcess.<anonymous> (/home/zhanglei/src/node/test/parallel/test-child-process-fork-net.js:86:12)
    at ChildProcess.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-child-process-fork-net.js

                                                              
[01:35|%   9|+ 144|-  58]: release test-child-process-fork-net2 
                                                               
=== release test-child-process-fork-net2 ===
Path: parallel/test-child-process-fork-net2
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-child-process-fork-net2.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-child-process-fork-net2.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
events.js:167
      throw er; // Unhandled 'error' event
      ^

Error [ERR_IPC_DISCONNECTED]: IPC channel is already disconnected
    at ChildProcess.target.disconnect (internal/child_process.js:753:26)
    at Timeout._onTimeout (/home/zhanglei/src/node/test/parallel/test-child-process-fork-net2.js:155:14)
    at ontimeout (timers.js:427:11)
    at tryOnTimeout (timers.js:289:5)
    at listOnTimeout (timers.js:252:5)
    at Timer.processTimers (timers.js:212:10)
Emitted 'error' event at:
    at ChildProcess.target.disconnect (internal/child_process.js:753:12)
    at Timeout._onTimeout (/home/zhanglei/src/node/test/parallel/test-child-process-fork-net2.js:155:14)
    [... lines matching original stack trace ...]
    at Timer.processTimers (timers.js:212:10)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-child-process-fork-net2.js

                                                               
[01:36|%   9|+ 144|-  59]: release test-child-process-fork-no-shell 
                                                                   
[01:36|%   9|+ 145|-  59]: release test-child-process-fork-ref 
                                                              
[01:37|%   9|+ 146|-  59]: release test-child-process-fork-ref2 
                                                               
[01:38|%   9|+ 147|-  59]: release test-child-process-fork-stdio 
                                                                
[01:38|%   9|+ 148|-  59]: release test-child-process-fork-stdio-string-var... 
                                                                              
[01:38|%   9|+ 149|-  59]: release test-child-process-fork3 
                                                           
[01:39|%   9|+ 150|-  59]: release test-child-process-internal 
                                                              
[01:39|%   9|+ 151|-  59]: release test-child-process-ipc 
                                                         
=== release test-child-process-ipc ===
Path: parallel/test-child-process-ipc
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-child-process-ipc.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-child-process-ipc.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
events.js:167
      throw er; // Unhandled 'error' event
      ^

Error: spawn /home/zhanglei/src/node/test/parallel/test-child-process-ipc.js EACCES
    at Process.ChildProcess._handle.onexit (internal/child_process.js:217:19)
    at onErrorNT (internal/child_process.js:394:16)
    at process._tickCallback (internal/process/next_tick.js:174:19)
Emitted 'error' event at:
    at Process.ChildProcess._handle.onexit (internal/child_process.js:223:12)
    at onErrorNT (internal/child_process.js:394:16)
    at process._tickCallback (internal/process/next_tick.js:174:19)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-child-process-ipc.js

                                                         
[01:39|%   9|+ 151|-  60]: release test-child-process-ipc-next-tick 
                                                                   
[01:40|%   9|+ 152|-  60]: release test-child-process-kill 
                                                          
[01:40|%   9|+ 153|-  60]: release test-child-process-promisified 
                                                                 
[01:41|%  10|+ 154|-  60]: release test-child-process-recv-handle 
                                                                 
[01:41|%  10|+ 155|-  60]: release test-child-process-send-after-close 
                                                                      
[01:41|%  10|+ 156|-  60]: release test-child-process-send-cb 
                                                             
=== release test-child-process-send-cb ===
Path: parallel/test-child-process-send-cb
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-child-process-send-cb.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-child-process-send-cb.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 1
+ 0
    at ChildProcess.child.on.common.mustCall (/home/zhanglei/src/node/test/parallel/test-child-process-send-cb.js:16:12)
    at ChildProcess.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-child-process-send-cb.js

                                                             
[01:42|%  10|+ 156|-  61]: release test-child-process-send-keep-open 
                                                                    
[01:42|%  10|+ 157|-  61]: release test-child-process-send-returns-boolean 
                                                                          
[01:42|%  10|+ 158|-  61]: release test-child-process-send-type-error 
                                                                     
[01:43|%  10|+ 159|-  61]: release test-child-process-send-utf8 
                                                               
[01:43|%  10|+ 160|-  61]: release test-child-process-set-blocking 
                                                                  
[01:43|%  10|+ 161|-  61]: release test-child-process-silent 
                                                            
[01:44|%  10|+ 162|-  61]: release test-child-process-spawn-argv0 
                                                                 
[01:44|%  10|+ 163|-  61]: release test-child-process-spawn-error 
                                                                 
[01:45|%  10|+ 164|-  61]: release test-child-process-spawn-shell 
                                                                 
[01:45|%  10|+ 165|-  61]: release test-child-process-spawn-typeerror 
                                                                     
[01:47|%  10|+ 166|-  61]: release test-child-process-spawnsync 
                                                               
[01:47|%  10|+ 167|-  61]: release test-child-process-spawnsync-env 
                                                                   
[01:48|%  10|+ 168|-  61]: release test-child-process-spawnsync-input 
                                                                     
[01:49|%  10|+ 169|-  61]: release test-child-process-spawnsync-kill-signal 
                                                                           
[01:49|%  10|+ 170|-  61]: release test-child-process-spawnsync-maxbuf 
                                                                      
[01:50|%  10|+ 171|-  61]: release test-child-process-spawnsync-shell 
                                                                     
[01:50|%  10|+ 172|-  61]: release test-child-process-spawnsync-timeout 
                                                                       
[01:51|%  10|+ 173|-  61]: release test-child-process-spawnsync-validation-... 
                                                                              
[01:51|%  11|+ 174|-  61]: release test-child-process-stdin 
                                                           
[01:52|%  11|+ 175|-  61]: release test-child-process-stdin-ipc 
                                                               
[01:52|%  11|+ 176|-  61]: release test-child-process-stdio 
                                                           
[01:52|%  11|+ 177|-  61]: release test-child-process-stdio-big-write-end 
                                                                         
[01:53|%  11|+ 178|-  61]: release test-child-process-stdio-inherit 
                                                                   
[01:53|%  11|+ 179|-  61]: release test-child-process-stdout-flush 
                                                                  
=== release test-child-process-stdout-flush ===
Path: parallel/test-child-process-stdout-flush
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-child-process-stdout-flush.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-child-process-stdout-flush.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
TypeError: Cannot read property 'setEncoding' of undefined Unhandled Rejection at Promise Promise {
  <rejected> 'TypeError: Cannot read property \'setEncoding\' of undefined' }
events.js:167
      throw er; // Unhandled 'error' event
      ^

Error: spawn /home/zhanglei/src/node/test/parallel/test-child-process-stdout-flush.js EACCES
    at Process.ChildProcess._handle.onexit (internal/child_process.js:217:19)
    at onErrorNT (internal/child_process.js:394:16)
    at process._tickCallback (internal/process/next_tick.js:174:19)
Emitted 'error' event at:
    at Process.ChildProcess._handle.onexit (internal/child_process.js:223:12)
    at onErrorNT (internal/child_process.js:394:16)
    at process._tickCallback (internal/process/next_tick.js:174:19)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-child-process-stdout-flush.js

                                                                  
[01:53|%  11|+ 179|-  62]: release test-child-process-stdout-flush-exit 
                                                                       
=== release test-child-process-stdout-flush-exit ===
Path: parallel/test-child-process-stdout-flush-exit
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-child-process-stdout-flush-exit.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-child-process-stdout-flush-exit.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
events.js:167
      throw er; // Unhandled 'error' event
      ^

Error: spawn /home/zhanglei/src/node/test/parallel/test-child-process-stdout-flush-exit.js EACCES
    at Process.ChildProcess._handle.onexit (internal/child_process.js:217:19)
    at onErrorNT (internal/child_process.js:394:16)
    at process._tickCallback (internal/process/next_tick.js:174:19)
Emitted 'error' event at:
    at Process.ChildProcess._handle.onexit (internal/child_process.js:223:12)
    at onErrorNT (internal/child_process.js:394:16)
    at process._tickCallback (internal/process/next_tick.js:174:19)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-child-process-stdout-flush-exit.js

                                                                       
[01:54|%  11|+ 179|-  63]: release test-child-process-stdout-ipc 
                                                                
[01:54|%  11|+ 180|-  63]: release test-child-process-uid-gid 
                                                             
[01:54|%  11|+ 181|-  63]: release test-child-process-validate-stdio 
                                                                    
[01:55|%  11|+ 182|-  63]: release test-child-process-windows-hide 
                                                                  
[01:55|%  11|+ 183|-  63]: release test-cli-bad-options 
                                                       
[01:56|%  11|+ 184|-  63]: release test-cli-eval 
                                                
=== release test-cli-eval ===
Path: parallel/test-cli-eval
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cli-eval.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cli-eval.js' ]
Loaded as a module, exiting with status code 42.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[77191]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55bbafbcc048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55bbafbcd1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55bbafe4bbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x74d3fd0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cli-eval.js
--- CRASHED (Signal: 6) ---

                                                
[01:56|%  11|+ 184|-  64]: release test-cli-eval-event 
                                                      
[01:57|%  11|+ 185|-  64]: release test-cli-node-options 
                                                        
[01:59|%  11|+ 186|-  64]: release test-cli-node-options-disallowed 
                                                                   
[01:59|%  11|+ 187|-  64]: release test-cli-node-print-help 
                                                           
[01:59|%  11|+ 188|-  64]: release test-cli-syntax 
                                                  
[02:02|%  11|+ 189|-  64]: release test-cluster-basic 
                                                     
[02:02|%  11|+ 190|-  64]: release test-cluster-bind-privileged-port 
                                                                    
=== release test-cluster-bind-privileged-port ===
Path: parallel/test-cluster-bind-privileged-port
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-bind-privileged-port.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-bind-privileged-port.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 1
+ 0
    at Worker.cluster.fork.on.common.mustCall (/home/zhanglei/src/node/test/parallel/test-cluster-bind-privileged-port.js:36:12)
    at Worker.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at Worker.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:193:12)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-bind-privileged-port.js

                                                                    
[02:03|%  11|+ 190|-  65]: release test-cluster-bind-twice 
                                                          
[02:03|%  12|+ 191|-  65]: release test-cluster-cwd 
                                                   
[02:04|%  12|+ 192|-  65]: release test-cluster-dgram-1 
                                                       
=== release test-cluster-dgram-1 ===
Path: parallel/test-cluster-dgram-1
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-dgram-1.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-dgram-1.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 0
+ 10
    at Worker.worker.on.common.mustCall (/home/zhanglei/src/node/test/parallel/test-cluster-dgram-1.js:88:14)
    at Worker.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at Worker.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:193:12)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-dgram-1.js

                                                       
[02:04|%  12|+ 192|-  66]: release test-cluster-dgram-2 
                                                       
=== release test-cluster-dgram-2 ===
Path: parallel/test-cluster-dgram-2
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-dgram-2.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-dgram-2.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-dgram-2.js
--- TIMEOUT ---

                                                       
[04:05|%  12|+ 192|-  67]: release test-cluster-dgram-reuse 
                                                           
=== release test-cluster-dgram-reuse ===
Path: parallel/test-cluster-dgram-reuse
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-dgram-reuse.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-dgram-reuse.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 1
+ 0
    at Worker.cluster.fork.on.common.mustCall (/home/zhanglei/src/node/test/parallel/test-cluster-dgram-reuse.js:12:12)
    at Worker.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at Worker.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:193:12)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-dgram-reuse.js

                                                           
[04:05|%  12|+ 192|-  68]: release test-cluster-disconnect 
                                                          
[04:06|%  12|+ 193|-  68]: release test-cluster-disconnect-before-exit 
                                                                      
[04:06|%  12|+ 194|-  68]: release test-cluster-disconnect-exitedAfterDisco... 
                                                                              
=== release test-cluster-disconnect-exitedAfterDisconnect-race ===
Path: parallel/test-cluster-disconnect-exitedAfterDisconnect-race
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-disconnect-exitedAfterDisconnect-race.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-disconnect-exitedAfterDisconnect-race.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: worker exited with code: 1, expected 0
    at EventEmitter.cluster.on (/home/zhanglei/src/node/test/parallel/test-cluster-disconnect-exitedAfterDisconnect-race.js:12:12)
    at EventEmitter.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:194:13)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-disconnect-exitedAfterDisconnect-race.js

                                                                              
[04:06|%  12|+ 194|-  69]: release test-cluster-disconnect-idle-worker 
                                                                      
[04:07|%  12|+ 195|-  69]: release test-cluster-disconnect-leak 
                                                               
[04:07|%  12|+ 196|-  69]: release test-cluster-disconnect-race 
                                                               
=== release test-cluster-disconnect-race ===
Path: parallel/test-cluster-disconnect-race
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-disconnect-race.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-disconnect-race.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: worker exited with error code 1
    at EventEmitter.<anonymous> (/home/zhanglei/src/node/test/parallel/test-cluster-disconnect-race.js:27:12)
    at EventEmitter.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at EventEmitter.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:194:13)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-disconnect-race.js

                                                               
[04:08|%  12|+ 196|-  70]: release test-cluster-disconnect-unshared-tcp 
                                                                       
[04:08|%  12|+ 197|-  70]: release test-cluster-disconnect-unshared-udp 
                                                                       
[04:08|%  12|+ 198|-  70]: release test-cluster-disconnect-with-no-workers 
                                                                          
[04:09|%  12|+ 199|-  70]: release test-cluster-eaccess 
                                                       
[04:09|%  12|+ 200|-  70]: release test-cluster-eaddrinuse 
                                                          
[04:10|%  12|+ 201|-  70]: release test-cluster-fork-env 
                                                        
[04:10|%  12|+ 202|-  70]: release test-cluster-fork-stdio 
                                                          
=== release test-cluster-fork-stdio ===
Path: parallel/test-cluster-fork-stdio
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-fork-stdio.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-fork-stdio.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
events.js:167
      throw er; // Unhandled 'error' event
      ^

Error: read ECONNRESET
    at Pipe.onread (net.js:659:25)
Emitted 'error' event at:
    at emitErrorNT (internal/streams/destroy.js:92:8)
    at emitErrorAndCloseNT (internal/streams/destroy.js:59:3)
    at process._tickCallback (internal/process/next_tick.js:174:19)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-fork-stdio.js

                                                          
[04:10|%  12|+ 202|-  71]: release test-cluster-fork-windowsHide 
                                                                
=== release test-cluster-fork-windowsHide ===
Path: parallel/test-cluster-fork-windowsHide
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-fork-windowsHide.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-fork-windowsHide.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
events.js:167
      throw er; // Unhandled 'error' event
      ^

Error: spawn /home/zhanglei/src/node/test/parallel/test-cluster-fork-windowsHide.js EACCES
    at Process.ChildProcess._handle.onexit (internal/child_process.js:217:19)
    at onErrorNT (internal/child_process.js:394:16)
    at process._tickCallback (internal/process/next_tick.js:174:19)
Emitted 'error' event at:
    at Process.ChildProcess._handle.onexit (internal/child_process.js:223:12)
    at onErrorNT (internal/child_process.js:394:16)
    at process._tickCallback (internal/process/next_tick.js:174:19)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-fork-windowsHide.js

                                                                
[04:10|%  12|+ 202|-  72]: release test-cluster-http-pipe 
                                                         
[04:11|%  12|+ 203|-  72]: release test-cluster-invalid-message 
                                                               
=== release test-cluster-invalid-message ===
Path: parallel/test-cluster-invalid-message
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-invalid-message.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-invalid-message.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 1
+ 0
    at Worker.worker.on.common.mustCall (/home/zhanglei/src/node/test/parallel/test-cluster-invalid-message.js:10:12)
    at Worker.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at Worker.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:193:12)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-invalid-message.js

                                                               
[04:11|%  12|+ 203|-  73]: release test-cluster-ipc-throw 
                                                         
[04:12|%  12|+ 204|-  73]: release test-cluster-kill-disconnect 
                                                               
=== release test-cluster-kill-disconnect ===
Path: parallel/test-cluster-kill-disconnect
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-kill-disconnect.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-kill-disconnect.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- false
+ true
    at Worker.worker.on.common.mustCall (/home/zhanglei/src/node/test/parallel/test-cluster-kill-disconnect.js:16:14)
    at Worker.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at Worker.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:215:12)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at finish (internal/child_process.js:782:14)
    at process._tickCallback (internal/process/next_tick.js:172:11)
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-kill-disconnect.js

                                                               
[04:12|%  13|+ 204|-  74]: release test-cluster-listening-port 
                                                              
[04:12|%  13|+ 205|-  74]: release test-cluster-master-error 
                                                            
[04:13|%  13|+ 206|-  74]: release test-cluster-master-kill 
                                                           
=== release test-cluster-master-kill ===
Path: parallel/test-cluster-master-kill
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-master-kill.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-master-kill.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 1
+ 0
    at ChildProcess.master.on.common.mustCall (/home/zhanglei/src/node/test/parallel/test-cluster-master-kill.js:68:12)
    at ChildProcess.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-master-kill.js

                                                           
[04:13|%  13|+ 206|-  75]: release test-cluster-message 
                                                       
[04:13|%  13|+ 207|-  75]: release test-cluster-net-listen 
                                                          
=== release test-cluster-net-listen ===
Path: parallel/test-cluster-net-listen
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-net-listen.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-net-listen.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 1
+ 0
    at Worker.<anonymous> (/home/zhanglei/src/node/test/parallel/test-cluster-net-listen.js:31:12)
    at Worker.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at Worker.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:193:12)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-net-listen.js

                                                          
[04:14|%  13|+ 207|-  76]: release test-cluster-net-listen-relative-path 
                                                                        
=== release test-cluster-net-listen-relative-path ===
Path: parallel/test-cluster-net-listen-relative-path
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-net-listen-relative-path.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-net-listen-relative-path.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/test/.tmp.0/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 1
+ 0
    at Worker.<anonymous> (/home/zhanglei/src/node/test/parallel/test-cluster-net-listen-relative-path.js:29:12)
    at Worker.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at Worker.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:193:12)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-net-listen-relative-path.js

                                                                        
[04:14|%  13|+ 207|-  77]: release test-cluster-net-send 
                                                        
[04:15|%  13|+ 208|-  77]: release test-cluster-process-disconnect 
                                                                  
=== release test-cluster-process-disconnect ===
Path: parallel/test-cluster-process-disconnect
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-process-disconnect.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-process-disconnect.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Worker did not exit normally with code: 1
    at Worker.worker.on.common.mustCall (/home/zhanglei/src/node/test/parallel/test-cluster-process-disconnect.js:9:12)
    at Worker.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at Worker.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:193:12)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-process-disconnect.js

                                                                  
[04:15|%  13|+ 208|-  78]: release test-cluster-rr-domain-listen 
                                                                
=== release test-cluster-rr-domain-listen ===
Path: parallel/test-cluster-rr-domain-listen
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-rr-domain-listen.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-rr-domain-listen.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
out/Release/node[78215]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55c1cc8d7048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55c1cc8d81d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55c1ccb56bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x2366b588427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-rr-domain-listen.js
--- CRASHED (Signal: 6) ---

                                                                
[04:16|%  13|+ 208|-  79]: release test-cluster-rr-ref 
                                                      
[04:16|%  13|+ 209|-  79]: release test-cluster-send-deadlock 
                                                             
=== release test-cluster-send-deadlock ===
Path: parallel/test-cluster-send-deadlock
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-send-deadlock.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-send-deadlock.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Worker exited with an error code: 1
    at Worker.<anonymous> (/home/zhanglei/src/node/test/parallel/test-cluster-send-deadlock.js:34:12)
    at Worker.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:193:12)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-send-deadlock.js

                                                             
[04:16|%  13|+ 209|-  80]: release test-cluster-send-handle-twice 
                                                                 
=== release test-cluster-send-handle-twice ===
Path: parallel/test-cluster-send-handle-twice
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-send-handle-twice.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-send-handle-twice.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Worker exited with an error code: 1
    at Worker.<anonymous> (/home/zhanglei/src/node/test/parallel/test-cluster-send-handle-twice.js:38:14)
    at Worker.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at Worker.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:193:12)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-send-handle-twice.js

                                                                 
[04:17|%  13|+ 209|-  81]: release test-cluster-send-socket-to-worker-http-... 
                                                                              
=== release test-cluster-send-socket-to-worker-http-server ===
Path: parallel/test-cluster-send-socket-to-worker-http-server
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-send-socket-to-worker-http-server.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-send-socket-to-worker-http-server.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 1
+ 0
    at Worker.worker.on.common.mustCall (/home/zhanglei/src/node/test/parallel/test-cluster-send-socket-to-worker-http-server.js:20:12)
    at Worker.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at Worker.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:193:12)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:187:15)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-send-socket-to-worker-http-server.js

                                                                              
[04:17|%  13|+ 209|-  82]: release test-cluster-server-restart-none 
                                                                   
=== release test-cluster-server-restart-none ===
Path: parallel/test-cluster-server-restart-none
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-server-restart-none.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-server-restart-none.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: worker1 did not exit normally. exited with code 1
    at Worker.worker1.on.common.mustCall (/home/zhanglei/src/node/test/parallel/test-cluster-server-restart-none.js:24:12)
    at Worker.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at Worker.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:193:12)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-server-restart-none.js

                                                                   
[04:18|%  13|+ 209|-  83]: release test-cluster-server-restart-rr 
                                                                 
=== release test-cluster-server-restart-rr ===
Path: parallel/test-cluster-server-restart-rr
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-server-restart-rr.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-server-restart-rr.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: worker1 did not exit normally. Exit with code: 1
    at Worker.worker1.on.common.mustCall (/home/zhanglei/src/node/test/parallel/test-cluster-server-restart-rr.js:28:12)
    at Worker.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at Worker.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:193:12)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-server-restart-rr.js

                                                                 
[04:18|%  13|+ 209|-  84]: release test-cluster-setup-master 
                                                            
[04:18|%  13|+ 210|-  84]: release test-cluster-setup-master-argv 
                                                                 
[04:19|%  13|+ 211|-  84]: release test-cluster-setup-master-cumulative 
                                                                       
[04:19|%  13|+ 212|-  84]: release test-cluster-setup-master-emit 
                                                                 
[04:19|%  13|+ 213|-  84]: release test-cluster-setup-master-multiple 
                                                                     
[04:20|%  13|+ 214|-  84]: release test-cluster-shared-handle-bind-error 
                                                                        
=== release test-cluster-shared-handle-bind-error ===
Path: parallel/test-cluster-shared-handle-bind-error
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-shared-handle-bind-error.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-shared-handle-bind-error.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 1
+ 0
    at Worker.worker.on.common.mustCall (/home/zhanglei/src/node/test/parallel/test-cluster-shared-handle-bind-error.js:37:14)
    at Worker.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at Worker.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:193:12)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-shared-handle-bind-error.js

                                                                        
[04:20|%  14|+ 214|-  85]: release test-cluster-shared-handle-bind-privileg... 
                                                                              
=== release test-cluster-shared-handle-bind-privileged-port ===
Path: parallel/test-cluster-shared-handle-bind-privileged-port
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-shared-handle-bind-privileged-port.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-shared-handle-bind-privileged-port.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 1
+ 0
    at Worker.<anonymous> (/home/zhanglei/src/node/test/parallel/test-cluster-shared-handle-bind-privileged-port.js:38:12)
    at Worker.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at Worker.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:193:12)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-shared-handle-bind-privileged-port.js

                                                                              
[04:21|%  14|+ 214|-  86]: release test-cluster-shared-leak 
                                                           
=== release test-cluster-shared-leak ===
Path: parallel/test-cluster-shared-leak
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-shared-leak.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-shared-leak.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 1
+ 0
    at EventEmitter.<anonymous> (/home/zhanglei/src/node/test/parallel/test-cluster-shared-leak.js:33:12)
    at EventEmitter.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:194:13)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-shared-leak.js

                                                           
[04:21|%  14|+ 214|-  87]: release test-cluster-uncaught-exception 
                                                                  
[04:21|%  14|+ 215|-  87]: release test-cluster-worker-constructor 
                                                                  
[04:22|%  14|+ 216|-  87]: release test-cluster-worker-death 
                                                            
=== release test-cluster-worker-death ===
Path: parallel/test-cluster-worker-death
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-worker-death.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-worker-death.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 1
+ 42
    at Worker.<anonymous> (/home/zhanglei/src/node/test/parallel/test-cluster-worker-death.js:32:12)
    at Worker.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at Worker.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:193:12)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-worker-death.js

                                                            
[04:22|%  14|+ 216|-  88]: release test-cluster-worker-destroy 
                                                              
[04:22|%  14|+ 217|-  88]: release test-cluster-worker-disconnect 
                                                                 
[04:23|%  14|+ 218|-  88]: release test-cluster-worker-disconnect-on-error 
                                                                          
[04:23|%  14|+ 219|-  88]: release test-cluster-worker-events 
                                                             
=== release test-cluster-worker-events ===
Path: parallel/test-cluster-worker-events
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-worker-events.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-worker-events.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 1
+ 2
    at Worker.<anonymous> (/home/zhanglei/src/node/test/parallel/test-cluster-worker-events.js:34:12)
    at Worker.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:193:12)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-worker-events.js

                                                             
[04:23|%  14|+ 219|-  89]: release test-cluster-worker-exit 
                                                           
=== release test-cluster-worker-exit ===
Path: parallel/test-cluster-worker-exit
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-worker-exit.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-worker-exit.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
Trace: { AssertionError [ERR_ASSERTION]: the cluster exited w/ incorrect exitCode [expected: 42 / actual: 1]
    at checkResults (/home/zhanglei/src/node/test/parallel/test-cluster-worker-exit.js:126:12)
    at finish_test (/home/zhanglei/src/node/test/parallel/test-cluster-worker-exit.js:106:7)
    at process.nextTick (/home/zhanglei/src/node/test/parallel/test-cluster-worker-exit.js:100:30)
    at process._tickCallback (internal/process/next_tick.js:172:11)
  generatedMessage: false,
  name: 'AssertionError [ERR_ASSERTION]',
  code: 'ERR_ASSERTION',
  actual: 1,
  expected: 42,
  operator: 'strictEqual' }
    at finish_test (/home/zhanglei/src/node/test/parallel/test-cluster-worker-exit.js:109:17)
    at process.nextTick (/home/zhanglei/src/node/test/parallel/test-cluster-worker-exit.js:100:30)
    at process._tickCallback (internal/process/next_tick.js:172:11)
out/Release/node[78517]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x5614e5cbb048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x5614e5cbc1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x5614e5f3abca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x186b1f68427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-worker-exit.js
--- CRASHED (Signal: 6) ---

                                                           
[04:24|%  14|+ 219|-  90]: release test-cluster-worker-forced-exit 
                                                                  
=== release test-cluster-worker-forced-exit ===
Path: parallel/test-cluster-worker-forced-exit
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-worker-forced-exit.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-worker-forced-exit.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 1
+ 42
    at Worker.<anonymous> (/home/zhanglei/src/node/test/parallel/test-cluster-worker-forced-exit.js:55:14)
    at Worker.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at Worker.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:193:12)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-worker-forced-exit.js

                                                                  
[04:24|%  14|+ 219|-  91]: release test-cluster-worker-init 
                                                           
[04:25|%  14|+ 220|-  91]: release test-cluster-worker-isconnected 
                                                                  
[04:25|%  14|+ 221|-  91]: release test-cluster-worker-isdead 
                                                             
[04:25|%  14|+ 222|-  91]: release test-cluster-worker-kill 
                                                           
[04:26|%  14|+ 223|-  91]: release test-cluster-worker-no-exit 
                                                              
=== release test-cluster-worker-no-exit ===
Path: parallel/test-cluster-worker-no-exit
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-cluster-worker-no-exit.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-cluster-worker-no-exit.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-cluster-worker-no-exit.js
--- TIMEOUT ---

                                                              
[06:26|%  14|+ 223|-  92]: release test-cluster-worker-wait-server-close 
                                                                        
[06:26|%  14|+ 224|-  92]: release test-common 
                                              
=== release test-common ===
Path: parallel/test-common
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-common.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-common.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
AssertionError [ERR_ASSERTION]: Input A expected to strictly deep-equal input B:
+ expected - actual

  [
-   '__in_napa',
-   '__zone_id',
-   '__worker_id',
-   'require',
-   '__napa_zone_call__',
-   '__zone_events_listeners',
-   '__emit_zone_event',
-   'napa',
-   '__recycle',
    'gc'
  ] Unhandled Rejection at Promise Promise {
  <rejected> 'AssertionError [ERR_ASSERTION]: Input A expected to strictly deep-equal input B:\n+ expected - actual\n\n  [\n-   \'__in_napa\',\n-   \'__zone_id\',\n-   \'__worker_id\',\n-   \'require\',\n-   \'__napa_zone_call__\',\n-   \'__zone_events_listeners\',\n-   \'__emit_zone_event\',\n-   \'napa\',\n-   \'__recycle\',\n    \'gc\'\n  ]' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-common.js

                                              
[06:27|%  14|+ 224|-  93]: release test-common-countdown 
                                                        
=== release test-common-countdown ===
Path: parallel/test-common-countdown
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-common-countdown.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-common-countdown.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- ''
+ 'Mismatched <anonymous> function calls. Expected exactly 1, actual 0.'
    at common.mustCall (/home/zhanglei/src/node/test/parallel/test-common-countdown.js:31:12)
    at /home/zhanglei/src/node/test/common/index.js:475:15
    at exithandler (child_process.js:289:5)
    at ChildProcess.errorhandler (child_process.js:301:5)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:223:12)
    at onErrorNT (internal/child_process.js:394:16)
    at process._tickCallback (internal/process/next_tick.js:174:19)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-common-countdown.js

                                                        
[06:27|%  14|+ 224|-  94]: release test-common-must-not-call 
                                                            
[06:27|%  14|+ 225|-  94]: release test-console 
                                               
[06:28|%  15|+ 226|-  94]: release test-console-assign-undefined 
                                                                
[06:28|%  15|+ 227|-  94]: release test-console-async-write-error 
                                                                 
[06:28|%  15|+ 228|-  94]: release test-console-clear 
                                                     
[06:28|%  15|+ 229|-  94]: release test-console-count 
                                                     
[06:29|%  15|+ 230|-  94]: release test-console-group 
                                                     
[06:29|%  15|+ 231|-  94]: release test-console-instance 
                                                        
[06:29|%  15|+ 232|-  94]: release test-console-is-a-namespace 
                                                              
[06:30|%  15|+ 233|-  94]: release test-console-log-stdio-broken-dest 
                                                                     
[06:30|%  15|+ 234|-  94]: release test-console-no-swallow-stack-overflow 
                                                                         
[06:30|%  15|+ 235|-  94]: release test-console-not-call-toString 
                                                                 
[06:31|%  15|+ 236|-  94]: release test-console-sync-write-error 
                                                                
[06:31|%  15|+ 237|-  94]: release test-console-table 
                                                     
[06:31|%  15|+ 238|-  94]: release test-console-tty-colors 
                                                          
[06:32|%  15|+ 239|-  94]: release test-constants 
                                                 
[06:32|%  15|+ 240|-  94]: release test-crypto 
                                              
[06:32|%  15|+ 241|-  94]: release test-crypto-authenticated 
                                                            
[06:33|%  15|+ 242|-  94]: release test-crypto-binary-default 
                                                             
[06:33|%  15|+ 243|-  94]: release test-crypto-certificate 
                                                          
[06:33|%  15|+ 244|-  94]: release test-crypto-cipher-decipher 
                                                              
[06:34|%  15|+ 245|-  94]: release test-crypto-cipheriv-decipheriv 
                                                                  
[06:34|%  15|+ 246|-  94]: release test-crypto-classes 
                                                      
[06:34|%  15|+ 247|-  94]: release test-crypto-deprecated 
                                                         
[06:35|%  16|+ 248|-  94]: release test-crypto-dh 
                                                 
[06:35|%  16|+ 249|-  94]: release test-crypto-dh-leak 
                                                      
[06:36|%  16|+ 250|-  94]: release test-crypto-dh-odd-key 
                                                         
[06:36|%  16|+ 251|-  94]: release test-crypto-dh-padding 
                                                         
[06:36|%  16|+ 252|-  94]: release test-crypto-domain 
                                                     
=== release test-crypto-domain ===
Path: parallel/test-crypto-domain
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-crypto-domain.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-crypto-domain.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: BAM Unhandled Rejection at Promise Promise { <rejected> 'Error: BAM' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-crypto-domain.js

                                                     
[06:37|%  16|+ 252|-  95]: release test-crypto-domains 
                                                      
[06:37|%  16|+ 253|-  95]: release test-crypto-ecb 
                                                  
[06:37|%  16|+ 254|-  95]: release test-crypto-ecdh-convert-key 
                                                               
[06:38|%  16|+ 255|-  95]: release test-crypto-engine 
                                                     
[06:38|%  16|+ 256|-  95]: release test-crypto-fips 
                                                   
[06:39|%  16|+ 257|-  95]: release test-crypto-from-binary 
                                                          
[06:39|%  16|+ 258|-  95]: release test-crypto-hash 
                                                   
[06:40|%  16|+ 259|-  95]: release test-crypto-hash-stream-pipe 
                                                               
[06:40|%  16|+ 260|-  95]: release test-crypto-hmac 
                                                   
[06:40|%  16|+ 261|-  95]: release test-crypto-lazy-transform-writable 
                                                                      
[06:40|%  16|+ 262|-  95]: release test-crypto-padding 
                                                      
[06:41|%  16|+ 263|-  95]: release test-crypto-padding-aes256 
                                                             
[06:41|%  16|+ 264|-  95]: release test-crypto-pbkdf2 
                                                     
[06:41|%  16|+ 265|-  95]: release test-crypto-random 
                                                     
[06:42|%  16|+ 266|-  95]: release test-crypto-rsa-dsa 
                                                      
[06:42|%  16|+ 267|-  95]: release test-crypto-sign-verify 
                                                          
[06:42|%  17|+ 268|-  95]: release test-crypto-stream 
                                                     
[06:43|%  17|+ 269|-  95]: release test-crypto-tostring-segfault 
                                                                
[06:43|%  17|+ 270|-  95]: release test-crypto-verify-failure 
                                                             
[06:43|%  17|+ 271|-  95]: release test-cwd-enoent 
                                                  
[06:44|%  17|+ 272|-  95]: release test-cwd-enoent-preload 
                                                          
[06:44|%  17|+ 273|-  95]: release test-cwd-enoent-repl 
                                                       
[06:45|%  17|+ 274|-  95]: release test-debug-args 
                                                  
=== release test-debug-args ===
Path: parallel/test-debug-args
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-debug-args.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-debug-args.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(process.execArgv.includes('--debug-code'))
 Unhandled Rejection at Promise Promise {
  <rejected> 'AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:\n\n  assert(process.execArgv.includes(\'--debug-code\'))\n' }
Command: out/Release/node --debug-code /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-debug-args.js

                                                  
[06:45|%  17|+ 274|-  96]: release test-debug-usage 
                                                   
[06:45|%  17|+ 275|-  96]: release test-debugger-pid 
                                                    
[06:46|%  17|+ 276|-  96]: release test-delayed-require 
                                                       
[06:46|%  17|+ 277|-  96]: release test-dgram-address 
                                                     
[06:46|%  17|+ 278|-  96]: release test-dgram-bind 
                                                  
[06:47|%  17|+ 279|-  96]: release test-dgram-bind-default-address 
                                                                  
[06:47|%  17|+ 280|-  96]: release test-dgram-bytes-length 
                                                          
[06:47|%  17|+ 281|-  96]: release test-dgram-close 
                                                   
[06:48|%  17|+ 282|-  96]: release test-dgram-close-during-bind 
                                                               
[06:48|%  17|+ 283|-  96]: release test-dgram-close-in-listening 
                                                                
[06:48|%  17|+ 284|-  96]: release test-dgram-close-is-not-callback 
                                                                   
[06:48|%  17|+ 285|-  96]: release test-dgram-cluster-bind-error 
                                                                
[06:49|%  17|+ 286|-  96]: release test-dgram-cluster-close-during-bind 
                                                                       
[06:49|%  17|+ 287|-  96]: release test-dgram-create-socket-handle 
                                                                  
[06:49|%  18|+ 288|-  96]: release test-dgram-createSocket-type 
                                                               
[06:50|%  18|+ 289|-  96]: release test-dgram-custom-lookup 
                                                           
[06:50|%  18|+ 290|-  96]: release test-dgram-error-message-address 
                                                                   
[06:50|%  18|+ 291|-  96]: release test-dgram-exclusive-implicit-bind 
                                                                     
=== release test-dgram-exclusive-implicit-bind ===
Path: parallel/test-dgram-exclusive-implicit-bind
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-dgram-exclusive-implicit-bind.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-dgram-exclusive-implicit-bind.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-dgram-exclusive-implicit-bind.js
--- TIMEOUT ---

                                                                     
[08:50|%  18|+ 291|-  97]: release test-dgram-implicit-bind 
                                                           
[08:51|%  18|+ 292|-  97]: release test-dgram-listen-after-bind 
                                                               
[08:51|%  18|+ 293|-  97]: release test-dgram-membership 
                                                        
[08:51|%  18|+ 294|-  97]: release test-dgram-msgsize 
                                                     
[08:51|%  18|+ 295|-  97]: release test-dgram-multicast-loopback 
                                                                
[08:52|%  18|+ 296|-  97]: release test-dgram-multicast-set-interface 
                                                                     
[08:52|%  18|+ 297|-  97]: release test-dgram-multicast-setTTL 
                                                              
[08:52|%  18|+ 298|-  97]: release test-dgram-oob-buffer 
                                                        
[08:53|%  18|+ 299|-  97]: release test-dgram-recv-error 
                                                        
[08:53|%  18|+ 300|-  97]: release test-dgram-ref 
                                                 
[08:53|%  18|+ 301|-  97]: release test-dgram-send-address-types 
                                                                
[08:53|%  18|+ 302|-  97]: release test-dgram-send-bad-arguments 
                                                                
[08:54|%  18|+ 303|-  97]: release test-dgram-send-callback-buffer 
                                                                  
[08:54|%  18|+ 304|-  97]: release test-dgram-send-callback-buffer-empty-ad... 
                                                                              
[08:54|%  18|+ 305|-  97]: release test-dgram-send-callback-buffer-length 
                                                                         
[08:55|%  18|+ 306|-  97]: release test-dgram-send-callback-buffer-length-e... 
                                                                              
[08:55|%  18|+ 307|-  97]: release test-dgram-send-callback-multi-buffer 
                                                                        
[08:55|%  18|+ 308|-  97]: release test-dgram-send-callback-multi-buffer-em... 
                                                                              
[08:55|%  19|+ 309|-  97]: release test-dgram-send-callback-recursive 
                                                                     
[08:56|%  19|+ 310|-  97]: release test-dgram-send-default-host 
                                                               
[08:56|%  19|+ 311|-  97]: release test-dgram-send-empty-array 
                                                              
[08:56|%  19|+ 312|-  97]: release test-dgram-send-empty-buffer 
                                                               
[08:57|%  19|+ 313|-  97]: release test-dgram-send-empty-packet 
                                                               
[08:57|%  19|+ 314|-  97]: release test-dgram-send-error 
                                                        
[08:57|%  19|+ 315|-  97]: release test-dgram-send-invalid-msg-type 
                                                                   
[08:57|%  19|+ 316|-  97]: release test-dgram-send-multi-buffer-copy 
                                                                    
[08:58|%  19|+ 317|-  97]: release test-dgram-send-multi-string-array 
                                                                     
[08:58|%  19|+ 318|-  97]: release test-dgram-sendto 
                                                    
[08:58|%  19|+ 319|-  97]: release test-dgram-setBroadcast 
                                                          
[08:59|%  19|+ 320|-  97]: release test-dgram-setTTL 
                                                    
[08:59|%  19|+ 321|-  97]: release test-dgram-socket-buffer-size 
                                                                
[08:59|%  19|+ 322|-  97]: release test-dgram-udp4 
                                                  
[09:00|%  19|+ 323|-  97]: release test-dgram-udp6-send-default-host 
                                                                    
[09:00|%  19|+ 324|-  97]: release test-dgram-unref 
                                                   
[09:00|%  19|+ 325|-  97]: release test-dns 
                                           
[09:01|%  19|+ 326|-  97]: release test-dns-cancel-reverse-lookup 
                                                                 
[09:01|%  19|+ 327|-  97]: release test-dns-channel-cancel 
                                                          
[09:01|%  19|+ 328|-  97]: release test-dns-lookup 
                                                  
[09:01|%  19|+ 329|-  97]: release test-dns-multi-channel 
                                                         
[09:02|%  20|+ 330|-  97]: release test-dns-resolveany 
                                                      
[09:02|%  20|+ 331|-  97]: release test-dns-resolveany-bad-ancount 
                                                                  
[09:02|%  20|+ 332|-  97]: release test-dns-resolvens-typeerror 
                                                               
[09:03|%  20|+ 333|-  97]: release test-dns-setserver-when-querying 
                                                                   
[09:03|%  20|+ 334|-  97]: release test-domain-abort-on-uncaught 
                                                                
=== release test-domain-abort-on-uncaught ===
Path: parallel/test-domain-abort-on-uncaught
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-domain-abort-on-uncaught.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-domain-abort-on-uncaught.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
/bin/sh: 1: /home/zhanglei/src/node/test/parallel/test-domain-abort-on-uncaught.js: Permission denied
AssertionError [ERR_ASSERTION]: Test index 0 failed: Error: Command failed: ulimit -c 0 && "/home/zhanglei/src/node/test/parallel/test-domain-abort-on-uncaught.js" --abort-on-uncaught-exception "undefined" child 0
/bin/sh: 1: /home/zhanglei/src/node/test/parallel/test-domain-abort-on-uncaught.js: Permission denied
 Unhandled Rejection at Promise Promise {
  <rejected> 'AssertionError [ERR_ASSERTION]: Test index 0 failed: Error: Command failed: ulimit -c 0 && "/home/zhanglei/src/node/test/parallel/test-domain-abort-on-uncaught.js" --abort-on-uncaught-exception "undefined" child 0\n/bin/sh: 1: /home/zhanglei/src/node/test/parallel/test-domain-abort-on-uncaught.js: Permission denied\n' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-domain-abort-on-uncaught.js

                                                                
[09:03|%  20|+ 334|-  98]: release test-domain-bind-timeout 
                                                           
[09:03|%  20|+ 335|-  98]: release test-domain-crypto 
                                                     
[09:04|%  20|+ 336|-  98]: release test-domain-ee 
                                                 
[09:04|%  20|+ 337|-  98]: release test-domain-ee-error-listener 
                                                                
[09:04|%  20|+ 338|-  98]: release test-domain-ee-implicit 
                                                          
[09:04|%  20|+ 339|-  98]: release test-domain-enter-exit 
                                                         
[09:05|%  20|+ 340|-  98]: release test-domain-error-types 
                                                          
[09:05|%  20|+ 341|-  98]: release test-domain-from-timer 
                                                         
[09:05|%  20|+ 342|-  98]: release test-domain-fs-enoent-stream 
                                                               
[09:06|%  20|+ 343|-  98]: release test-domain-http-server 
                                                          
[09:06|%  20|+ 344|-  98]: release test-domain-implicit-binding 
                                                               
[09:06|%  20|+ 345|-  98]: release test-domain-implicit-fs 
                                                          
[09:07|%  20|+ 346|-  98]: release test-domain-intercept 
                                                        
[09:07|%  20|+ 347|-  98]: release test-domain-load-after-set-uncaught-exce... 
                                                                              
[09:07|%  20|+ 348|-  98]: release test-domain-multi 
                                                    
[09:08|%  20|+ 349|-  98]: release test-domain-multiple-errors 
                                                              
[09:08|%  21|+ 350|-  98]: release test-domain-nested 
                                                     
=== release test-domain-nested ===
Path: parallel/test-domain-nested
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-domain-nested.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-domain-nested.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: died Unhandled Rejection at Promise Promise { <rejected> 'Error: died' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-domain-nested.js

                                                     
[09:08|%  21|+ 350|-  99]: release test-domain-nested-throw 
                                                           
[09:08|%  21|+ 351|-  99]: release test-domain-nexttick 
                                                       
[09:09|%  21|+ 352|-  99]: release test-domain-no-error-handler-abort-on-un... 
                                                                              
=== release test-domain-no-error-handler-abort-on-uncaught-0 ===
Path: parallel/test-domain-no-error-handler-abort-on-uncaught-0
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-0.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-0.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Test should have aborted but instead exited with exit code 126 and signal null
    at ChildProcess.onExit (/home/zhanglei/src/node/test/common/index.js:253:5)
    at ChildProcess.emit (events.js:182:13)
    at ChildProcess.EventEmitter.emit (domain.js:442:20)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-0.js

                                                                              
[09:09|%  21|+ 352|- 100]: release test-domain-no-error-handler-abort-on-un... 
                                                                              
=== release test-domain-no-error-handler-abort-on-uncaught-1 ===
Path: parallel/test-domain-no-error-handler-abort-on-uncaught-1
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-1.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-1.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Test should have aborted but instead exited with exit code 126 and signal null
    at ChildProcess.onExit (/home/zhanglei/src/node/test/common/index.js:253:5)
    at ChildProcess.emit (events.js:182:13)
    at ChildProcess.EventEmitter.emit (domain.js:442:20)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-1.js

                                                                              
[09:09|%  21|+ 352|- 101]: release test-domain-no-error-handler-abort-on-un... 
                                                                              
=== release test-domain-no-error-handler-abort-on-uncaught-2 ===
Path: parallel/test-domain-no-error-handler-abort-on-uncaught-2
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-2.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-2.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Test should have aborted but instead exited with exit code 126 and signal null
    at ChildProcess.onExit (/home/zhanglei/src/node/test/common/index.js:253:5)
    at ChildProcess.emit (events.js:182:13)
    at ChildProcess.EventEmitter.emit (domain.js:442:20)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-2.js

                                                                              
[09:10|%  21|+ 352|- 102]: release test-domain-no-error-handler-abort-on-un... 
                                                                              
=== release test-domain-no-error-handler-abort-on-uncaught-3 ===
Path: parallel/test-domain-no-error-handler-abort-on-uncaught-3
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-3.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-3.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Test should have aborted but instead exited with exit code 126 and signal null
    at ChildProcess.onExit (/home/zhanglei/src/node/test/common/index.js:253:5)
    at ChildProcess.emit (events.js:182:13)
    at ChildProcess.EventEmitter.emit (domain.js:442:20)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-3.js

                                                                              
[09:10|%  21|+ 352|- 103]: release test-domain-no-error-handler-abort-on-un... 
                                                                              
=== release test-domain-no-error-handler-abort-on-uncaught-4 ===
Path: parallel/test-domain-no-error-handler-abort-on-uncaught-4
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-4.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-4.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Test should have aborted but instead exited with exit code 126 and signal null
    at ChildProcess.onExit (/home/zhanglei/src/node/test/common/index.js:253:5)
    at ChildProcess.emit (events.js:182:13)
    at ChildProcess.EventEmitter.emit (domain.js:442:20)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-4.js

                                                                              
[09:10|%  21|+ 352|- 104]: release test-domain-no-error-handler-abort-on-un... 
                                                                              
=== release test-domain-no-error-handler-abort-on-uncaught-5 ===
Path: parallel/test-domain-no-error-handler-abort-on-uncaught-5
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-5.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-5.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Test should have aborted but instead exited with exit code 126 and signal null
    at ChildProcess.onExit (/home/zhanglei/src/node/test/common/index.js:253:5)
    at ChildProcess.emit (events.js:182:13)
    at ChildProcess.EventEmitter.emit (domain.js:442:20)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-5.js

                                                                              
[09:10|%  21|+ 352|- 105]: release test-domain-no-error-handler-abort-on-un... 
                                                                              
=== release test-domain-no-error-handler-abort-on-uncaught-6 ===
Path: parallel/test-domain-no-error-handler-abort-on-uncaught-6
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-6.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-6.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Test should have aborted but instead exited with exit code 126 and signal null
    at ChildProcess.onExit (/home/zhanglei/src/node/test/common/index.js:253:5)
    at ChildProcess.emit (events.js:182:13)
    at ChildProcess.EventEmitter.emit (domain.js:442:20)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-6.js

                                                                              
[09:11|%  21|+ 352|- 106]: release test-domain-no-error-handler-abort-on-un... 
                                                                              
=== release test-domain-no-error-handler-abort-on-uncaught-7 ===
Path: parallel/test-domain-no-error-handler-abort-on-uncaught-7
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-7.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-7.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Test should have aborted but instead exited with exit code 126 and signal null
    at ChildProcess.onExit (/home/zhanglei/src/node/test/common/index.js:253:5)
    at ChildProcess.emit (events.js:182:13)
    at ChildProcess.EventEmitter.emit (domain.js:442:20)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-7.js

                                                                              
[09:11|%  21|+ 352|- 107]: release test-domain-no-error-handler-abort-on-un... 
                                                                              
=== release test-domain-no-error-handler-abort-on-uncaught-8 ===
Path: parallel/test-domain-no-error-handler-abort-on-uncaught-8
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-8.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-8.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Test should have aborted but instead exited with exit code 126 and signal null
    at ChildProcess.onExit (/home/zhanglei/src/node/test/common/index.js:253:5)
    at ChildProcess.emit (events.js:182:13)
    at ChildProcess.EventEmitter.emit (domain.js:442:20)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-8.js

                                                                              
[09:11|%  21|+ 352|- 108]: release test-domain-no-error-handler-abort-on-un... 
                                                                              
=== release test-domain-no-error-handler-abort-on-uncaught-9 ===
Path: parallel/test-domain-no-error-handler-abort-on-uncaught-9
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-9.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-9.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: Test should have aborted but instead exited with exit code 126 and signal null
    at ChildProcess.onExit (/home/zhanglei/src/node/test/common/index.js:253:5)
    at ChildProcess.emit (events.js:182:13)
    at ChildProcess.EventEmitter.emit (domain.js:442:20)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-domain-no-error-handler-abort-on-uncaught-9.js

                                                                              
[09:12|%  21|+ 352|- 109]: release test-domain-promise 
                                                      
[09:12|%  21|+ 353|- 109]: release test-domain-run 
                                                  
[09:12|%  21|+ 354|- 109]: release test-domain-safe-exit 
                                                        
[09:12|%  21|+ 355|- 109]: release test-domain-set-uncaught-exception-captu... 
                                                                              
[09:13|%  21|+ 356|- 109]: release test-domain-stack 
                                                    
[09:13|%  21|+ 357|- 109]: release test-domain-stack-empty-in-process-uncau... 
                                                                              
=== release test-domain-stack-empty-in-process-uncaughtexception ===
Path: parallel/test-domain-stack-empty-in-process-uncaughtexception
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-domain-stack-empty-in-process-uncaughtexception.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-domain-stack-empty-in-process-uncaughtexception.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: boom Unhandled Rejection at Promise Promise { <rejected> 'Error: boom' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-domain-stack-empty-in-process-uncaughtexception.js

                                                                              
[09:13|%  21|+ 357|- 110]: release test-domain-throw-error-then-throw-from-... 
                                                                              
=== release test-domain-throw-error-then-throw-from-uncaught-exception-handler ===
Path: parallel/test-domain-throw-error-then-throw-from-uncaught-exception-handler
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-domain-throw-error-then-throw-from-uncaught-exception-handler.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-domain-throw-error-then-throw-from-uncaught-exception-handler.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: stderr output must include proper uncaughtException handler's error's message
    at onTestDone (/home/zhanglei/src/node/test/parallel/test-domain-throw-error-then-throw-from-uncaught-exception-handler.js:59:7)
    at ChildProcess.exithandler (child_process.js:289:5)
    at ChildProcess.emit (events.js:182:13)
    at ChildProcess.EventEmitter.emit (domain.js:442:20)
    at maybeClose (internal/child_process.js:947:16)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:236:5)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-domain-throw-error-then-throw-from-uncaught-exception-handler.js

                                                                              
[09:14|%  21|+ 357|- 111]: release test-domain-timer 
                                                    
[09:14|%  21|+ 358|- 111]: release test-domain-timers 
                                                     
[09:14|%  22|+ 359|- 111]: release test-domain-timers-uncaught-exception 
                                                                        
[09:14|%  22|+ 360|- 111]: release test-domain-top-level-error-handler-clea... 
                                                                              
=== release test-domain-top-level-error-handler-clears-stack ===
Path: parallel/test-domain-top-level-error-handler-clears-stack
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-domain-top-level-error-handler-clears-stack.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-domain-top-level-error-handler-clears-stack.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: Error from domain Unhandled Rejection at Promise Promise { <rejected> 'Error: Error from domain' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-domain-top-level-error-handler-clears-stack.js

                                                                              
[09:15|%  22|+ 360|- 112]: release test-domain-top-level-error-handler-thro... 
                                                                              
=== release test-domain-top-level-error-handler-throw ===
Path: parallel/test-domain-top-level-error-handler-throw
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-domain-top-level-error-handler-throw.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-domain-top-level-error-handler-throw.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 1
+ 7
    at ChildProcess.onChildExited (/home/zhanglei/src/node/test/parallel/test-domain-top-level-error-handler-throw.js:48:14)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-domain-top-level-error-handler-throw.js

                                                                              
[09:15|%  22|+ 360|- 113]: release test-domain-uncaught-exception 
                                                                 
[09:16|%  22|+ 361|- 113]: release test-domain-with-abort-on-uncaught-excep... 
                                                                              
=== release test-domain-with-abort-on-uncaught-exception ===
Path: parallel/test-domain-with-abort-on-uncaught-exception
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-domain-with-abort-on-uncaught-exception.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-domain-with-abort-on-uncaught-exception.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 126
+ 0
    at ChildProcess.onChildExited (/home/zhanglei/src/node/test/parallel/test-domain-with-abort-on-uncaught-exception.js:129:18)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-domain-with-abort-on-uncaught-exception.js

                                                                              
[09:16|%  22|+ 361|- 114]: release test-dsa-fips-invalid-key 
                                                            
=== release test-dsa-fips-invalid-key ===
Path: parallel/test-dsa-fips-invalid-key
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-dsa-fips-invalid-key.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-dsa-fips-invalid-key.js' ]
1..0 # Skipped: node compiled without FIPS OpenSSL.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[80309]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55e7bc3fd048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55e7bc3fe1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55e7bc67cbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x2d8ac568427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-dsa-fips-invalid-key.js
--- CRASHED (Signal: 6) ---

                                                            
[09:17|%  22|+ 361|- 115]: release test-emit-after-uncaught-exception 
                                                                     
[09:17|%  22|+ 362|- 115]: release test-emit-after-uncaught-exception-runIn... 
                                                                              
[09:17|%  22|+ 363|- 115]: release test-env-var-no-warnings 
                                                           
[09:19|%  22|+ 364|- 115]: release test-error-reporting 
                                                       
=== release test-error-reporting ===
Path: parallel/test-error-reporting
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-error-reporting.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-error-reporting.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:247
    throw err;
    ^

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert.ok(syntaxErrorMessage.test(stderr))

    at /home/zhanglei/src/node/test/parallel/test-error-reporting.js:70:10
    at /home/zhanglei/src/node/test/common/index.js:475:15
    at /home/zhanglei/src/node/test/parallel/test-error-reporting.js:38:5
    at ChildProcess.exithandler (child_process.js:289:5)
    at ChildProcess.emit (events.js:182:13)
    at maybeClose (internal/child_process.js:947:16)
    at Socket.stream.socket.on (internal/child_process.js:368:11)
    at Socket.emit (events.js:182:13)
    at Pipe._handle.close [as _onclose] (net.js:598:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-error-reporting.js

                                                       
[09:19|%  22|+ 364|- 116]: release test-errors-systemerror 
                                                          
[09:19|%  22|+ 365|- 116]: release test-eslint-alphabetize-errors 
                                                                 
[09:20|%  22|+ 366|- 116]: release test-eslint-buffer-constructor 
                                                                 
[09:21|%  22|+ 367|- 116]: release test-eslint-crypto-check 
                                                           
=== release test-eslint-crypto-check ===
Path: parallel/test-eslint-crypto-check
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-eslint-crypto-check.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-eslint-crypto-check.js' ]
1..0 # Skipped: missing ESLint
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[80512]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55e69ffe7048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55e69ffe81d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55e6a0266bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x62aae88427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-eslint-crypto-check.js
--- CRASHED (Signal: 6) ---

                                                           
[09:21|%  22|+ 367|- 117]: release test-eslint-documented-errors 
                                                                
[09:22|%  22|+ 368|- 117]: release test-eslint-inspector-check 
                                                              
[09:22|%  22|+ 369|- 117]: release test-eslint-lowercase-name-for-primitive 
                                                                           
=== release test-eslint-lowercase-name-for-primitive ===
Path: parallel/test-eslint-lowercase-name-for-primitive
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-eslint-lowercase-name-for-primitive.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-eslint-lowercase-name-for-primitive.js' ]
1..0 # Skipped: missing ESLint
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[80538]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55d9a0bc3048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55d9a0bc41d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55d9a0e42bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x2a14cf80427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-eslint-lowercase-name-for-primitive.js
--- CRASHED (Signal: 6) ---

                                                                           
[09:23|%  22|+ 369|- 118]: release test-eslint-no-let-in-for-declaration 
                                                                        
=== release test-eslint-no-let-in-for-declaration ===
Path: parallel/test-eslint-no-let-in-for-declaration
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-eslint-no-let-in-for-declaration.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-eslint-no-let-in-for-declaration.js' ]
1..0 # Skipped: missing ESLint
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[80547]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55879c0d1048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55879c0d21d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55879c350bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x1e243f88427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-eslint-no-let-in-for-declaration.js
--- CRASHED (Signal: 6) ---

                                                                        
[09:23|%  22|+ 369|- 119]: release test-eslint-no-unescaped-regexp-dot 
                                                                      
=== release test-eslint-no-unescaped-regexp-dot ===
Path: parallel/test-eslint-no-unescaped-regexp-dot
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-eslint-no-unescaped-regexp-dot.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-eslint-no-unescaped-regexp-dot.js' ]
1..0 # Skipped: missing ESLint
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[80556]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x5581daf95048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x5581daf961d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x5581db214bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x326de788427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-eslint-no-unescaped-regexp-dot.js
--- CRASHED (Signal: 6) ---

                                                                      
[09:23|%  22|+ 369|- 120]: release test-eslint-number-isnan 
                                                           
=== release test-eslint-number-isnan ===
Path: parallel/test-eslint-number-isnan
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-eslint-number-isnan.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-eslint-number-isnan.js' ]
1..0 # Skipped: missing ESLint
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[80565]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55ee8df05048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55ee8df061d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55ee8e184bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0xba19388427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-eslint-number-isnan.js
--- CRASHED (Signal: 6) ---

                                                           
[09:24|%  22|+ 369|- 121]: release test-eslint-prefer-assert-iferror 
                                                                    
=== release test-eslint-prefer-assert-iferror ===
Path: parallel/test-eslint-prefer-assert-iferror
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-eslint-prefer-assert-iferror.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-eslint-prefer-assert-iferror.js' ]
1..0 # Skipped: missing ESLint
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[80574]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55ef3562e048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55ef3562f1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55ef358adbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x1176ba40427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-eslint-prefer-assert-iferror.js
--- CRASHED (Signal: 6) ---

                                                                    
[09:24|%  23|+ 369|- 122]: release test-eslint-prefer-assert-methods 
                                                                    
=== release test-eslint-prefer-assert-methods ===
Path: parallel/test-eslint-prefer-assert-methods
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-eslint-prefer-assert-methods.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-eslint-prefer-assert-methods.js' ]
1..0 # Skipped: missing ESLint
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[80584]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55626aeed048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55626aeee1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55626b16cbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x31ffddd0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-eslint-prefer-assert-methods.js
--- CRASHED (Signal: 6) ---

                                                                    
[09:25|%  23|+ 369|- 123]: release test-eslint-prefer-common-expectserror 
                                                                         
=== release test-eslint-prefer-common-expectserror ===
Path: parallel/test-eslint-prefer-common-expectserror
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-eslint-prefer-common-expectserror.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-eslint-prefer-common-expectserror.js' ]
1..0 # Skipped: missing ESLint
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[80594]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x562a2aa9e048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x562a2aa9f1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x562a2ad1dbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x1b75eec0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-eslint-prefer-common-expectserror.js
--- CRASHED (Signal: 6) ---

                                                                         
[09:25|%  23|+ 369|- 124]: release test-eslint-prefer-common-mustnotcall 
                                                                        
=== release test-eslint-prefer-common-mustnotcall ===
Path: parallel/test-eslint-prefer-common-mustnotcall
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-eslint-prefer-common-mustnotcall.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-eslint-prefer-common-mustnotcall.js' ]
1..0 # Skipped: missing ESLint
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[80603]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55725168a048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55725168b1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x557251909bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x580cc70427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-eslint-prefer-common-mustnotcall.js
--- CRASHED (Signal: 6) ---

                                                                        
[09:26|%  23|+ 369|- 125]: release test-eslint-prefer-util-format-errors 
                                                                        
=== release test-eslint-prefer-util-format-errors ===
Path: parallel/test-eslint-prefer-util-format-errors
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-eslint-prefer-util-format-errors.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-eslint-prefer-util-format-errors.js' ]
1..0 # Skipped: missing ESLint
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[80612]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55c609ffb048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55c609ffc1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55c60a27abca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0xbeacd98427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-eslint-prefer-util-format-errors.js
--- CRASHED (Signal: 6) ---

                                                                        
[09:26|%  23|+ 369|- 126]: release test-eslint-require-buffer 
                                                             
=== release test-eslint-require-buffer ===
Path: parallel/test-eslint-require-buffer
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-eslint-require-buffer.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-eslint-require-buffer.js' ]
1..0 # Skipped: missing ESLint
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[80621]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55cbaf545048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55cbaf5461d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55cbaf7c4bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x5edeba0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-eslint-require-buffer.js
--- CRASHED (Signal: 6) ---

                                                             
[09:27|%  23|+ 369|- 127]: release test-eslint-required-modules 
                                                               
=== release test-eslint-required-modules ===
Path: parallel/test-eslint-required-modules
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-eslint-required-modules.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-eslint-required-modules.js' ]
1..0 # Skipped: missing ESLint
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[80630]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x560dadd8b048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x560dadd8c1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x560dae00abca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x2c033cb0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-eslint-required-modules.js
--- CRASHED (Signal: 6) ---

                                                               
[09:27|%  23|+ 369|- 128]: release test-eval 
                                            
[09:27|%  23|+ 370|- 128]: release test-eval-require 
                                                    
[09:28|%  23|+ 371|- 128]: release test-eval-strict-referenceerror 
                                                                  
[09:28|%  23|+ 372|- 128]: release test-event-emitter-add-listeners 
                                                                   
[09:28|%  23|+ 373|- 128]: release test-event-emitter-check-listener-leaks 
                                                                          
[09:29|%  23|+ 374|- 128]: release test-event-emitter-errors 
                                                            
[09:29|%  23|+ 375|- 128]: release test-event-emitter-get-max-listeners 
                                                                       
[09:29|%  23|+ 376|- 128]: release test-event-emitter-listener-count 
                                                                    
[09:29|%  23|+ 377|- 128]: release test-event-emitter-listeners 
                                                               
[09:30|%  23|+ 378|- 128]: release test-event-emitter-listeners-side-effect... 
                                                                              
[09:30|%  23|+ 379|- 128]: release test-event-emitter-max-listeners 
                                                                   
[09:30|%  23|+ 380|- 128]: release test-event-emitter-max-listeners-warning 
                                                                           
[09:31|%  23|+ 381|- 128]: release test-event-emitter-max-listeners-warning... 
                                                                              
[09:31|%  23|+ 382|- 128]: release test-event-emitter-max-listeners-warning... 
                                                                              
[09:31|%  23|+ 383|- 128]: release test-event-emitter-method-names 
                                                                  
[09:31|%  24|+ 384|- 128]: release test-event-emitter-modify-in-emit 
                                                                    
[09:32|%  24|+ 385|- 128]: release test-event-emitter-no-error-provided-to-... 
                                                                              
[09:32|%  24|+ 386|- 128]: release test-event-emitter-num-args 
                                                              
[09:32|%  24|+ 387|- 128]: release test-event-emitter-once 
                                                          
[09:32|%  24|+ 388|- 128]: release test-event-emitter-prepend 
                                                             
[09:33|%  24|+ 389|- 128]: release test-event-emitter-remove-all-listeners 
                                                                          
[09:33|%  24|+ 390|- 128]: release test-event-emitter-remove-listeners 
                                                                      
[09:33|%  24|+ 391|- 128]: release test-event-emitter-set-max-listeners-sid... 
                                                                              
[09:34|%  24|+ 392|- 128]: release test-event-emitter-special-event-names 
                                                                         
[09:34|%  24|+ 393|- 128]: release test-event-emitter-subclass 
                                                              
[09:34|%  24|+ 394|- 128]: release test-event-emitter-symbols 
                                                             
[09:34|%  24|+ 395|- 128]: release test-events-list 
                                                   
[09:35|%  24|+ 396|- 128]: release test-events-uncaught-exception-stack 
                                                                       
=== release test-events-uncaught-exception-stack ===
Path: parallel/test-events-uncaught-exception-stack
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-events-uncaught-exception-stack.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-events-uncaught-exception-stack.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error Unhandled Rejection at Promise Promise { <rejected> 'Error' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-events-uncaught-exception-stack.js

                                                                       
[09:35|%  24|+ 396|- 129]: release test-exception-handler 
                                                         
[09:35|%  24|+ 397|- 129]: release test-exception-handler2 
                                                          
=== release test-exception-handler2 ===
Path: parallel/test-exception-handler2
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-exception-handler2.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-exception-handler2.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
ReferenceError: nonexistentFunc is not defined Unhandled Rejection at Promise Promise { <rejected> 'ReferenceError: nonexistentFunc is not defined' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-exception-handler2.js

                                                          
[09:36|%  24|+ 397|- 130]: release test-file-read-noexist 
                                                         
[09:36|%  24|+ 398|- 130]: release test-file-write-stream 
                                                         
[09:36|%  24|+ 399|- 130]: release test-file-write-stream2 
                                                          
[09:36|%  24|+ 400|- 130]: release test-file-write-stream3 
                                                          
[09:37|%  24|+ 401|- 130]: release test-force-repl 
                                                  
[09:37|%  24|+ 402|- 130]: release test-force-repl-with-eval 
                                                            
[09:38|%  24|+ 403|- 130]: release test-freelist 
                                                
[09:38|%  25|+ 404|- 130]: release test-fs-access 
                                                 
[09:38|%  25|+ 405|- 130]: release test-fs-append-file 
                                                      
[09:39|%  25|+ 406|- 130]: release test-fs-append-file-sync 
                                                           
[09:39|%  25|+ 407|- 130]: release test-fs-assert-encoding-error 
                                                                
[09:39|%  25|+ 408|- 130]: release test-fs-buffer 
                                                 
[09:39|%  25|+ 409|- 130]: release test-fs-buffertype-writesync 
                                                               
[09:40|%  25|+ 410|- 130]: release test-fs-chdir-errormessage 
                                                             
[09:40|%  25|+ 411|- 130]: release test-fs-chmod 
                                                
[09:40|%  25|+ 412|- 130]: release test-fs-chown-type-check 
                                                           
[09:41|%  25|+ 413|- 130]: release test-fs-close-errors 
                                                       
[09:41|%  25|+ 414|- 130]: release test-fs-copyfile 
                                                   
[09:41|%  25|+ 415|- 130]: release test-fs-empty-readStream 
                                                           
[09:42|%  25|+ 416|- 130]: release test-fs-error-messages 
                                                         
[09:42|%  25|+ 417|- 130]: release test-fs-exists 
                                                 
[09:42|%  25|+ 418|- 130]: release test-fs-existssync-false 
                                                           
[09:42|%  25|+ 419|- 130]: release test-fs-fchmod 
                                                 
[09:43|%  25|+ 420|- 130]: release test-fs-fchown 
                                                 
[09:43|%  25|+ 421|- 130]: release test-fs-filehandle 
                                                     
[09:43|%  25|+ 422|- 130]: release test-fs-fsync 
                                                
[09:44|%  25|+ 423|- 130]: release test-fs-link 
                                               
[09:44|%  25|+ 424|- 130]: release test-fs-long-path 
                                                    
=== release test-fs-long-path ===
Path: parallel/test-fs-long-path
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-fs-long-path.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-fs-long-path.js' ]
1..0 # Skipped: this test is Windows-specific.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[81197]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x563790832048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x5637908331d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x563790ab1bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x3c07f858427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-fs-long-path.js
--- CRASHED (Signal: 6) ---

                                                    
[09:44|%  26|+ 424|- 131]: release test-fs-make-callback 
                                                        
[09:45|%  26|+ 425|- 131]: release test-fs-makeStatsCallback 
                                                            
[09:45|%  26|+ 426|- 131]: release test-fs-mkdir 
                                                
[09:45|%  26|+ 427|- 131]: release test-fs-mkdir-rmdir 
                                                      
[09:46|%  26|+ 428|- 131]: release test-fs-mkdtemp 
                                                  
[09:46|%  26|+ 429|- 131]: release test-fs-mkdtemp-prefix-check 
                                                               
[09:46|%  26|+ 430|- 131]: release test-fs-non-number-arguments-throw 
                                                                     
[09:47|%  26|+ 431|- 131]: release test-fs-null-bytes 
                                                     
[09:47|%  26|+ 432|- 131]: release test-fs-open 
                                               
[09:47|%  26|+ 433|- 131]: release test-fs-open-flags 
                                                     
[09:48|%  26|+ 434|- 131]: release test-fs-open-numeric-flags 
                                                             
[09:48|%  26|+ 435|- 131]: release test-fs-options-immutable 
                                                            
[09:48|%  26|+ 436|- 131]: release test-fs-promises 
                                                   
[09:49|%  26|+ 437|- 131]: release test-fs-promises-file-handle-append-file 
                                                                           
[09:49|%  26|+ 438|- 131]: release test-fs-promises-file-handle-chmod 
                                                                     
[09:49|%  26|+ 439|- 131]: release test-fs-promises-file-handle-read 
                                                                    
[09:49|%  26|+ 440|- 131]: release test-fs-promises-file-handle-readFile 
                                                                        
[09:50|%  26|+ 441|- 131]: release test-fs-promises-file-handle-write 
                                                                     
[09:50|%  26|+ 442|- 131]: release test-fs-promises-file-handle-writeFile 
                                                                         
[09:50|%  26|+ 443|- 131]: release test-fs-promises-readfile 
                                                            
[09:51|%  26|+ 444|- 131]: release test-fs-promises-writefile 
                                                             
[09:51|%  27|+ 445|- 131]: release test-fs-promisified 
                                                      
[09:51|%  27|+ 446|- 131]: release test-fs-read 
                                               
[09:52|%  27|+ 447|- 131]: release test-fs-read-file-assert-encoding 
                                                                    
[09:52|%  27|+ 448|- 131]: release test-fs-read-file-sync 
                                                         
[09:52|%  27|+ 449|- 131]: release test-fs-read-file-sync-hostname 
                                                                  
[09:52|%  27|+ 450|- 131]: release test-fs-read-stream 
                                                      
[09:53|%  27|+ 451|- 131]: release test-fs-read-stream-double-close 
                                                                   
[09:53|%  27|+ 452|- 131]: release test-fs-read-stream-encoding 
                                                               
[09:53|%  27|+ 453|- 131]: release test-fs-read-stream-err 
                                                          
[09:54|%  27|+ 454|- 131]: release test-fs-read-stream-fd 
                                                         
[09:54|%  27|+ 455|- 131]: release test-fs-read-stream-fd-leak 
                                                              
[09:55|%  27|+ 456|- 131]: release test-fs-read-stream-inherit 
                                                              
[09:55|%  27|+ 457|- 131]: release test-fs-read-stream-resume 
                                                             
[09:56|%  27|+ 458|- 131]: release test-fs-read-stream-throw-type-error 
                                                                       
[09:56|%  27|+ 459|- 131]: release test-fs-read-type 
                                                    
[09:56|%  27|+ 460|- 131]: release test-fs-read-zero-length 
                                                           
[09:56|%  27|+ 461|- 131]: release test-fs-readdir 
                                                  
[09:57|%  27|+ 462|- 131]: release test-fs-readdir-stack-overflow 
                                                                 
[09:58|%  27|+ 463|- 131]: release test-fs-readdir-ucs2 
                                                       
[09:58|%  27|+ 464|- 131]: release test-fs-readfile 
                                                   
[09:59|%  27|+ 465|- 131]: release test-fs-readfile-empty 
                                                         
[09:59|%  27|+ 466|- 131]: release test-fs-readfile-error 
                                                         
[09:59|%  28|+ 467|- 131]: release test-fs-readfile-fd 
                                                      
[10:00|%  28|+ 468|- 131]: release test-fs-readfile-pipe 
                                                        
[10:00|%  28|+ 469|- 131]: release test-fs-readfile-pipe-large 
                                                              
[10:00|%  28|+ 470|- 131]: release test-fs-readfile-unlink 
                                                          
[10:01|%  28|+ 471|- 131]: release test-fs-readfile-zero-byte-liar 
                                                                  
[10:01|%  28|+ 472|- 131]: release test-fs-readfilesync-enoent 
                                                              
=== release test-fs-readfilesync-enoent ===
Path: parallel/test-fs-readfilesync-enoent
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-fs-readfilesync-enoent.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-fs-readfilesync-enoent.js' ]
1..0 # Skipped: Windows specific test.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[81774]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x5556ce30a048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x5556ce30b1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x5556ce589bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0xb0a7658427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-fs-readfilesync-enoent.js
--- CRASHED (Signal: 6) ---

                                                              
[10:01|%  28|+ 472|- 132]: release test-fs-readfilesync-pipe-large 
                                                                  
[10:02|%  28|+ 473|- 132]: release test-fs-readlink-type-check 
                                                              
[10:02|%  28|+ 474|- 132]: release test-fs-ready-event-stream 
                                                             
[10:02|%  28|+ 475|- 132]: release test-fs-realpath 
                                                   
[10:03|%  28|+ 476|- 132]: release test-fs-realpath-buffer-encoding 
                                                                   
[10:03|%  28|+ 477|- 132]: release test-fs-realpath-native 
                                                          
=== release test-fs-realpath-native ===
Path: parallel/test-fs-realpath-native
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-fs-realpath-native.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-fs-realpath-native.js' ]
1..0 # Skipped: MacOS-only test.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[81843]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55a218c11048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55a218c121d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55a218e90bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x198969b8427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-fs-realpath-native.js
--- CRASHED (Signal: 6) ---

                                                          
[10:03|%  28|+ 477|- 133]: release test-fs-realpath-on-substed-drive 
                                                                    
=== release test-fs-realpath-on-substed-drive ===
Path: parallel/test-fs-realpath-on-substed-drive
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-fs-realpath-on-substed-drive.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-fs-realpath-on-substed-drive.js' ]
1..0 # Skipped: Test for Windows only
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[81852]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x56521586e048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x56521586f1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x565215aedbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x353cbd40427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-fs-realpath-on-substed-drive.js
--- CRASHED (Signal: 6) ---

                                                                    
[10:04|%  28|+ 477|- 134]: release test-fs-realpath-pipe 
                                                        
[10:04|%  28|+ 478|- 134]: release test-fs-rename-type-check 
                                                            
[10:05|%  28|+ 479|- 134]: release test-fs-rmdir-type-check 
                                                           
[10:05|%  28|+ 480|- 134]: release test-fs-sir-writes-alot 
                                                          
[10:06|%  28|+ 481|- 134]: release test-fs-stat 
                                               
[10:06|%  28|+ 482|- 134]: release test-fs-stream-destroy-emit-error 
                                                                    
[10:06|%  28|+ 483|- 134]: release test-fs-stream-double-close 
                                                              
[10:06|%  28|+ 484|- 134]: release test-fs-symlink 
                                                  
=== release test-fs-symlink ===
Path: parallel/test-fs-symlink
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-fs-symlink.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-fs-symlink.js' ]
1..0 # Skipped: insufficient privileges
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[81949]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55ee56a8e048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55ee56a8f1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55ee56d0dbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x74dcaa0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-fs-symlink.js
--- CRASHED (Signal: 6) ---

                                                  
[10:07|%  29|+ 484|- 135]: release test-fs-symlink-dir-junction 
                                                               
[10:07|%  29|+ 485|- 135]: release test-fs-symlink-dir-junction-relative 
                                                                        
[10:07|%  29|+ 486|- 135]: release test-fs-sync-fd-leak 
                                                       
[10:08|%  29|+ 487|- 135]: release test-fs-syncwritestream 
                                                          
[10:08|%  29|+ 488|- 135]: release test-fs-timestamp-parsing-error 
                                                                  
[10:08|%  29|+ 489|- 135]: release test-fs-truncate 
                                                   
[10:09|%  29|+ 490|- 135]: release test-fs-truncate-clear-file-zero 
                                                                   
[10:09|%  29|+ 491|- 135]: release test-fs-truncate-fd 
                                                      
[10:09|%  29|+ 492|- 135]: release test-fs-truncate-sync 
                                                        
[10:10|%  29|+ 493|- 135]: release test-fs-unlink-type-check 
                                                            
[10:10|%  29|+ 494|- 135]: release test-fs-utimes 
                                                 
[10:10|%  29|+ 495|- 135]: release test-fs-watch 
                                                
[10:11|%  29|+ 496|- 135]: release test-fs-watch-encoding 
                                                         
[10:11|%  29|+ 497|- 135]: release test-fs-watch-enoent 
                                                       
[10:11|%  29|+ 498|- 135]: release test-fs-watch-recursive 
                                                          
=== release test-fs-watch-recursive ===
Path: parallel/test-fs-watch-recursive
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-fs-watch-recursive.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-fs-watch-recursive.js' ]
1..0 # Skipped: recursive option is darwin/windows specific
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[82103]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x556398173048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x5563981741d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x5563983f2bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x241c8860427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-fs-watch-recursive.js
--- CRASHED (Signal: 6) ---

                                                          
[10:12|%  29|+ 498|- 136]: release test-fs-watch-stop-async 
                                                           
[10:12|%  29|+ 499|- 136]: release test-fs-watch-stop-sync 
                                                          
[10:13|%  29|+ 500|- 136]: release test-fs-watchfile 
                                                    
[10:13|%  29|+ 501|- 136]: release test-fs-whatwg-url 
                                                     
[10:14|%  29|+ 502|- 136]: release test-fs-write 
                                                
[10:14|%  29|+ 503|- 136]: release test-fs-write-buffer 
                                                       
[10:14|%  30|+ 504|- 136]: release test-fs-write-file 
                                                     
[10:15|%  30|+ 505|- 136]: release test-fs-write-file-buffer 
                                                            
[10:15|%  30|+ 506|- 136]: release test-fs-write-file-invalid-path 
                                                                  
=== release test-fs-write-file-invalid-path ===
Path: parallel/test-fs-write-file-invalid-path
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-fs-write-file-invalid-path.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-fs-write-file-invalid-path.js' ]
1..0 # Skipped: This test is for Windows only.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[82204]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x5648f3ae0048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x5648f3ae11d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x5648f3d5fbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x13202a50427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-fs-write-file-invalid-path.js
--- CRASHED (Signal: 6) ---

                                                                  
[10:15|%  30|+ 506|- 137]: release test-fs-write-file-sync 
                                                          
[10:15|%  30|+ 507|- 137]: release test-fs-write-file-uint8array 
                                                                
[10:16|%  30|+ 508|- 137]: release test-fs-write-no-fd 
                                                      
[10:16|%  30|+ 509|- 137]: release test-fs-write-stream 
                                                       
[10:16|%  30|+ 510|- 137]: release test-fs-write-stream-autoclose-option 
                                                                        
[10:17|%  30|+ 511|- 137]: release test-fs-write-stream-change-open 
                                                                   
[10:17|%  30|+ 512|- 137]: release test-fs-write-stream-close-without-callb... 
                                                                              
[10:17|%  30|+ 513|- 137]: release test-fs-write-stream-double-close 
                                                                    
[10:17|%  30|+ 514|- 137]: release test-fs-write-stream-encoding 
                                                                
[10:18|%  30|+ 515|- 137]: release test-fs-write-stream-end 
                                                           
[10:18|%  30|+ 516|- 137]: release test-fs-write-stream-err 
                                                           
[10:18|%  30|+ 517|- 137]: release test-fs-write-stream-throw-type-error 
                                                                        
[10:19|%  30|+ 518|- 137]: release test-fs-write-string-coerce 
                                                              
[10:19|%  30|+ 519|- 137]: release test-fs-write-sync 
                                                     
[10:19|%  30|+ 520|- 137]: release test-global 
                                              
[10:19|%  30|+ 521|- 137]: release test-global-console-exists 
                                                             
[10:20|%  30|+ 522|- 137]: release test-handle-wrap-close-abort 
                                                               
[10:20|%  30|+ 523|- 137]: release test-handle-wrap-isrefed 
                                                           
[10:20|%  30|+ 524|- 137]: release test-http 
                                            
[10:21|%  31|+ 525|- 137]: release test-http-1.0 
                                                
[10:21|%  31|+ 526|- 137]: release test-http-1.0-keep-alive 
                                                           
[10:21|%  31|+ 527|- 137]: release test-http-abort-before-end 
                                                             
[10:21|%  31|+ 528|- 137]: release test-http-abort-client 
                                                         
[10:22|%  31|+ 529|- 137]: release test-http-abort-queued 
                                                         
[10:22|%  31|+ 530|- 137]: release test-http-abort-stream-end 
                                                             
[10:23|%  31|+ 531|- 137]: release test-http-addrequest-localaddress 
                                                                    
[10:23|%  31|+ 532|- 137]: release test-http-after-connect 
                                                          
[10:23|%  31|+ 533|- 137]: release test-http-agent 
                                                  
[10:24|%  31|+ 534|- 137]: release test-http-agent-destroyed-socket 
                                                                   
[10:24|%  31|+ 535|- 137]: release test-http-agent-error-on-idle 
                                                                
[10:24|%  31|+ 536|- 137]: release test-http-agent-false 
                                                        
[10:24|%  31|+ 537|- 137]: release test-http-agent-getname 
                                                          
[10:25|%  31|+ 538|- 137]: release test-http-agent-keepalive 
                                                            
[10:25|%  31|+ 539|- 137]: release test-http-agent-maxsockets 
                                                             
[10:26|%  31|+ 540|- 137]: release test-http-agent-maxsockets-respected 
                                                                       
[10:26|%  31|+ 541|- 137]: release test-http-agent-no-protocol 
                                                              
[10:26|%  31|+ 542|- 137]: release test-http-agent-null 
                                                       
[10:27|%  31|+ 543|- 137]: release test-http-agent-uninitialized 
                                                                
[10:27|%  31|+ 544|- 137]: release test-http-agent-uninitialized-with-handl... 
                                                                              
[10:27|%  31|+ 545|- 137]: release test-http-allow-req-after-204-res 
                                                                    
[10:27|%  32|+ 546|- 137]: release test-http-automatic-headers 
                                                              
[10:28|%  32|+ 547|- 137]: release test-http-bind-twice 
                                                       
[10:28|%  32|+ 548|- 137]: release test-http-blank-header 
                                                         
[10:28|%  32|+ 549|- 137]: release test-http-buffer-sanity 
                                                          
[10:29|%  32|+ 550|- 137]: release test-http-byteswritten 
                                                         
[10:29|%  32|+ 551|- 137]: release test-http-catch-uncaughtexception 
                                                                    
[10:29|%  32|+ 552|- 137]: release test-http-chunk-problem 
                                                          
[10:30|%  32|+ 553|- 137]: release test-http-chunked 
                                                    
[10:30|%  32|+ 554|- 137]: release test-http-chunked-304 
                                                        
[10:30|%  32|+ 555|- 137]: release test-http-client-abort 
                                                         
[10:31|%  32|+ 556|- 137]: release test-http-client-abort-event 
                                                               
[10:31|%  32|+ 557|- 137]: release test-http-client-abort-keep-alive-queued... 
                                                                              
[10:31|%  32|+ 558|- 137]: release test-http-client-abort-keep-alive-queued... 
                                                                              
[10:32|%  32|+ 559|- 137]: release test-http-client-abort-no-agent 
                                                                  
[10:32|%  32|+ 560|- 137]: release test-http-client-abort-unix-socket 
                                                                     
[10:32|%  32|+ 561|- 137]: release test-http-client-abort2 
                                                          
[10:33|%  32|+ 562|- 137]: release test-http-client-aborted-event 
                                                                 
[10:33|%  32|+ 563|- 137]: release test-http-client-agent 
                                                         
[10:33|%  32|+ 564|- 137]: release test-http-client-check-http-token 
                                                                    
[10:34|%  32|+ 565|- 137]: release test-http-client-close-event 
                                                               
[10:34|%  32|+ 566|- 137]: release test-http-client-default-headers-exist 
                                                                         
[10:34|%  33|+ 567|- 137]: release test-http-client-defaults 
                                                            
[10:35|%  33|+ 568|- 137]: release test-http-client-encoding 
                                                            
[10:35|%  33|+ 569|- 137]: release test-http-client-get-url 
                                                           
[10:35|%  33|+ 570|- 137]: release test-http-client-headers-array 
                                                                 
[10:36|%  33|+ 571|- 137]: release test-http-client-immediate-error 
                                                                   
[10:36|%  33|+ 572|- 137]: release test-http-client-invalid-path 
                                                                
[10:36|%  33|+ 573|- 137]: release test-http-client-keep-alive-release-befo... 
                                                                              
[10:37|%  33|+ 574|- 137]: release test-http-client-parse-error 
                                                               
[10:37|%  33|+ 575|- 137]: release test-http-client-pipe-end 
                                                            
[10:37|%  33|+ 576|- 137]: release test-http-client-race 
                                                        
[10:38|%  33|+ 577|- 137]: release test-http-client-race-2 
                                                          
[10:39|%  33|+ 578|- 137]: release test-http-client-read-in-error 
                                                                 
[10:39|%  33|+ 579|- 137]: release test-http-client-readable 
                                                            
[10:39|%  33|+ 580|- 137]: release test-http-client-reject-chunked-with-con... 
                                                                              
[10:39|%  33|+ 581|- 137]: release test-http-client-reject-cr-no-lf 
                                                                   
[10:40|%  33|+ 582|- 137]: release test-http-client-reject-unexpected-agent 
                                                                           
[10:40|%  33|+ 583|- 137]: release test-http-client-req-error-dont-double-f... 
                                                                              
[10:40|%  33|+ 584|- 137]: release test-http-client-response-domain 
                                                                   
[10:41|%  33|+ 585|- 137]: release test-http-client-spurious-aborted 
                                                                    
[10:41|%  33|+ 586|- 137]: release test-http-client-timeout 
                                                           
[10:41|%  33|+ 587|- 137]: release test-http-client-timeout-agent 
                                                                 
[10:42|%  33|+ 588|- 137]: release test-http-client-timeout-connect-listene... 
                                                                              
[10:42|%  34|+ 589|- 137]: release test-http-client-timeout-event 
                                                                 
[10:43|%  34|+ 590|- 137]: release test-http-client-timeout-on-connect 
                                                                      
[10:43|%  34|+ 591|- 137]: release test-http-client-timeout-option 
                                                                  
[10:43|%  34|+ 592|- 137]: release test-http-client-timeout-option-listener... 
                                                                              
[10:44|%  34|+ 593|- 137]: release test-http-client-timeout-with-data 
                                                                     
[10:44|%  34|+ 594|- 137]: release test-http-client-unescaped-path 
                                                                  
[10:44|%  34|+ 595|- 137]: release test-http-client-upload 
                                                          
[10:45|%  34|+ 596|- 137]: release test-http-client-upload-buf 
                                                              
[10:45|%  34|+ 597|- 137]: release test-http-common 
                                                   
[10:45|%  34|+ 598|- 137]: release test-http-conn-reset 
                                                       
[10:46|%  34|+ 599|- 137]: release test-http-connect 
                                                    
[10:46|%  34|+ 600|- 137]: release test-http-connect-req-res 
                                                            
[10:46|%  34|+ 601|- 137]: release test-http-content-length 
                                                           
[10:47|%  34|+ 602|- 137]: release test-http-contentLength0 
                                                           
[10:47|%  34|+ 603|- 137]: release test-http-createConnection 
                                                             
[10:47|%  34|+ 604|- 137]: release test-http-date-header 
                                                        
=== release test-http-date-header ===
Path: parallel/test-http-date-header
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-http-date-header.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-http-date-header.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[83265]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x557a34cf0048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x557a34cf11d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x557a34f6fbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x119f968427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-http-date-header.js
--- CRASHED (Signal: 6) ---

                                                        
[10:48|%  34|+ 604|- 138]: release test-http-default-encoding 
                                                             
[10:48|%  34|+ 605|- 138]: release test-http-default-port 
                                                         
[10:48|%  34|+ 606|- 138]: release test-http-destroyed-socket-write2 
                                                                    
[10:49|%  34|+ 607|- 138]: release test-http-dns-error 
                                                      
[10:49|%  34|+ 608|- 138]: release test-http-double-content-length 
                                                                  
[10:49|%  35|+ 609|- 138]: release test-http-dump-req-when-res-ends 
                                                                   
[10:49|%  35|+ 610|- 138]: release test-http-end-throw-socket-handling 
                                                                      
[10:50|%  35|+ 611|- 138]: release test-http-eof-on-connect 
                                                           
[10:50|%  35|+ 612|- 138]: release test-http-exceptions 
                                                       
=== release test-http-exceptions ===
Path: parallel/test-http-exceptions
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-http-exceptions.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-http-exceptions.js' ]
------zone(testZone):worker(0) is terminating------
Caught an exception: ReferenceError: intentionally_not_defined is not defined
Caught an exception: ReferenceError: intentionally_not_defined is not defined
Caught an exception: ReferenceError: intentionally_not_defined is not defined
Caught an exception: ReferenceError: intentionally_not_defined is not defined
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[83374]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55e3aaf52048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55e3aaf531d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55e3ab1d1bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x3cec0d20427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-http-exceptions.js
--- CRASHED (Signal: 6) ---

                                                       
[10:51|%  35|+ 612|- 139]: release test-http-expect-continue 
                                                            
=== release test-http-expect-continue ===
Path: parallel/test-http-expect-continue
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-http-expect-continue.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-http-expect-continue.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Client sending request...
Server got Expect: 100-continue...
Client got 100 Continue...
Server sending full response...
Got full response.
out/Release/node[83387]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55da53854048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55da538551d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55da53ad3bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x3534f7d8427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-http-expect-continue.js
--- CRASHED (Signal: 6) ---

                                                            
[10:51|%  35|+ 612|- 140]: release test-http-expect-handling 
                                                            
[10:52|%  35|+ 613|- 140]: release test-http-extra-response 
                                                           
[10:52|%  35|+ 614|- 140]: release test-http-flush 
                                                  
[10:52|%  35|+ 615|- 140]: release test-http-flush-headers 
                                                          
[10:52|%  35|+ 616|- 140]: release test-http-flush-response-headers 
                                                                   
[10:53|%  35|+ 617|- 140]: release test-http-full-response 
                                                          
=== release test-http-full-response ===
Path: parallel/test-http-full-response
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-http-full-response.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-http-full-response.js' ]
------zone(testZone):worker(0) is terminating------
1..0 # Skipped: problem spawning `ab`.
/bin/sh: 1: ab: not found
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[83448]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x556788e9a048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x556788e9b1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x556789119bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x31146718427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-http-full-response.js
--- CRASHED (Signal: 6) ---

                                                          
[10:53|%  35|+ 617|- 141]: release test-http-generic-streams 
                                                            
[10:53|%  35|+ 618|- 141]: release test-http-get-pipeline-problem 
                                                                 
[10:54|%  35|+ 619|- 141]: release test-http-head-request 
                                                         
[10:54|%  35|+ 620|- 141]: release test-http-head-response-has-no-body 
                                                                      
[10:54|%  35|+ 621|- 141]: release test-http-head-response-has-no-body-end 
                                                                          
[10:55|%  35|+ 622|- 141]: release test-http-header-obstext 
                                                           
[10:55|%  35|+ 623|- 141]: release test-http-header-read 
                                                        
[10:55|%  35|+ 624|- 141]: release test-http-hex-write 
                                                      
[10:56|%  35|+ 625|- 141]: release test-http-highwatermark 
                                                          
[10:56|%  35|+ 626|- 141]: release test-http-host-header-ipv6-fail 
                                                                  
[10:56|%  36|+ 627|- 141]: release test-http-host-headers 
                                                         
[10:57|%  36|+ 628|- 141]: release test-http-hostname-typechecking 
                                                                  
[10:57|%  36|+ 629|- 141]: release test-http-incoming-matchKnownFields 
                                                                      
[10:57|%  36|+ 630|- 141]: release test-http-incoming-pipelined-socket-dest... 
                                                                              
[10:58|%  36|+ 631|- 141]: release test-http-information-processing 
                                                                   
[10:58|%  36|+ 632|- 141]: release test-http-invalid-path-chars 
                                                               
[10:58|%  36|+ 633|- 141]: release test-http-invalid-urls 
                                                         
[10:59|%  36|+ 634|- 141]: release test-http-invalidheaderfield 
                                                               
[10:59|%  36|+ 635|- 141]: release test-http-invalidheaderfield2 
                                                                
[10:59|%  36|+ 636|- 141]: release test-http-keep-alive 
                                                       
[10:59|%  36|+ 637|- 141]: release test-http-keep-alive-close-on-header 
                                                                       
[11:00|%  36|+ 638|- 141]: release test-http-keepalive-client 
                                                             
[11:00|%  36|+ 639|- 141]: release test-http-keepalive-override 
                                                               
[11:00|%  36|+ 640|- 141]: release test-http-keepalive-request 
                                                              
[11:01|%  36|+ 641|- 141]: release test-http-listening 
                                                      
[11:01|%  36|+ 642|- 141]: release test-http-localaddress 
                                                         
=== release test-http-localaddress ===
Path: parallel/test-http-localaddress
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-http-localaddress.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-http-localaddress.js' ]
------zone(testZone):worker(0) is terminating------
Connect from: 127.0.0.2
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[83734]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x564de599b048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x564de599c1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x564de5c1abca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x1a6ef1e8427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-http-localaddress.js
--- CRASHED (Signal: 6) ---

                                                         
[11:01|%  36|+ 642|- 142]: release test-http-localaddress-bind-error 
                                                                    
[11:02|%  36|+ 643|- 142]: release test-http-malformed-request 
                                                              
[11:02|%  36|+ 644|- 142]: release test-http-many-ended-pipelines 
                                                                 
[11:02|%  36|+ 645|- 142]: release test-http-max-headers-count 
                                                              
[11:02|%  36|+ 646|- 142]: release test-http-methods 
                                                    
[11:03|%  36|+ 647|- 142]: release test-http-multi-line-headers 
                                                               
[11:03|%  37|+ 648|- 142]: release test-http-mutable-headers 
                                                            
[11:03|%  37|+ 649|- 142]: release test-http-no-content-length 
                                                              
[11:04|%  37|+ 650|- 142]: release test-http-no-read-no-dump 
                                                            
[11:04|%  37|+ 651|- 142]: release test-http-outgoing-finish 
                                                            
[11:04|%  37|+ 652|- 142]: release test-http-outgoing-finish-writable 
                                                                     
[11:05|%  37|+ 653|- 142]: release test-http-outgoing-first-chunk-singlebyt... 
                                                                              
[11:05|%  37|+ 654|- 142]: release test-http-outgoing-internal-headers 
                                                                      
[11:05|%  37|+ 655|- 142]: release test-http-outgoing-message-inheritance 
                                                                         
[11:05|%  37|+ 656|- 142]: release test-http-outgoing-proto 
                                                           
[11:06|%  37|+ 657|- 142]: release test-http-outgoing-renderHeaders 
                                                                   
[11:06|%  37|+ 658|- 142]: release test-http-parser 
                                                   
[11:06|%  37|+ 659|- 142]: release test-http-parser-bad-ref 
                                                           
[11:07|%  37|+ 660|- 142]: release test-http-parser-free 
                                                        
[11:07|%  37|+ 661|- 142]: release test-http-parser-freed-before-upgrade 
                                                                        
[11:07|%  37|+ 662|- 142]: release test-http-pause 
                                                  
[11:08|%  37|+ 663|- 142]: release test-http-pause-no-dump 
                                                          
[11:08|%  37|+ 664|- 142]: release test-http-pause-resume-one-end 
                                                                 
[11:09|%  37|+ 665|- 142]: release test-http-pipe-fs 
                                                    
[11:09|%  37|+ 666|- 142]: release test-http-pipeline-assertionerror-finish 
                                                                           
[11:09|%  37|+ 667|- 142]: release test-http-pipeline-flood 
                                                           
[11:10|%  37|+ 668|- 142]: release test-http-pipeline-requests-connection-l... 
                                                                              
[11:11|%  38|+ 669|- 142]: release test-http-pipeline-socket-parser-typeerr... 
                                                                              
[11:12|%  38|+ 670|- 142]: release test-http-proxy 
                                                  
[11:12|%  38|+ 671|- 142]: release test-http-raw-headers 
                                                        
[11:12|%  38|+ 672|- 142]: release test-http-readable-data-event 
                                                                
[11:12|%  38|+ 673|- 142]: release test-http-remove-header-stays-removed 
                                                                        
[11:13|%  38|+ 674|- 142]: release test-http-request-agent 
                                                          
[11:13|%  38|+ 675|- 142]: release test-http-request-dont-override-options 
                                                                          
[11:13|%  38|+ 676|- 142]: release test-http-request-end 
                                                        
[11:14|%  38|+ 677|- 142]: release test-http-request-end-twice 
                                                              
[11:14|%  38|+ 678|- 142]: release test-http-request-invalid-method-error 
                                                                         
[11:14|%  38|+ 679|- 142]: release test-http-request-large-payload 
                                                                  
[11:14|%  38|+ 680|- 142]: release test-http-request-methods 
                                                            
[11:15|%  38|+ 681|- 142]: release test-http-res-write-after-end 
                                                                
[11:15|%  38|+ 682|- 142]: release test-http-res-write-end-dont-take-array 
                                                                          
[11:15|%  38|+ 683|- 142]: release test-http-response-add-header-after-sent 
                                                                           
[11:16|%  38|+ 684|- 142]: release test-http-response-close 
                                                           
[11:16|%  38|+ 685|- 142]: release test-http-response-multi-content-length 
                                                                          
[11:16|%  38|+ 686|- 142]: release test-http-response-multiheaders 
                                                                  
[11:17|%  38|+ 687|- 142]: release test-http-response-no-headers 
                                                                
[11:17|%  38|+ 688|- 142]: release test-http-response-readable 
                                                              
[11:17|%  38|+ 689|- 142]: release test-http-response-remove-header-after-s... 
                                                                              
[11:18|%  39|+ 690|- 142]: release test-http-response-splitting 
                                                               
[11:18|%  39|+ 691|- 142]: release test-http-response-status-message 
                                                                    
[11:18|%  39|+ 692|- 142]: release test-http-response-statuscode 
                                                                
[11:19|%  39|+ 693|- 142]: release test-http-same-map 
                                                     
[11:19|%  39|+ 694|- 142]: release test-http-server 
                                                   
[11:19|%  39|+ 695|- 142]: release test-http-server-client-error 
                                                                
[11:20|%  39|+ 696|- 142]: release test-http-server-de-chunked-trailer 
                                                                      
[11:20|%  39|+ 697|- 142]: release test-http-server-keep-alive-timeout 
                                                                      
[11:21|%  39|+ 698|- 142]: release test-http-server-multiheaders 
                                                                
[11:21|%  39|+ 699|- 142]: release test-http-server-multiheaders2 
                                                                 
[11:22|%  39|+ 700|- 142]: release test-http-server-options-incoming-messag... 
                                                                              
[11:22|%  39|+ 701|- 142]: release test-http-server-options-server-response 
                                                                           
[11:22|%  39|+ 702|- 142]: release test-http-server-reject-chunked-with-con... 
                                                                              
[11:22|%  39|+ 703|- 142]: release test-http-server-reject-cr-no-lf 
                                                                   
[11:23|%  39|+ 704|- 142]: release test-http-server-response-standalone 
                                                                       
[11:23|%  39|+ 705|- 142]: release test-http-server-stale-close 
                                                               
[11:23|%  39|+ 706|- 142]: release test-http-server-unconsume 
                                                             
[11:24|%  39|+ 707|- 142]: release test-http-server-unconsume-consume 
                                                                     
[11:24|%  39|+ 708|- 142]: release test-http-server-write-after-end 
                                                                   
[11:24|%  39|+ 709|- 142]: release test-http-set-cookies 
                                                        
[11:25|%  39|+ 710|- 142]: release test-http-set-timeout 
                                                        
[11:25|%  39|+ 711|- 142]: release test-http-set-timeout-server 
                                                               
[11:31|%  40|+ 712|- 142]: release test-http-set-trailers 
                                                         
=== release test-http-set-trailers ===
Path: parallel/test-http-set-trailers
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-http-set-trailers.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-http-set-trailers.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[84573]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x563b2645c048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x563b2645d1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x563b266dbbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x2caea108427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-http-set-trailers.js
--- CRASHED (Signal: 6) ---

                                                         
[11:32|%  40|+ 712|- 143]: release test-http-should-keep-alive 
                                                              
[11:32|%  40|+ 713|- 143]: release test-http-status-code 
                                                        
[11:32|%  40|+ 714|- 143]: release test-http-status-message 
                                                           
[11:33|%  40|+ 715|- 143]: release test-http-status-reason-invalid-chars 
                                                                        
[11:33|%  40|+ 716|- 143]: release test-http-timeout 
                                                    
[11:33|%  40|+ 717|- 143]: release test-http-timeout-client-warning 
                                                                   
[11:34|%  40|+ 718|- 143]: release test-http-timeout-overflow 
                                                             
[11:34|%  40|+ 719|- 143]: release test-http-unix-socket 
                                                        
[11:35|%  40|+ 720|- 143]: release test-http-unix-socket-keep-alive 
                                                                   
[11:35|%  40|+ 721|- 143]: release test-http-upgrade-advertise 
                                                              
[11:35|%  40|+ 722|- 143]: release test-http-upgrade-agent 
                                                          
[11:36|%  40|+ 723|- 143]: release test-http-upgrade-binary 
                                                           
[11:36|%  40|+ 724|- 143]: release test-http-upgrade-client 
                                                           
[11:36|%  40|+ 725|- 143]: release test-http-upgrade-client2 
                                                            
[11:36|%  40|+ 726|- 143]: release test-http-upgrade-reconsume-stream 
                                                                     
[11:37|%  40|+ 727|- 143]: release test-http-upgrade-server 
                                                           
[11:37|%  40|+ 728|- 143]: release test-http-upgrade-server2 
                                                            
=== release test-http-upgrade-server2 ===
Path: parallel/test-http-upgrade-server2
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-http-upgrade-server2.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-http-upgrade-server2.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[84769]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x556c476b9048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x556c476ba1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x556c47938bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x9d19ce0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-http-upgrade-server2.js
--- CRASHED (Signal: 6) ---

                                                            
[11:37|%  40|+ 728|- 144]: release test-http-url.parse-auth 
                                                           
[11:38|%  40|+ 729|- 144]: release test-http-url.parse-auth-with-header-in-... 
                                                                              
[11:38|%  40|+ 730|- 144]: release test-http-url.parse-basic 
                                                            
[11:38|%  41|+ 731|- 144]: release test-http-url.parse-https.request 
                                                                    
[11:39|%  41|+ 732|- 144]: release test-http-url.parse-only-support-http-ht... 
                                                                              
[11:39|%  41|+ 733|- 144]: release test-http-url.parse-path 
                                                           
[11:39|%  41|+ 734|- 144]: release test-http-url.parse-post 
                                                           
[11:40|%  41|+ 735|- 144]: release test-http-url.parse-search 
                                                             
[11:40|%  41|+ 736|- 144]: release test-http-wget 
                                                 
[11:40|%  41|+ 737|- 144]: release test-http-writable-true-after-close 
                                                                      
[11:40|%  41|+ 738|- 144]: release test-http-write-callbacks 
                                                            
[11:41|%  41|+ 739|- 144]: release test-http-write-empty-string 
                                                               
[11:41|%  41|+ 740|- 144]: release test-http-write-head 
                                                       
[11:41|%  41|+ 741|- 144]: release test-http-zero-length-write 
                                                              
[11:42|%  41|+ 742|- 144]: release test-http-zerolengthbuffer 
                                                             
[11:42|%  41|+ 743|- 144]: release test-http2-altsvc 
                                                    
[11:42|%  41|+ 744|- 144]: release test-http2-backpressure 
                                                          
[11:43|%  41|+ 745|- 144]: release test-http2-binding 
                                                     
[11:43|%  41|+ 746|- 144]: release test-http2-client-data-end 
                                                             
[11:43|%  41|+ 747|- 144]: release test-http2-client-destroy 
                                                            
[11:44|%  41|+ 748|- 144]: release test-http2-client-http1-server 
                                                                 
[11:44|%  41|+ 749|- 144]: release test-http2-client-onconnect-errors 
                                                                     
[11:44|%  41|+ 750|- 144]: release test-http2-client-port-80 
                                                            
[11:45|%  41|+ 751|- 144]: release test-http2-client-priority-before-connec... 
                                                                              
[11:45|%  42|+ 752|- 144]: release test-http2-client-promisify-connect 
                                                                      
[11:45|%  42|+ 753|- 144]: release test-http2-client-request-options-errors 
                                                                           
[11:46|%  42|+ 754|- 144]: release test-http2-client-rststream-before-conne... 
                                                                              
[11:46|%  42|+ 755|- 144]: release test-http2-client-set-priority 
                                                                 
[11:46|%  42|+ 756|- 144]: release test-http2-client-setNextStreamID-errors 
                                                                           
[11:47|%  42|+ 757|- 144]: release test-http2-client-settings-before-connec... 
                                                                              
[11:47|%  42|+ 758|- 144]: release test-http2-client-shutdown-before-connec... 
                                                                              
[11:47|%  42|+ 759|- 144]: release test-http2-client-socket-destroy 
                                                                   
[11:47|%  42|+ 760|- 144]: release test-http2-client-stream-destroy-before-... 
                                                                              
[11:48|%  42|+ 761|- 144]: release test-http2-client-unescaped-path 
                                                                   
[11:48|%  42|+ 762|- 144]: release test-http2-client-upload 
                                                           
[11:49|%  42|+ 763|- 144]: release test-http2-client-write-before-connect 
                                                                         
[11:49|%  42|+ 764|- 144]: release test-http2-client-write-empty-string 
                                                                       
[11:49|%  42|+ 765|- 144]: release test-http2-compat-errors 
                                                           
[11:50|%  42|+ 766|- 144]: release test-http2-compat-expect-continue 
                                                                    
[11:50|%  42|+ 767|- 144]: release test-http2-compat-expect-continue-check 
                                                                          
[11:50|%  42|+ 768|- 144]: release test-http2-compat-expect-handling 
                                                                    
[11:51|%  42|+ 769|- 144]: release test-http2-compat-method-connect 
                                                                   
[11:51|%  42|+ 770|- 144]: release test-http2-compat-serverrequest 
                                                                  
[11:51|%  42|+ 771|- 144]: release test-http2-compat-serverrequest-end 
                                                                      
[11:52|%  42|+ 772|- 144]: release test-http2-compat-serverrequest-headers 
                                                                          
[11:52|%  42|+ 773|- 144]: release test-http2-compat-serverrequest-pause 
                                                                        
[11:52|%  43|+ 774|- 144]: release test-http2-compat-serverrequest-pipe 
                                                                       
[11:53|%  43|+ 775|- 144]: release test-http2-compat-serverrequest-settimeo... 
                                                                              
[11:53|%  43|+ 776|- 144]: release test-http2-compat-serverrequest-trailers 
                                                                           
[11:53|%  43|+ 777|- 144]: release test-http2-compat-serverresponse-close 
                                                                         
[11:54|%  43|+ 778|- 144]: release test-http2-compat-serverresponse-createp... 
                                                                              
[11:54|%  43|+ 779|- 144]: release test-http2-compat-serverresponse-destroy 
                                                                           
[11:54|%  43|+ 780|- 144]: release test-http2-compat-serverresponse-drain 
                                                                         
[11:55|%  43|+ 781|- 144]: release test-http2-compat-serverresponse-end 
                                                                       
[11:55|%  43|+ 782|- 144]: release test-http2-compat-serverresponse-finishe... 
                                                                              
[11:55|%  43|+ 783|- 144]: release test-http2-compat-serverresponse-flushhe... 
                                                                              
[11:56|%  43|+ 784|- 144]: release test-http2-compat-serverresponse-headers 
                                                                           
[11:56|%  43|+ 785|- 144]: release test-http2-compat-serverresponse-headers... 
                                                                              
[11:56|%  43|+ 786|- 144]: release test-http2-compat-serverresponse-settime... 
                                                                              
[11:57|%  43|+ 787|- 144]: release test-http2-compat-serverresponse-statusc... 
                                                                              
[11:57|%  43|+ 788|- 144]: release test-http2-compat-serverresponse-statusm... 
                                                                              
[11:57|%  43|+ 789|- 144]: release test-http2-compat-serverresponse-statusm... 
                                                                              
[11:57|%  43|+ 790|- 144]: release test-http2-compat-serverresponse-statusm... 
                                                                              
[11:58|%  43|+ 791|- 144]: release test-http2-compat-serverresponse-trailer... 
                                                                              
[11:58|%  43|+ 792|- 144]: release test-http2-compat-serverresponse-write 
                                                                         
[11:58|%  43|+ 793|- 144]: release test-http2-compat-serverresponse-writehe... 
                                                                              
[11:59|%  43|+ 794|- 144]: release test-http2-compat-short-stream-client-se... 
                                                                              
[11:59|%  44|+ 795|- 144]: release test-http2-compat-socket 
                                                           
[11:59|%  44|+ 796|- 144]: release test-http2-compat-socket-set 
                                                               
[12:00|%  44|+ 797|- 144]: release test-http2-connect 
                                                     
[12:00|%  44|+ 798|- 144]: release test-http2-connect-method 
                                                            
[12:00|%  44|+ 799|- 144]: release test-http2-cookies 
                                                     
[12:01|%  44|+ 800|- 144]: release test-http2-create-client-connect 
                                                                   
[12:01|%  44|+ 801|- 144]: release test-http2-create-client-secure-session 
                                                                          
[12:01|%  44|+ 802|- 144]: release test-http2-create-client-session 
                                                                   
[12:02|%  44|+ 803|- 144]: release test-http2-createsecureserver-nooptions 
                                                                          
[12:02|%  44|+ 804|- 144]: release test-http2-createwritereq 
                                                            
[12:02|%  44|+ 805|- 144]: release test-http2-date-header 
                                                         
[12:03|%  44|+ 806|- 144]: release test-http2-dont-lose-data 
                                                            
[12:03|%  44|+ 807|- 144]: release test-http2-dont-override 
                                                           
[12:03|%  44|+ 808|- 144]: release test-http2-generic-streams 
                                                             
[12:04|%  44|+ 809|- 144]: release test-http2-generic-streams-sendfile 
                                                                      
[12:04|%  44|+ 810|- 144]: release test-http2-getpackedsettings 
                                                               
[12:04|%  44|+ 811|- 144]: release test-http2-goaway-opaquedata 
                                                               
[12:05|%  44|+ 812|- 144]: release test-http2-head-request 
                                                          
[12:05|%  44|+ 813|- 144]: release test-http2-https-fallback 
                                                            
[12:06|%  44|+ 814|- 144]: release test-http2-https-fallback-http-server-op... 
                                                                              
[12:06|%  44|+ 815|- 144]: release test-http2-info-headers 
                                                          
[12:06|%  45|+ 816|- 144]: release test-http2-info-headers-errors 
                                                                 
[12:07|%  45|+ 817|- 144]: release test-http2-invalidargtypes-errors 
                                                                    
[12:07|%  45|+ 818|- 144]: release test-http2-max-concurrent-streams 
                                                                    
[12:08|%  45|+ 819|- 144]: release test-http2-methods 
                                                     
[12:08|%  45|+ 820|- 144]: release test-http2-misbehaving-flow-control 
                                                                      
[12:09|%  45|+ 821|- 144]: release test-http2-misbehaving-flow-control-paus... 
                                                                              
[12:09|%  45|+ 822|- 144]: release test-http2-misbehaving-multiplex 
                                                                   
[12:09|%  45|+ 823|- 144]: release test-http2-misc-util 
                                                       
[12:10|%  45|+ 824|- 144]: release test-http2-misused-pseudoheaders 
                                                                   
[12:10|%  45|+ 825|- 144]: release test-http2-multi-content-length 
                                                                  
[12:10|%  45|+ 826|- 144]: release test-http2-multiheaders 
                                                          
[12:11|%  45|+ 827|- 144]: release test-http2-multiheaders-raw 
                                                              
[12:11|%  45|+ 828|- 144]: release test-http2-multiplex 
                                                       
[12:12|%  45|+ 829|- 144]: release test-http2-no-more-streams 
                                                             
[12:12|%  45|+ 830|- 144]: release test-http2-no-wanttrailers-listener 
                                                                      
[12:13|%  45|+ 831|- 144]: release test-http2-options-max-headers-block-len... 
                                                                              
[12:13|%  45|+ 832|- 144]: release test-http2-options-max-reserved-streams 
                                                                          
[12:13|%  45|+ 833|- 144]: release test-http2-options-server-request 
                                                                    
[12:14|%  45|+ 834|- 144]: release test-http2-options-server-response 
                                                                     
[12:14|%  45|+ 835|- 144]: release test-http2-padding-aligned 
                                                             
[12:14|%  45|+ 836|- 144]: release test-http2-padding-callback 
                                                              
[12:15|%  45|+ 837|- 144]: release test-http2-perf_hooks 
                                                        
[12:15|%  46|+ 838|- 144]: release test-http2-ping 
                                                  
[12:15|%  46|+ 839|- 144]: release test-http2-ping-unsolicited-ack 
                                                                  
[12:16|%  46|+ 840|- 144]: release test-http2-pipe 
                                                  
[12:16|%  46|+ 841|- 144]: release test-http2-priority-cycle- 
                                                             
[12:16|%  46|+ 842|- 144]: release test-http2-priority-event 
                                                            
[12:17|%  46|+ 843|- 144]: release test-http2-request-response-proto 
                                                                    
[12:17|%  46|+ 844|- 144]: release test-http2-respond-errors 
                                                            
[12:18|%  46|+ 845|- 144]: release test-http2-respond-file 
                                                          
[12:18|%  46|+ 846|- 144]: release test-http2-respond-file-204 
                                                              
[12:18|%  46|+ 847|- 144]: release test-http2-respond-file-304 
                                                              
[12:19|%  46|+ 848|- 144]: release test-http2-respond-file-404 
                                                              
[12:19|%  46|+ 849|- 144]: release test-http2-respond-file-compat 
                                                                 
[12:19|%  46|+ 850|- 144]: release test-http2-respond-file-error-dir 
                                                                    
[12:20|%  46|+ 851|- 144]: release test-http2-respond-file-error-pipe-offse... 
                                                                              
[12:20|%  46|+ 852|- 144]: release test-http2-respond-file-errors 
                                                                 
[12:20|%  46|+ 853|- 144]: release test-http2-respond-file-fd 
                                                             
[12:21|%  46|+ 854|- 144]: release test-http2-respond-file-fd-errors 
                                                                    
[12:21|%  46|+ 855|- 144]: release test-http2-respond-file-fd-invalid 
                                                                     
[12:21|%  46|+ 856|- 144]: release test-http2-respond-file-fd-range 
                                                                   
[12:22|%  46|+ 857|- 144]: release test-http2-respond-file-push 
                                                               
[12:22|%  46|+ 858|- 144]: release test-http2-respond-file-range 
                                                                
[12:22|%  47|+ 859|- 144]: release test-http2-respond-file-with-pipe 
                                                                    
[12:23|%  47|+ 860|- 144]: release test-http2-respond-nghttperrors 
                                                                  
[12:23|%  47|+ 861|- 144]: release test-http2-respond-no-data 
                                                             
[12:23|%  47|+ 862|- 144]: release test-http2-respond-with-fd-errors 
                                                                    
[12:24|%  47|+ 863|- 144]: release test-http2-response-splitting 
                                                                
[12:24|%  47|+ 864|- 144]: release test-http2-sent-headers 
                                                          
[12:24|%  47|+ 865|- 144]: release test-http2-serve-file 
                                                        
[12:25|%  47|+ 866|- 144]: release test-http2-server-errors 
                                                           
[12:25|%  47|+ 867|- 144]: release test-http2-server-http1-client 
                                                                 
[12:26|%  47|+ 868|- 144]: release test-http2-server-push-disabled 
                                                                  
[12:26|%  47|+ 869|- 144]: release test-http2-server-push-stream 
                                                                
[12:26|%  47|+ 870|- 144]: release test-http2-server-push-stream-errors 
                                                                       
[12:27|%  47|+ 871|- 144]: release test-http2-server-push-stream-errors-arg... 
                                                                              
[12:27|%  47|+ 872|- 144]: release test-http2-server-push-stream-head 
                                                                     
[12:27|%  47|+ 873|- 144]: release test-http2-server-rst-before-respond 
                                                                       
[12:28|%  47|+ 874|- 144]: release test-http2-server-rst-stream 
                                                               
[12:28|%  47|+ 875|- 144]: release test-http2-server-sessionerror 
                                                                 
[12:28|%  47|+ 876|- 144]: release test-http2-server-set-header 
                                                               
[12:29|%  47|+ 877|- 144]: release test-http2-server-settimeout-no-callback 
                                                                           
[12:29|%  47|+ 878|- 144]: release test-http2-server-shutdown-before-respon... 
                                                                              
[12:29|%  47|+ 879|- 144]: release test-http2-server-shutdown-options-error... 
                                                                              
[12:30|%  48|+ 880|- 144]: release test-http2-server-shutdown-redundant 
                                                                       
[12:30|%  48|+ 881|- 144]: release test-http2-server-socket-destroy 
                                                                   
[12:30|%  48|+ 882|- 144]: release test-http2-server-startup 
                                                            
[12:32|%  48|+ 883|- 144]: release test-http2-server-stream-session-destroy 
                                                                           
[12:32|%  48|+ 884|- 144]: release test-http2-server-timeout 
                                                            
[12:32|%  48|+ 885|- 144]: release test-http2-session-gc-while-write-schedu... 
                                                                              
[12:33|%  48|+ 886|- 144]: release test-http2-session-settings 
                                                              
[12:33|%  48|+ 887|- 144]: release test-http2-session-stream-state 
                                                                  
[12:33|%  48|+ 888|- 144]: release test-http2-session-unref 
                                                           
[12:34|%  48|+ 889|- 144]: release test-http2-settings-unsolicited-ack 
                                                                      
[12:34|%  48|+ 890|- 144]: release test-http2-short-stream-client-server 
                                                                        
[12:34|%  48|+ 891|- 144]: release test-http2-single-headers 
                                                            
[12:35|%  48|+ 892|- 144]: release test-http2-socket-proxy 
                                                          
[12:35|%  48|+ 893|- 144]: release test-http2-status-code 
                                                         
[12:35|%  48|+ 894|- 144]: release test-http2-status-code-invalid 
                                                                 
[12:36|%  48|+ 895|- 144]: release test-http2-stream-client 
                                                           
[12:36|%  48|+ 896|- 144]: release test-http2-stream-destroy-event-order 
                                                                        
[12:36|%  48|+ 897|- 144]: release test-http2-timeouts 
                                                      
[12:37|%  48|+ 898|- 144]: release test-http2-tls-disconnect 
                                                            
=== release test-http2-tls-disconnect ===
Path: parallel/test-http2-tls-disconnect
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-http2-tls-disconnect.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-http2-tls-disconnect.js' ]
1..0 # Skipped: no h2load
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
(node:86789) ExperimentalWarning: The http2 module is an experimental API.
out/Release/node[86789]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55ceeb9cd048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55ceeb9ce1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55ceebc4cbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x33802a30427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-http2-tls-disconnect.js
--- CRASHED (Signal: 6) ---

                                                            
[12:37|%  48|+ 898|- 145]: release test-http2-too-large-headers 
                                                               
[12:38|%  48|+ 899|- 145]: release test-http2-too-many-headers 
                                                              
[12:38|%  48|+ 900|- 145]: release test-http2-too-many-settings 
                                                               
[12:38|%  49|+ 901|- 145]: release test-http2-too-many-streams 
                                                              
[12:38|%  49|+ 902|- 145]: release test-http2-trailers 
                                                      
[12:39|%  49|+ 903|- 145]: release test-http2-util-assert-valid-pseudoheade... 
                                                                              
[12:39|%  49|+ 904|- 145]: release test-http2-util-asserts 
                                                          
[12:39|%  49|+ 905|- 145]: release test-http2-util-headers-list 
                                                               
[12:40|%  49|+ 906|- 145]: release test-http2-util-nghttp2error 
                                                               
[12:40|%  49|+ 907|- 145]: release test-http2-util-update-options-buffer 
                                                                        
[12:40|%  49|+ 908|- 145]: release test-http2-window-size 
                                                         
[12:41|%  49|+ 909|- 145]: release test-http2-write-callbacks 
                                                             
[12:41|%  49|+ 910|- 145]: release test-http2-write-empty-string 
                                                                
[12:41|%  49|+ 911|- 145]: release test-http2-write-finishes-after-stream-d... 
                                                                              
[12:42|%  49|+ 912|- 145]: release test-http2-zero-length-write 
                                                               
[12:42|%  49|+ 913|- 145]: release test-https-agent 
                                                   
[12:43|%  49|+ 914|- 145]: release test-https-agent-additional-options 
                                                                      
[12:43|%  49|+ 915|- 145]: release test-https-agent-constructor 
                                                               
[12:43|%  49|+ 916|- 145]: release test-https-agent-create-connection 
                                                                     
[12:43|%  49|+ 917|- 145]: release test-https-agent-disable-session-reuse 
                                                                         
[12:44|%  49|+ 918|- 145]: release test-https-agent-getname 
                                                           
[12:44|%  49|+ 919|- 145]: release test-https-agent-servername 
                                                              
[12:45|%  49|+ 920|- 145]: release test-https-agent-session-eviction 
                                                                    
[12:45|%  49|+ 921|- 145]: release test-https-agent-session-reuse 
                                                                 
[12:45|%  50|+ 922|- 145]: release test-https-agent-sni 
                                                       
[12:46|%  50|+ 923|- 145]: release test-https-agent-sockets-leak 
                                                                
[12:46|%  50|+ 924|- 145]: release test-https-argument-of-creating 
                                                                  
[12:47|%  50|+ 925|- 145]: release test-https-byteswritten 
                                                          
[12:47|%  50|+ 926|- 145]: release test-https-client-checkServerIdentity 
                                                                        
[12:47|%  50|+ 927|- 145]: release test-https-client-get-url 
                                                            
[12:48|%  50|+ 928|- 145]: release test-https-client-reject 
                                                           
[12:48|%  50|+ 929|- 145]: release test-https-client-resume 
                                                           
[12:48|%  50|+ 930|- 145]: release test-https-close 
                                                   
[12:50|%  50|+ 931|- 145]: release test-https-connect-address-family 
                                                                    
[12:50|%  50|+ 932|- 145]: release test-https-connecting-to-http 
                                                                
[12:51|%  50|+ 933|- 145]: release test-https-drain 
                                                   
[12:52|%  50|+ 934|- 145]: release test-https-eof-for-eom 
                                                         
[12:52|%  50|+ 935|- 145]: release test-https-foafssl 
                                                     
[12:52|%  50|+ 936|- 145]: release test-https-host-headers 
                                                          
[12:53|%  50|+ 937|- 145]: release test-https-localaddress 
                                                          
=== release test-https-localaddress ===
Path: parallel/test-https-localaddress
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-https-localaddress.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-https-localaddress.js' ]
------zone(testZone):worker(0) is terminating------
Connect from: 127.0.0.2
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[87226]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55646d36f048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55646d3701d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55646d5eebca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x3b0ff50427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-https-localaddress.js
--- CRASHED (Signal: 6) ---

                                                          
[12:53|%  50|+ 937|- 146]: release test-https-localaddress-bind-error 
                                                                     
[12:54|%  50|+ 938|- 146]: release test-https-options-boolean-check 
                                                                   
[12:54|%  50|+ 939|- 146]: release test-https-pfx 
                                                 
[12:54|%  50|+ 940|- 146]: release test-https-req-split 
                                                       
[12:55|%  50|+ 941|- 146]: release test-https-resume-after-renew 
                                                                
[12:55|%  51|+ 942|- 146]: release test-https-server-options-incoming-messa... 
                                                                              
[12:55|%  51|+ 943|- 146]: release test-https-server-options-server-respons... 
                                                                              
[12:56|%  51|+ 944|- 146]: release test-https-set-timeout-server 
                                                                
[13:01|%  51|+ 945|- 146]: release test-https-simple 
                                                    
[13:02|%  51|+ 946|- 146]: release test-https-socket-options 
                                                            
[13:02|%  51|+ 947|- 146]: release test-https-strict 
                                                    
[13:02|%  51|+ 948|- 146]: release test-https-timeout 
                                                     
=== release test-https-timeout ===
Path: parallel/test-https-timeout
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-https-timeout.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-https-timeout.js' ]
------zone(testZone):worker(0) is terminating------
Got request.  Doing nothing.
timeout occurred outside
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[87355]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x557b2252c048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x557b2252d1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x557b227abbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x32aaa878427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-https-timeout.js
--- CRASHED (Signal: 6) ---

                                                     
[13:03|%  51|+ 948|- 147]: release test-https-timeout-server 
                                                            
[13:03|%  51|+ 949|- 147]: release test-https-timeout-server-2 
                                                              
[13:04|%  51|+ 950|- 147]: release test-https-truncate 
                                                      
[13:04|%  51|+ 951|- 147]: release test-https-unix-socket-self-signed 
                                                                     
[13:04|%  51|+ 952|- 147]: release test-icu-data-dir 
                                                    
[13:05|%  51|+ 953|- 147]: release test-icu-punycode 
                                                    
[13:05|%  51|+ 954|- 147]: release test-icu-stringwidth 
                                                       
[13:05|%  51|+ 955|- 147]: release test-icu-transcode 
                                                     
[13:06|%  51|+ 956|- 147]: release test-inspect-async-hook-setup-at-inspect 
                                                                           
[13:06|%  51|+ 957|- 147]: release test-inspect-support-for-node_options 
                                                                        
[13:07|%  51|+ 958|- 147]: release test-inspector-esm 
                                                     
[13:07|%  51|+ 959|- 147]: release test-inspector-no-crash-ws-after-binding... 
                                                                              
[13:08|%  51|+ 960|- 147]: release test-inspector-reported-host 
                                                               
[13:08|%  51|+ 961|- 147]: release test-instanceof 
                                                  
[13:08|%  51|+ 962|- 147]: release test-internal-errors 
                                                       
[13:09|%  52|+ 963|- 147]: release test-internal-fs 
                                                   
[13:09|%  52|+ 964|- 147]: release test-internal-fs-syncwritestream 
                                                                   
[13:09|%  52|+ 965|- 147]: release test-internal-module-map-asserts 
                                                                   
[13:10|%  52|+ 966|- 147]: release test-internal-module-wrap 
                                                            
[13:11|%  52|+ 967|- 147]: release test-internal-modules 
                                                        
[13:11|%  52|+ 968|- 147]: release test-internal-modules-expose 
                                                               
[13:11|%  52|+ 969|- 147]: release test-internal-modules-strip-shebang 
                                                                      
[13:12|%  52|+ 970|- 147]: release test-internal-os 
                                                   
[13:12|%  52|+ 971|- 147]: release test-internal-process-binding 
                                                                
[13:12|%  52|+ 972|- 147]: release test-internal-socket-list-receive 
                                                                    
[13:13|%  52|+ 973|- 147]: release test-internal-socket-list-send 
                                                                 
[13:13|%  52|+ 974|- 147]: release test-internal-unicode 
                                                        
[13:13|%  52|+ 975|- 147]: release test-internal-util-assertCrypto 
                                                                  
[13:13|%  52|+ 976|- 147]: release test-internal-util-classwrapper 
                                                                  
[13:14|%  52|+ 977|- 147]: release test-internal-util-decorate-error-stack 
                                                                          
=== release test-internal-util-decorate-error-stack ===
Path: parallel/test-internal-util-decorate-error-stack
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-internal-util-decorate-error-stack.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-internal-util-decorate-error-stack.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert.ok(/;/g.test(stack))
 Unhandled Rejection at Promise Promise {
  <rejected> 'AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:\n\n  assert.ok(/;/g.test(stack))\n' }
Command: out/Release/node --expose_internals /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-internal-util-decorate-error-stack.js

                                                                          
[13:14|%  52|+ 977|- 148]: release test-internal-util-normalizeencoding 
                                                                       
[13:14|%  52|+ 978|- 148]: release test-intl 
                                            
[13:14|%  52|+ 979|- 148]: release test-intl-v8BreakIterator 
                                                            
[13:15|%  52|+ 980|- 148]: release test-js-stream-call-properties 
                                                                 
[13:15|%  52|+ 981|- 148]: release test-kill-segfault-freebsd 
                                                             
[13:15|%  52|+ 982|- 148]: release test-listen-fd-cluster 
                                                         
[13:16|%  53|+ 983|- 148]: release test-listen-fd-detached 
                                                          
[13:16|%  53|+ 984|- 148]: release test-listen-fd-detached-inherit 
                                                                  
[13:17|%  53|+ 985|- 148]: release test-listen-fd-ebadf 
                                                       
[13:17|%  53|+ 986|- 148]: release test-listen-fd-server 
                                                        
[13:18|%  53|+ 987|- 148]: release test-loaders-hidden-from-users 
                                                                 
[13:18|%  53|+ 988|- 148]: release test-memory-usage 
                                                    
[13:18|%  53|+ 989|- 148]: release test-memory-usage-emfile 
                                                           
[13:18|%  53|+ 990|- 148]: release test-microtask-queue-integration 
                                                                   
[13:19|%  53|+ 991|- 148]: release test-microtask-queue-integration-domain 
                                                                          
[13:19|%  53|+ 992|- 148]: release test-microtask-queue-run 
                                                           
[13:20|%  53|+ 993|- 148]: release test-microtask-queue-run-domain 
                                                                  
[13:20|%  53|+ 994|- 148]: release test-microtask-queue-run-immediate 
                                                                     
[13:20|%  53|+ 995|- 148]: release test-microtask-queue-run-immediate-domai... 
                                                                              
[13:20|%  53|+ 996|- 148]: release test-module-binding 
                                                      
[13:21|%  53|+ 997|- 148]: release test-module-builtin 
                                                      
[13:21|%  53|+ 998|- 148]: release test-module-children 
                                                       
[13:21|%  53|+ 999|- 148]: release test-module-circular-symlinks 
                                                                
[13:22|%  53|+ 1000|- 148]: release test-module-cjs-helpers 
                                                           
[13:22|%  53|+ 1001|- 148]: release test-module-globalpaths-nodepath 
                                                                    
[13:22|%  53|+ 1002|- 148]: release test-module-loading-error 
                                                             
[13:23|%  53|+ 1003|- 148]: release test-module-loading-globalpaths 
                                                                   
[13:23|%  54|+ 1004|- 148]: release test-module-main-extension-lookup 
                                                                     
=== release test-module-main-extension-lookup ===
Path: parallel/test-module-main-extension-lookup
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-module-main-extension-lookup.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-module-main-extension-lookup.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: spawnSync /home/zhanglei/src/node/test/parallel/test-module-main-extension-lookup.js EACCES Unhandled Rejection at Promise Promise {
  <rejected> 'Error: spawnSync /home/zhanglei/src/node/test/parallel/test-module-main-extension-lookup.js EACCES' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-module-main-extension-lookup.js

                                                                     
[13:24|%  54|+ 1004|- 149]: release test-module-main-fail 
                                                         
=== release test-module-main-fail ===
Path: parallel/test-module-main-fail
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-module-main-fail.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-module-main-fail.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(e.toString().match(/Error: Cannot find module/))
 Unhandled Rejection at Promise Promise {
  <rejected> 'AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:\n\n  assert(e.toString().match(/Error: Cannot find module/))\n' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-module-main-fail.js

                                                         
[13:24|%  54|+ 1004|- 150]: release test-module-main-preserve-symlinks-fail 
                                                                           
=== release test-module-main-preserve-symlinks-fail ===
Path: parallel/test-module-main-preserve-symlinks-fail
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-module-main-preserve-symlinks-fail.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-module-main-preserve-symlinks-fail.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(e.toString().match(/Error: Cannot find module/))
 Unhandled Rejection at Promise Promise {
  <rejected> 'AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:\n\n  assert(e.toString().match(/Error: Cannot find module/))\n' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-module-main-preserve-symlinks-fail.js

                                                                           
[13:24|%  54|+ 1004|- 151]: release test-module-nodemodulepaths 
                                                               
[13:25|%  54|+ 1005|- 151]: release test-module-readonly 
                                                        
=== release test-module-readonly ===
Path: parallel/test-module-readonly
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-module-readonly.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-module-readonly.js' ]
1..0 # Skipped: test only runs on Windows
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[88044]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x5583a9efd048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x5583a9efe1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x5583aa17cbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x29cc80427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-module-readonly.js
--- CRASHED (Signal: 6) ---

                                                        
[13:25|%  54|+ 1005|- 152]: release test-module-relative-lookup 
                                                               
[13:25|%  54|+ 1006|- 152]: release test-module-require-depth 
                                                             
=== release test-module-require-depth ===
Path: parallel/test-module-require-depth
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-module-require-depth.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-module-require-depth.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 1
+ 0 Unhandled Rejection at Promise Promise {
  <rejected> 'AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:\n+ expected - actual\n\n- 1\n+ 0' }
Command: out/Release/node --expose_internals /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-module-require-depth.js

                                                             
[13:26|%  54|+ 1006|- 153]: release test-module-symlinked-peer-modules 
                                                                      
[13:26|%  54|+ 1007|- 153]: release test-module-version 
                                                       
[13:26|%  54|+ 1008|- 153]: release test-net-access-byteswritten 
                                                                
[13:26|%  54|+ 1009|- 153]: release test-net-after-close 
                                                        
[13:27|%  54|+ 1010|- 153]: release test-net-better-error-messages-listen 
                                                                         
[13:27|%  54|+ 1011|- 153]: release test-net-better-error-messages-listen-p... 
                                                                              
[13:27|%  54|+ 1012|- 153]: release test-net-better-error-messages-path 
                                                                       
[13:27|%  54|+ 1013|- 153]: release test-net-better-error-messages-port-hos... 
                                                                              
[13:28|%  54|+ 1014|- 153]: release test-net-binary 
                                                   
[13:28|%  54|+ 1015|- 153]: release test-net-bind-twice 
                                                       
[13:28|%  54|+ 1016|- 153]: release test-net-buffersize 
                                                       
[13:29|%  54|+ 1017|- 153]: release test-net-bytes-read 
                                                       
[13:29|%  54|+ 1018|- 153]: release test-net-bytes-stats 
                                                        
[13:29|%  54|+ 1019|- 153]: release test-net-bytes-written-large 
                                                                
[13:30|%  54|+ 1020|- 153]: release test-net-can-reset-timeout 
                                                              
[13:30|%  55|+ 1021|- 153]: release test-net-client-bind-twice 
                                                              
[13:30|%  55|+ 1022|- 153]: release test-net-connect-after-destroy 
                                                                  
[13:31|%  55|+ 1023|- 153]: release test-net-connect-buffer 
                                                           
[13:31|%  55|+ 1024|- 153]: release test-net-connect-call-socket-connect 
                                                                        
[13:31|%  55|+ 1025|- 153]: release test-net-connect-handle-econnrefused 
                                                                        
[13:31|%  55|+ 1026|- 153]: release test-net-connect-immediate-destroy 
                                                                      
[13:32|%  55|+ 1027|- 153]: release test-net-connect-immediate-finish 
                                                                     
[13:32|%  55|+ 1028|- 153]: release test-net-connect-options-allowhalfopen 
                                                                          
[13:32|%  55|+ 1029|- 153]: release test-net-connect-options-fd 
                                                               
[13:33|%  55|+ 1030|- 153]: release test-net-connect-options-ipv6 
                                                                 
[13:33|%  55|+ 1031|- 153]: release test-net-connect-options-path 
                                                                 
[13:33|%  55|+ 1032|- 153]: release test-net-connect-options-port 
                                                                 
[13:34|%  55|+ 1033|- 153]: release test-net-connect-paused-connection 
                                                                      
[13:34|%  55|+ 1034|- 153]: release test-net-dns-custom-lookup 
                                                              
[13:34|%  55|+ 1035|- 153]: release test-net-dns-error 
                                                      
[13:35|%  55|+ 1036|- 153]: release test-net-dns-lookup 
                                                       
[13:35|%  55|+ 1037|- 153]: release test-net-dns-lookup-skip 
                                                            
[13:35|%  55|+ 1038|- 153]: release test-net-during-close 
                                                         
=== release test-net-during-close ===
Path: parallel/test-net-during-close
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-net-during-close.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-net-during-close.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[88385]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x560647014048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x5606470151d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x560647293bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x2ffea8a0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-net-during-close.js
--- CRASHED (Signal: 6) ---

                                                         
[13:36|%  55|+ 1038|- 154]: release test-net-eaddrinuse 
                                                       
[13:36|%  55|+ 1039|- 154]: release test-net-end-close 
                                                      
[13:36|%  55|+ 1040|- 154]: release test-net-end-without-connect 
                                                                
[13:36|%  56|+ 1041|- 154]: release test-net-error-twice 
                                                        
[13:37|%  56|+ 1042|- 154]: release test-net-internal 
                                                     
[13:37|%  56|+ 1043|- 154]: release test-net-isip 
                                                 
[13:37|%  56|+ 1044|- 154]: release test-net-keepalive 
                                                      
[13:38|%  56|+ 1045|- 154]: release test-net-large-string 
                                                         
[13:38|%  56|+ 1046|- 154]: release test-net-listen-after-destroying-stdin 
                                                                          
[13:38|%  56|+ 1047|- 154]: release test-net-listen-close-server 
                                                                
[13:39|%  56|+ 1048|- 154]: release test-net-listen-close-server-callback-i... 
                                                                              
[13:39|%  56|+ 1049|- 154]: release test-net-listen-error 
                                                         
[13:39|%  56|+ 1050|- 154]: release test-net-listen-exclusive-random-ports 
                                                                          
[13:40|%  56|+ 1051|- 154]: release test-net-listen-fd0 
                                                       
[13:40|%  56|+ 1052|- 154]: release test-net-listen-invalid-port 
                                                                
[13:40|%  56|+ 1053|- 154]: release test-net-listening 
                                                      
[13:40|%  56|+ 1054|- 154]: release test-net-local-address-port 
                                                               
[13:41|%  56|+ 1055|- 154]: release test-net-localerror 
                                                       
[13:41|%  56|+ 1056|- 154]: release test-net-normalize-args 
                                                           
[13:41|%  56|+ 1057|- 154]: release test-net-options-lookup 
                                                           
[13:41|%  56|+ 1058|- 154]: release test-net-pause-resume-connecting 
                                                                    
[13:42|%  56|+ 1059|- 154]: release test-net-persistent-keepalive 
                                                                 
[13:43|%  56|+ 1060|- 154]: release test-net-persistent-nodelay 
                                                               
[13:43|%  56|+ 1061|- 154]: release test-net-persistent-ref-unref 
                                                                 
[13:43|%  57|+ 1062|- 154]: release test-net-pingpong 
                                                     
[13:44|%  57|+ 1063|- 154]: release test-net-pipe-connect-errors 
                                                                
[13:44|%  57|+ 1064|- 154]: release test-net-reconnect 
                                                      
[13:45|%  57|+ 1065|- 154]: release test-net-remote-address-port 
                                                                
[13:45|%  57|+ 1066|- 154]: release test-net-server-call-listen-multiple-ti... 
                                                                              
[13:45|%  57|+ 1067|- 154]: release test-net-server-close 
                                                         
[13:46|%  57|+ 1068|- 154]: release test-net-server-connections 
                                                               
[13:46|%  57|+ 1069|- 154]: release test-net-server-connections-child-null 
                                                                          
[13:46|%  57|+ 1070|- 154]: release test-net-server-listen-handle 
                                                                 
[13:47|%  57|+ 1071|- 154]: release test-net-server-listen-options 
                                                                  
[13:47|%  57|+ 1072|- 154]: release test-net-server-listen-path 
                                                               
[13:47|%  57|+ 1073|- 154]: release test-net-server-listen-remove-callback 
                                                                          
[13:48|%  57|+ 1074|- 154]: release test-net-server-max-connections 
                                                                   
[13:48|%  57|+ 1075|- 154]: release test-net-server-max-connections-close-m... 
                                                                              
[13:48|%  57|+ 1076|- 154]: release test-net-server-options 
                                                           
[13:48|%  57|+ 1077|- 154]: release test-net-server-pause-on-connect 
                                                                    
[13:49|%  57|+ 1078|- 154]: release test-net-server-try-ports 
                                                             
[13:49|%  57|+ 1079|- 154]: release test-net-server-unref 
                                                         
[13:49|%  57|+ 1080|- 154]: release test-net-server-unref-persistent 
                                                                    
[13:49|%  57|+ 1081|- 154]: release test-net-settimeout 
                                                       
[13:50|%  57|+ 1082|- 154]: release test-net-socket-byteswritten 
                                                                
[13:50|%  57|+ 1083|- 154]: release test-net-socket-close-after-end 
                                                                   
[13:51|%  58|+ 1084|- 154]: release test-net-socket-connect-without-cb 
                                                                      
[13:51|%  58|+ 1085|- 154]: release test-net-socket-connecting 
                                                              
[13:51|%  58|+ 1086|- 154]: release test-net-socket-constructor 
                                                               
[13:52|%  58|+ 1087|- 154]: release test-net-socket-destroy-send 
                                                                
[13:52|%  58|+ 1088|- 154]: release test-net-socket-destroy-twice 
                                                                 
[13:52|%  58|+ 1089|- 154]: release test-net-socket-local-address 
                                                                 
[13:52|%  58|+ 1090|- 154]: release test-net-socket-no-halfopen-enforcer 
                                                                        
[13:53|%  58|+ 1091|- 154]: release test-net-socket-ready-without-cb 
                                                                    
[13:53|%  58|+ 1092|- 154]: release test-net-socket-timeout 
                                                           
[13:53|%  58|+ 1093|- 154]: release test-net-socket-timeout-unref 
                                                                 
[13:53|%  58|+ 1094|- 154]: release test-net-socket-write-after-close 
                                                                     
[13:54|%  58|+ 1095|- 154]: release test-net-socket-write-error 
                                                               
[13:54|%  58|+ 1096|- 154]: release test-net-stream 
                                                   
[13:54|%  58|+ 1097|- 154]: release test-net-sync-cork 
                                                      
[13:55|%  58|+ 1098|- 154]: release test-net-timeout-no-handle 
                                                              
[13:55|%  58|+ 1099|- 154]: release test-net-write-after-close 
                                                              
[13:55|%  58|+ 1100|- 154]: release test-net-write-connect-write 
                                                                
[13:56|%  58|+ 1101|- 154]: release test-net-write-fully-async-buffer 
                                                                     
[13:56|%  58|+ 1102|- 154]: release test-net-write-fully-async-hex-string 
                                                                         
[13:56|%  58|+ 1103|- 154]: release test-net-write-slow 
                                                       
[13:57|%  58|+ 1104|- 154]: release test-next-tick 
                                                  
[13:58|%  59|+ 1105|- 154]: release test-next-tick-doesnt-hang 
                                                              
[13:58|%  59|+ 1106|- 154]: release test-next-tick-domain 
                                                         
[13:58|%  59|+ 1107|- 154]: release test-next-tick-errors 
                                                         
[13:59|%  59|+ 1108|- 154]: release test-next-tick-intentional-starvation 
                                                                         
[13:59|%  59|+ 1109|- 154]: release test-next-tick-ordering 
                                                           
[13:59|%  59|+ 1110|- 154]: release test-next-tick-ordering2 
                                                            
[14:00|%  59|+ 1111|- 154]: release test-next-tick-when-exiting 
                                                               
=== release test-next-tick-when-exiting ===
Path: parallel/test-next-tick-when-exiting
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-next-tick-when-exiting.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-next-tick-when-exiting.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[89139]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x5596b4cc0048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x5596b4cc11d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x5596b4f3fbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x2231ffa8427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-next-tick-when-exiting.js
--- CRASHED (Signal: 6) ---

                                                               
[14:00|%  59|+ 1111|- 155]: release test-npm-install 
                                                    
[14:01|%  59|+ 1112|- 155]: release test-openssl-ca-options 
                                                           
[14:02|%  59|+ 1113|- 155]: release test-os 
                                           
[14:02|%  59|+ 1114|- 155]: release test-os-eol 
                                               
[14:02|%  59|+ 1115|- 155]: release test-os-homedir-no-envvar 
                                                             
[14:02|%  59|+ 1116|- 155]: release test-os-userinfo-handles-getter-errors 
                                                                          
[14:03|%  59|+ 1117|- 155]: release test-outgoing-message-pipe 
                                                              
[14:03|%  59|+ 1118|- 155]: release test-path 
                                             
[14:03|%  59|+ 1119|- 155]: release test-path-basename 
                                                      
[14:04|%  59|+ 1120|- 155]: release test-path-dirname 
                                                     
[14:04|%  59|+ 1121|- 155]: release test-path-extname 
                                                     
[14:04|%  59|+ 1122|- 155]: release test-path-isabsolute 
                                                        
[14:04|%  59|+ 1123|- 155]: release test-path-join 
                                                  
[14:05|%  59|+ 1124|- 155]: release test-path-makelong 
                                                      
[14:05|%  60|+ 1125|- 155]: release test-path-normalize 
                                                       
[14:05|%  60|+ 1126|- 155]: release test-path-parse-format 
                                                          
[14:05|%  60|+ 1127|- 155]: release test-path-relative 
                                                      
[14:06|%  60|+ 1128|- 155]: release test-path-resolve 
                                                     
[14:06|%  60|+ 1129|- 155]: release test-path-zero-length-strings 
                                                                 
[14:06|%  60|+ 1130|- 155]: release test-pending-deprecation 
                                                            
[14:07|%  60|+ 1131|- 155]: release test-performance-function 
                                                             
[14:07|%  60|+ 1132|- 155]: release test-performance-gc 
                                                       
[14:07|%  60|+ 1133|- 155]: release test-performanceobserver 
                                                            
[14:08|%  60|+ 1134|- 155]: release test-pipe-address 
                                                     
[14:08|%  60|+ 1135|- 155]: release test-pipe-file-to-http 
                                                          
[14:09|%  60|+ 1136|- 155]: release test-pipe-head 
                                                  
=== release test-pipe-head ===
Path: parallel/test-pipe-head
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-pipe-head.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-pipe-head.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 3
+ 1
    at /home/zhanglei/src/node/test/parallel/test-pipe-head.js:16:10
    at /home/zhanglei/src/node/test/common/index.js:475:15
    at ChildProcess.exithandler (child_process.js:273:7)
    at ChildProcess.emit (events.js:182:13)
    at maybeClose (internal/child_process.js:947:16)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:236:5)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-pipe-head.js

                                                  
[14:10|%  60|+ 1136|- 156]: release test-pipe-outgoing-message-data-emitted... 
                                                                              
[14:10|%  60|+ 1137|- 156]: release test-pipe-return-val 
                                                        
[14:10|%  60|+ 1138|- 156]: release test-pipe-stream 
                                                    
[14:10|%  60|+ 1139|- 156]: release test-pipe-unref 
                                                   
[14:11|%  60|+ 1140|- 156]: release test-pipe-writev 
                                                    
[14:11|%  60|+ 1141|- 156]: release test-postmortem-metadata 
                                                            
[14:12|%  60|+ 1142|- 156]: release test-preload 
                                                
=== release test-preload ===
Path: parallel/test-preload
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-preload.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-preload.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
events.js:167
      throw er; // Unhandled 'error' event
      ^

Error: spawn /home/zhanglei/src/node/test/parallel/test-preload.js EACCES
    at Process.ChildProcess._handle.onexit (internal/child_process.js:217:19)
    at onErrorNT (internal/child_process.js:394:16)
    at process._tickCallback (internal/process/next_tick.js:174:19)
Emitted 'error' event at:
    at Process.ChildProcess._handle.onexit (internal/child_process.js:223:12)
    at onErrorNT (internal/child_process.js:394:16)
    at process._tickCallback (internal/process/next_tick.js:174:19)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-preload.js

                                                
[14:12|%  60|+ 1142|- 157]: release test-process-argv-0 
                                                       
[14:12|%  60|+ 1143|- 157]: release test-process-assert 
                                                       
[14:13|%  60|+ 1144|- 157]: release test-process-beforeexit 
                                                           
[14:13|%  61|+ 1145|- 157]: release test-process-binding 
                                                        
[14:13|%  61|+ 1146|- 157]: release test-process-chdir 
                                                      
[14:13|%  61|+ 1147|- 157]: release test-process-config 
                                                       
[14:14|%  61|+ 1148|- 157]: release test-process-constants-noatime 
                                                                  
[14:14|%  61|+ 1149|- 157]: release test-process-cpuUsage 
                                                         
[14:14|%  61|+ 1150|- 157]: release test-process-dlopen-undefined-exports 
                                                                         
[14:15|%  61|+ 1151|- 157]: release test-process-domain-segfault 
                                                                
[14:15|%  61|+ 1152|- 157]: release test-process-emit 
                                                     
[14:15|%  61|+ 1153|- 157]: release test-process-emit-warning-from-native 
                                                                         
[14:16|%  61|+ 1154|- 157]: release test-process-emitwarning 
                                                            
[14:16|%  61|+ 1155|- 157]: release test-process-env 
                                                    
=== release test-process-env ===
Path: parallel/test-process-env
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-process-env.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-process-env.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
events.js:167
      throw er; // Unhandled 'error' event
      ^

Error: spawn /home/zhanglei/src/node/test/parallel/test-process-env.js EACCES
    at Process.ChildProcess._handle.onexit (internal/child_process.js:217:19)
    at onErrorNT (internal/child_process.js:394:16)
    at process._tickCallback (internal/process/next_tick.js:174:19)
Emitted 'error' event at:
    at Process.ChildProcess._handle.onexit (internal/child_process.js:223:12)
    at onErrorNT (internal/child_process.js:394:16)
    at process._tickCallback (internal/process/next_tick.js:174:19)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-process-env.js

                                                    
[14:16|%  61|+ 1155|- 158]: release test-process-env-deprecation 
                                                                
[14:16|%  61|+ 1156|- 158]: release test-process-env-symbols 
                                                            
[14:17|%  61|+ 1157|- 158]: release test-process-env-windows-error-reset 
                                                                        
[14:17|%  61|+ 1158|- 158]: release test-process-euid-egid 
                                                          
[14:17|%  61|+ 1159|- 158]: release test-process-exception-capture 
                                                                  
=== release test-process-exception-capture ===
Path: parallel/test-process-exception-capture
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-process-exception-capture.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-process-exception-capture.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: foo Unhandled Rejection at Promise Promise { <rejected> 'Error: foo' }
Command: out/Release/node --abort-on-uncaught-exception /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-process-exception-capture.js

                                                                  
[14:18|%  61|+ 1159|- 159]: release test-process-exception-capture-errors 
                                                                         
[14:18|%  61|+ 1160|- 159]: release test-process-exception-capture-should-a... 
                                                                              
=== release test-process-exception-capture-should-abort-on-uncaught ===
Path: parallel/test-process-exception-capture-should-abort-on-uncaught
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-process-exception-capture-should-abort-on-uncaught.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-process-exception-capture-should-abort-on-uncaught.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: foo Unhandled Rejection at Promise Promise { <rejected> 'Error: foo' }
Command: out/Release/node --abort-on-uncaught-exception /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-process-exception-capture-should-abort-on-uncaught.js

                                                                              
[14:18|%  61|+ 1160|- 160]: release test-process-exception-capture-should-a... 
                                                                              
=== release test-process-exception-capture-should-abort-on-uncaught-setflagsfromstring ===
Path: parallel/test-process-exception-capture-should-abort-on-uncaught-setflagsfromstring
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-process-exception-capture-should-abort-on-uncaught-setflagsfromstring.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-process-exception-capture-should-abort-on-uncaught-setflagsfromstring.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: foo Unhandled Rejection at Promise Promise { <rejected> 'Error: foo' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-process-exception-capture-should-abort-on-uncaught-setflagsfromstring.js

                                                                              
[14:18|%  61|+ 1160|- 161]: release test-process-exec-argv 
                                                          
[14:19|%  61|+ 1161|- 161]: release test-process-execpath 
                                                         
[14:19|%  62|+ 1162|- 161]: release test-process-exit 
                                                     
[14:19|%  62|+ 1163|- 161]: release test-process-exit-code 
                                                          
[14:20|%  62|+ 1164|- 161]: release test-process-exit-from-before-exit 
                                                                      
=== release test-process-exit-from-before-exit ===
Path: parallel/test-process-exit-from-before-exit
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-process-exit-from-before-exit.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-process-exit-from-before-exit.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[89752]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55b986eee048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55b986eef1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55b98716dbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0xf54dc88427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-process-exit-from-before-exit.js
--- CRASHED (Signal: 6) ---

                                                                      
[14:20|%  62|+ 1164|- 162]: release test-process-exit-handler 
                                                             
[14:21|%  62|+ 1165|- 162]: release test-process-exit-recursive 
                                                               
=== release test-process-exit-recursive ===
Path: parallel/test-process-exit-recursive
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-process-exit-recursive.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-process-exit-recursive.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[89769]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55b83233f048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55b8323401d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55b8325bebca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x26abb4d0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-process-exit-recursive.js
--- CRASHED (Signal: 6) ---

                                                               
[14:21|%  62|+ 1165|- 163]: release test-process-external-stdio-close 
                                                                     
[14:22|%  62|+ 1166|- 163]: release test-process-external-stdio-close-spawn 
                                                                           
[14:22|%  62|+ 1167|- 163]: release test-process-fatal-exception-tick 
                                                                     
=== release test-process-fatal-exception-tick ===
Path: parallel/test-process-fatal-exception-tick
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-process-fatal-exception-tick.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-process-fatal-exception-tick.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: caughtException Unhandled Rejection at Promise Promise { <rejected> 'Error: caughtException' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-process-fatal-exception-tick.js

                                                                     
[14:22|%  62|+ 1167|- 164]: release test-process-getactivehandles 
                                                                 
[14:22|%  62|+ 1168|- 164]: release test-process-getactiverequests 
                                                                  
[14:23|%  62|+ 1169|- 164]: release test-process-getgroups 
                                                          
[14:23|%  62|+ 1170|- 164]: release test-process-hrtime 
                                                       
[14:23|%  62|+ 1171|- 164]: release test-process-kill-null 
                                                          
[14:24|%  62|+ 1172|- 164]: release test-process-kill-pid 
                                                         
[14:24|%  62|+ 1173|- 164]: release test-process-next-tick 
                                                          
[14:24|%  62|+ 1174|- 164]: release test-process-no-deprecation 
                                                               
[14:25|%  62|+ 1175|- 164]: release test-process-ppid 
                                                     
[14:25|%  62|+ 1176|- 164]: release test-process-prototype 
                                                          
[14:25|%  62|+ 1177|- 164]: release test-process-raw-debug 
                                                          
[14:26|%  62|+ 1178|- 164]: release test-process-redirect-warnings 
                                                                  
[14:26|%  62|+ 1179|- 164]: release test-process-redirect-warnings-env 
                                                                      
[14:26|%  63|+ 1180|- 164]: release test-process-release 
                                                        
[14:27|%  63|+ 1181|- 164]: release test-process-remove-all-signal-listener... 
                                                                              
[14:27|%  63|+ 1182|- 164]: release test-process-uid-gid 
                                                        
[14:27|%  63|+ 1183|- 164]: release test-process-versions 
                                                         
[14:28|%  63|+ 1184|- 164]: release test-process-warning 
                                                        
[14:28|%  63|+ 1185|- 164]: release test-process-wrap 
                                                     
[14:28|%  63|+ 1186|- 164]: release test-promise-internal-creation 
                                                                  
[14:28|%  63|+ 1187|- 164]: release test-promises-unhandled-proxy-rejection... 
                                                                              
[14:29|%  63|+ 1188|- 164]: release test-promises-unhandled-rejections 
                                                                      
[14:30|%  63|+ 1189|- 164]: release test-promises-unhandled-symbol-rejectio... 
                                                                              
[14:30|%  63|+ 1190|- 164]: release test-promises-warning-on-unhandled-reje... 
                                                                              
[14:30|%  63|+ 1191|- 164]: release test-punycode 
                                                 
[14:31|%  63|+ 1192|- 164]: release test-querystring 
                                                    
[14:31|%  63|+ 1193|- 164]: release test-querystring-escape 
                                                           
[14:31|%  63|+ 1194|- 164]: release test-querystring-maxKeys-non-finite 
                                                                       
[14:31|%  63|+ 1195|- 164]: release test-querystring-multichar-separator 
                                                                        
[14:32|%  63|+ 1196|- 164]: release test-readline 
                                                 
[14:32|%  63|+ 1197|- 164]: release test-readline-csi 
                                                     
[14:32|%  63|+ 1198|- 164]: release test-readline-emit-keypress-events 
                                                                      
[14:33|%  63|+ 1199|- 164]: release test-readline-interface 
                                                           
[14:33|%  63|+ 1200|- 164]: release test-readline-keys 
                                                      
[14:38|%  63|+ 1201|- 164]: release test-readline-position 
                                                          
[14:38|%  64|+ 1202|- 164]: release test-readline-reopen 
                                                        
[14:38|%  64|+ 1203|- 164]: release test-readline-set-raw-mode 
                                                              
[14:38|%  64|+ 1204|- 164]: release test-readline-undefined-columns 
                                                                   
[14:39|%  64|+ 1205|- 164]: release test-readuint 
                                                 
[14:39|%  64|+ 1206|- 164]: release test-ref-unref-return 
                                                         
[14:39|%  64|+ 1207|- 164]: release test-regression-object-prototype 
                                                                    
[14:40|%  64|+ 1208|- 164]: release test-repl 
                                             
=== release test-repl ===
Path: parallel/test-repl
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out: ""
in: ""
out: "message"
in: "'Read, Eval, Print Loop'"
out: "invoke_me(987)"
in: "'invoked 987'"
out: "a = 12345"
in: "12345"
out: "{a:1}"
in: "{ a: 1 }"
out: "throw new Error('test error');"
in: "Error: test error"
out: "function test_func() {"
in: "... "
out: ".break"
in: ""
out: "eval(\"function test_func() {\")"
in: "SyntaxError: Unexpected end of input"
out: "`io.js"
in: "... "
out: ".break"
in: ""
out: "`io.js ${\"1.0\""
in: "`io.js ${\"1.0\""
in: "         ^^^^^"
in: ""
in: "SyntaxError: Missing } in template expression"
in: ""
out: "`io.js ${"
in: "... "
out: "\"1.0\" + \".2\"}`"
in: "'io.js 1.0.2'"
out: "(\"a\""
in: "... "
out: ".charAt(0))"
in: "'a'"
out: ".1234"
in: "0.1234"
out: ".1+.1"
in: "0.2"
out: "JSON.parse('{\"valid\": \"json\"}');"
in: "{ valid: 'json' }"
out: "JSON.parse('{invalid: \\'json\\'}');"
in: "SyntaxError: Unexpected token i in JSON at position 1"
in: ""
out: "JSON.parse('066');"
in: "SyntaxError: Unexpected number in JSON at position 1"
in: ""
out: "JSON.parse('{');"
in: "SyntaxError: Unexpected end of JSON input"
in: ""
out: "/(/;"
in: "SyntaxError: Invalid regular expression: /(/: Unterminated group"
out: "new RegExp(\"foo\", \"wrong modifier\");"
in: "SyntaxError: Invalid flags supplied to RegExp constructor 'wrong modifier'"
in: ""
out: "(function() { \"use strict\"; return 0755; })()"
in: "(function() { \"use strict\"; return 0755; })()"
in: "                                   ^^^^"
in: ""
in: "SyntaxError: Octal literals are not allowed in strict mode."
in: ""
out: "(function(a, a, b) { \"use strict\"; return a + b + c; })()"
in: "(function(a, a, b) { \"use strict\"; return a + b + c; })()"
in: "             ^"
in: ""
in: "SyntaxError: Duplicate parameter name not allowed in this context"
in: ""
out: "(function() { \"use strict\"; with (this) {} })()"
in: "(function() { \"use strict\"; with (this) {} })()"
in: "                            ^^^^"
in: ""
in: "SyntaxError: Strict mode code may not include a with statement"
in: ""
out: "(function() { \"use strict\"; var x; delete x; })()"
in: "(function() { \"use strict\"; var x; delete x; })()"
in: "                                          ^"
in: ""
in: "SyntaxError: Delete of an unqualified identifier in strict mode."
in: ""
out: "(function() { \"use strict\"; eval = 17; })()"
in: "(function() { \"use strict\"; eval = 17; })()"
in: "                            ^^^^"
in: ""
in: "SyntaxError: Unexpected eval or arguments in strict mode"
in: ""
out: "(function() { \"use strict\"; if (true) function f() { } })()"
in: "(function() { \"use strict\"; if (true) function f() { } })()"
in: "                                      ^^^^^^^^"
in: ""
in: "SyntaxError: In strict mode code, functions can only be declared at top level or inside a block."
in: ""
out: "function blah() { return 1; }"
in: "undefined"
out: "blah()"
in: "1"
out: "var I = [1,2,3,function() {}]; I.pop()"
in: "[Function]"
out: "{ a: "
in: "... "
out: "1 }"
in: "{ a: 1 }"
out: "(function() {"
in: "... "
out: "// blah"
in: "... "
out: "return 1;"
in: "... "
out: "})()"
in: "1"
out: "function f(){}; f(f(1,"
in: "... "
out: "2)"
in: "... "
out: ")"
in: "undefined"
out: "npm install foobar"
in: "npm should be run outside of the node repl, in your normal shell."
in: "(Press Control-D to exit.)"
out: "(function() {\n\nreturn 1;\n})()"
in: "... ... ... 1"
out: "{\n\na: 1\n}"
in: "... ... ... { a: 1 }"
out: "url.format(\"http://google.com\")"
in: "'http://google.com/'"
out: "var path = 42; path"
in: "42"
out: ".invalid_repl_command"
in: "Invalid REPL keyword"
out: ".toString"
in: "Invalid REPL keyword"
out: "[] \\"
in: "[] \\"
in: "   ^"
in: ""
in: "SyntaxError: Invalid or unexpected token"
in: ""
out: "'the\\\nfourth\\\neye'"
in: "... ... 'thefourtheye'"
out: "  \t    .break  \t  "
in: ""
out: "'the \\\n   fourth\t\t\\\n  eye  '"
in: "... ... 'the    fourth\\t\\t  eye  '"
out: "'the \\\n   fourth' +  '\t\t\\\n  eye  '"
in: "... ... 'the    fourth\\t\\t  eye  '"
out: "'\\\n.break"
in: "... node via Unix socket> "
out: "'thefourth\\\n.help\neye'"
in: "... .break    Sometimes you get stuck, this gets you out"
in: ".clear    Alias for .break"
in: ".editor   Enter editor mode"
in: ".exit     Exit the repl"
in: ".help     Print this help message"
in: ".load     Load JS from a file into the REPL session"
in: ".save     Save all evaluated commands in this REPL session to a file"
in: "... 'thefourtheye'"
out: "\n\r\n\r\n"
in: ""
out: "'the\\\n\\\nfourtheye'\n"
in: "... ... 'thefourtheye'"
out: "/(.)(.)(.)(.)(.)(.)(.)(.)(.)/.test('123456789')\n"
in: "true"
out: "RegExp.$1\nRegExp.$2\nRegExp.$3\nRegExp.$4\nRegExp.$5\nRegExp.$6\nRegExp.$7\nRegExp.$8\nRegExp.$9\n"
in: "'1'"
in: "'2'"
in: "'3'"
in: "'4'"
in: "'5'"
in: "'6'"
in: "'7'"
in: "'8'"
in: "'9'"
out: "function x() {\nreturn '\\n';\n }"
in: "... ... undefined"
out: "function x() {\nreturn '\\\\';\n }"
in: "... ... undefined"
out: "function x() {\n//'\n }"
in: "... ... undefined"
out: "function x() {\n//\"\n }"
in: "... ... undefined"
out: "function x() {//'\n }"
in: "... undefined"
out: "function x() {//\"\n }"
in: "... undefined"
out: "function x() {\nvar i = \"'\";\n }"
in: "... ... undefined"
out: "function x(/*optional*/) {}"
in: "undefined"
out: "function x(/* // 5 */) {}"
in: "undefined"
out: "// /* 5 */"
in: "undefined"
out: "\"//\""
in: "'//'"
out: "\"data /*with*/ comment\""
in: "'data /*with*/ comment'"
out: "function x(/*fn's optional params*/) {}"
in: "undefined"
out: "/* '\n\"\n'\"'\n*/"
in: "... ... ... undefined"
out: "require(\"internal/repl\")"
in: "Error: Cannot find module 'internal/repl'"
in: "    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)"
in: "    at Function.Module._load (internal/modules/cjs/loader.js:497:25)"
in: "    at Module.require (internal/modules/cjs/loader.js:626:17)"
in: "    at require (internal/modules/cjs/helpers.js:20:18)"
out: "function x(s) {\nreturn s.replace(/'/,'');\n}"
in: "... ... undefined"
out: "function x(s) {\nreturn s.replace(/'/,'');\n}"
in: "... ... undefined"
out: "function x(s) {\nreturn s.replace(/\"/,\"\");\n}"
in: "... ... undefined"
out: "function x(s) {\nreturn s.replace(/.*/,\"\");\n}"
in: "... ... undefined"
out: "{ var x = 4; }"
in: "undefined"
out: "a = 3.5e"
in: "a = 3.5e"
in: "    ^^^^"
in: ""
in: "SyntaxError: Invalid or unexpected token"
in: ""
out: "function name(){ return \"node\"; };name()"
in: "'node'"
out: "function name(){ return \"nodejs\"; };name()"
in: "'nodejs'"
out: "a = 3.5e"
in: "a = 3.5e"
in: "    ^^^^"
in: ""
in: "SyntaxError: Invalid or unexpected token"
in: ""
out: "a = 3.5e"
in: "a = 3.5e"
in: "    ^^^^"
in: ""
in: "SyntaxError: Invalid or unexpected token"
in: ""
out: "function* foo() {}; foo().next();"
in: "{ value: undefined, done: true }"
out: "function *foo() {}; foo().next();"
in: "{ value: undefined, done: true }"
out: "function*foo() {}; foo().next();"
in: "{ value: undefined, done: true }"
out: "function * foo() {}; foo().next()"
in: "{ value: undefined, done: true }"
out: "function foo() {\nvar bar = 1 / 1; // \"/\"\n}"
in: "... ... undefined"
out: "(function() {\nreturn /foo/ / /bar/;\n}())"
in: "... ... NaN"
out: "(function() {\nif (false) {} /bar\"/;\n}())"
in: "... ... undefined"
out: "new Proxy({x:42}, {get(){throw null}});"
in: "Proxy [ { x: 42 }, { get: [Function: get] } ]"
out: "repl.writer.options.showProxy = false, new Proxy({x:42}, {});"
in: "{ x: 42 }"
out: "`foo \n`"
in: "... 'foo \\n'"
out: " \t  \n"
in: "undefined"
out: "...[]"
in: "...[]"
in: "^^^"
in: ""
in: "SyntaxError: Unexpected token ..."
in: ""
out: ".break"
in: ""
out: "console.log(\"Missing comma in arg list\" process.version)"
in: "console.log(\"Missing comma in arg list\" process.version)"
in: "            ^^^^^^^^^^^^^^^^^^^^^^^^^^^"
in: ""
in: "SyntaxError: missing ) after argument list"
in: ""
out: "x = {\nfield\n{"
in: "... ... {"
in: "^"
in: ""
in: "SyntaxError: Unexpected token {"
in: ""
out: "(2 + 3))"
in: "(2 + 3))"
in: "       ^"
in: ""
in: "SyntaxError: Unexpected token )"
in: ""
out: "if (typeof process === \"object\"); {"
in: "... "
out: "console.log(\"process is defined\");"
in: "... "
out: "} else {"
in: "} else {"
in: "  ^^^^"
in: ""
in: "SyntaxError: Unexpected token else"
in: ""
out: "ref = 1"
in: "ReferenceError: ref is not defined"
out/Release/node[90219]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x5564d95a9048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x5564d9676869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0xde38a88427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl.js
--- CRASHED (Signal: 6) ---

                                             
[14:40|%  64|+ 1208|- 165]: release test-repl-autolibs 
                                                      
=== release test-repl-autolibs ===
Path: parallel/test-repl-autolibs
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-autolibs.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-autolibs.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '../lib/transport/object-factory'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Module.require (internal/modules/cjs/loader.js:626:17)
    at require (internal/modules/cjs/helpers.js:20:18)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-autolibs.js

                                                      
[14:40|%  64|+ 1208|- 166]: release test-repl-colors 
                                                    
=== release test-repl-colors ===
Path: parallel/test-repl-colors
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-colors.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-colors.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90240]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x560ae863c048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x560ae8709869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x310a7308427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-colors.js
--- CRASHED (Signal: 6) ---

                                                    
[14:41|%  64|+ 1208|- 167]: release test-repl-console 
                                                     
=== release test-repl-console ===
Path: parallel/test-repl-console
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-console.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-console.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90249]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55f8e5894048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55f8e5961869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x271ca110427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-console.js
--- CRASHED (Signal: 6) ---

                                                     
[14:41|%  64|+ 1208|- 168]: release test-repl-context 
                                                     
=== release test-repl-context ===
Path: parallel/test-repl-context
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-context.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-context.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90258]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55f963eaf048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55f963f7c869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x2365bd68427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-context.js
--- CRASHED (Signal: 6) ---

                                                     
[14:42|%  64|+ 1208|- 169]: release test-repl-definecommand 
                                                           
=== release test-repl-definecommand ===
Path: parallel/test-repl-definecommand
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-definecommand.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-definecommand.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90267]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55ea121a5048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55ea12272869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x304258a8427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-definecommand.js
--- CRASHED (Signal: 6) ---

                                                           
[14:42|%  64|+ 1208|- 170]: release test-repl-deprecations 
                                                          
=== release test-repl-deprecations ===
Path: parallel/test-repl-deprecations
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-deprecations.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-deprecations.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90276]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x558000a9b048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x558000b68869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x1a77c4a0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-deprecations.js
--- CRASHED (Signal: 6) ---

                                                          
[14:43|%  64|+ 1208|- 171]: release test-repl-domain 
                                                    
=== release test-repl-domain ===
Path: parallel/test-repl-domain
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-domain.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-domain.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90285]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55da2f958048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55da2fa25869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x38e1e4a0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-domain.js
--- CRASHED (Signal: 6) ---

                                                    
[14:43|%  64|+ 1208|- 172]: release test-repl-editor 
                                                    
=== release test-repl-editor ===
Path: parallel/test-repl-editor
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-editor.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-editor.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90294]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55f928b22048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55f928bef869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x14d0f660427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-editor.js
--- CRASHED (Signal: 6) ---

                                                    
[14:44|%  64|+ 1208|- 173]: release test-repl-empty 
                                                   
=== release test-repl-empty ===
Path: parallel/test-repl-empty
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-empty.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-empty.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90303]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x5610f8946048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x5610f8a13869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x19aeb498427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-empty.js
--- CRASHED (Signal: 6) ---

                                                   
[14:44|%  64|+ 1208|- 174]: release test-repl-end-emits-exit 
                                                            
=== release test-repl-end-emits-exit ===
Path: parallel/test-repl-end-emits-exit
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-end-emits-exit.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-end-emits-exit.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90312]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x556712e14048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x556712ee1869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x32b41aa0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-end-emits-exit.js
--- CRASHED (Signal: 6) ---

                                                            
[14:44|%  64|+ 1208|- 175]: release test-repl-envvars 
                                                     
=== release test-repl-envvars ===
Path: parallel/test-repl-envvars
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-envvars.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-envvars.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '../lib/transport/object-factory'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Module.require (internal/modules/cjs/loader.js:626:17)
    at require (internal/modules/cjs/helpers.js:20:18)
Command: out/Release/node --expose-internals /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-envvars.js

                                                     
[14:45|%  64|+ 1208|- 176]: release test-repl-eval 
                                                  
=== release test-repl-eval ===
Path: parallel/test-repl-eval
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-eval.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-eval.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90333]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55ebda07e048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55ebda14b869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x1a82a668427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-eval.js
--- CRASHED (Signal: 6) ---

                                                  
[14:45|%  64|+ 1208|- 177]: release test-repl-eval-scope 
                                                        
=== release test-repl-eval-scope ===
Path: parallel/test-repl-eval-scope
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-eval-scope.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-eval-scope.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90342]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55bc5288f048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55bc5295c869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x1a52b548427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-eval-scope.js
--- CRASHED (Signal: 6) ---

                                                        
[14:46|%  64|+ 1208|- 178]: release test-repl-function-definition-edge-case 
                                                                           
=== release test-repl-function-definition-edge-case ===
Path: parallel/test-repl-function-definition-edge-case
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-function-definition-edge-case.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-function-definition-edge-case.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90351]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x5572fb4ea048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x5572fb5b7869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x3b441bd8427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-function-definition-edge-case.js
--- CRASHED (Signal: 6) ---

                                                                           
[14:46|%  65|+ 1208|- 179]: release test-repl-harmony 
                                                     
[14:46|%  65|+ 1209|- 179]: release test-repl-history-perm 
                                                          
=== release test-repl-history-perm ===
Path: parallel/test-repl-history-perm
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-history-perm.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-history-perm.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '../lib/transport/object-factory'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Module.require (internal/modules/cjs/loader.js:626:17)
    at require (internal/modules/cjs/helpers.js:20:18)
Command: out/Release/node --expose_internals /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-history-perm.js

                                                          
[14:47|%  65|+ 1209|- 180]: release test-repl-inspector 
                                                       
=== release test-repl-inspector ===
Path: parallel/test-repl-inspector
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-inspector.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-inspector.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90388]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x560f9eecd048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x560f9ef9a869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x72a21c8427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-inspector.js
--- CRASHED (Signal: 6) ---

                                                       
[14:47|%  65|+ 1209|- 181]: release test-repl-let-process 
                                                         
=== release test-repl-let-process ===
Path: parallel/test-repl-let-process
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-let-process.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-let-process.js' ]
> undefined
>
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '../lib/transport/object-factory'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Module.require (internal/modules/cjs/loader.js:626:17)
    at require (internal/modules/cjs/helpers.js:20:18)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-let-process.js

                                                         
[14:48|%  65|+ 1209|- 182]: release test-repl-load-multiline 
                                                            
=== release test-repl-load-multiline ===
Path: parallel/test-repl-load-multiline
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-load-multiline.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-load-multiline.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90405]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55ac2e396048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55ac2e463869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x15a18d68427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-load-multiline.js
--- CRASHED (Signal: 6) ---

                                                            
[14:48|%  65|+ 1209|- 183]: release test-repl-memory-deprecation 
                                                                
=== release test-repl-memory-deprecation ===
Path: parallel/test-repl-memory-deprecation
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-memory-deprecation.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-memory-deprecation.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90414]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55c56f9ca048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55c56fa97869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x3ec73148427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-memory-deprecation.js
--- CRASHED (Signal: 6) ---

                                                                
[14:49|%  65|+ 1209|- 184]: release test-repl-mode 
                                                  
=== release test-repl-mode ===
Path: parallel/test-repl-mode
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-mode.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-mode.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90423]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x560b204b8048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x560b20585869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x22067378427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-mode.js
--- CRASHED (Signal: 6) ---

                                                  
[14:49|%  65|+ 1209|- 185]: release test-repl-multiline 
                                                       
=== release test-repl-multiline ===
Path: parallel/test-repl-multiline
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-multiline.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-multiline.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90432]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55920fe3c048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55920ff09869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x26669628427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-multiline.js
--- CRASHED (Signal: 6) ---

                                                       
[14:50|%  65|+ 1209|- 186]: release test-repl-null 
                                                  
=== release test-repl-null ===
Path: parallel/test-repl-null
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-null.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-null.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90441]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55e679553048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55e679620869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x1768ce28427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-null.js
--- CRASHED (Signal: 6) ---

                                                  
[14:50|%  65|+ 1209|- 187]: release test-repl-null-thrown 
                                                         
=== release test-repl-null-thrown ===
Path: parallel/test-repl-null-thrown
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-null-thrown.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-null-thrown.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90450]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x56351ad39048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x56351ae06869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x16baab78427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-null-thrown.js
--- CRASHED (Signal: 6) ---

                                                         
[14:51|%  65|+ 1209|- 188]: release test-repl-options 
                                                     
=== release test-repl-options ===
Path: parallel/test-repl-options
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-options.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-options.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90459]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55adaa172048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55adaa23f869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x4e7c1c8427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-options.js
--- CRASHED (Signal: 6) ---

                                                     
[14:51|%  65|+ 1209|- 189]: release test-repl-persistent-history 
                                                                
[14:51|%  65|+ 1210|- 189]: release test-repl-preprocess-top-level-await 
                                                                        
[14:52|%  65|+ 1211|- 189]: release test-repl-pretty-custom-stack 
                                                                 
=== release test-repl-pretty-custom-stack ===
Path: parallel/test-repl-pretty-custom-stack
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-pretty-custom-stack.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-pretty-custom-stack.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90490]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55741adf2048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55741aebf869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x64656d0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-pretty-custom-stack.js
--- CRASHED (Signal: 6) ---

                                                                 
[14:52|%  65|+ 1211|- 190]: release test-repl-pretty-stack 
                                                          
=== release test-repl-pretty-stack ===
Path: parallel/test-repl-pretty-stack
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-pretty-stack.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-pretty-stack.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90499]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x5587d68cf048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x5587d699c869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x2ac38750427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-pretty-stack.js
--- CRASHED (Signal: 6) ---

                                                          
[14:53|%  65|+ 1211|- 191]: release test-repl-recoverable 
                                                         
=== release test-repl-recoverable ===
Path: parallel/test-repl-recoverable
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-recoverable.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-recoverable.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90508]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55de7b372048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55de7b43f869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x22665600427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-recoverable.js
--- CRASHED (Signal: 6) ---

                                                         
[14:53|%  65|+ 1211|- 192]: release test-repl-require 
                                                     
=== release test-repl-require ===
Path: parallel/test-repl-require
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-require.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-require.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90517]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55b0dd1ef048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55b0dd2bc869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x2edc78e0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-require.js
--- CRASHED (Signal: 6) ---

                                                     
[14:54|%  65|+ 1211|- 193]: release test-repl-require-cache 
                                                           
=== release test-repl-require-cache ===
Path: parallel/test-repl-require-cache
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-require-cache.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-require-cache.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90526]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x564abcffc048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x564abd0c9869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x2ac41ff8427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-require-cache.js
--- CRASHED (Signal: 6) ---

                                                           
[14:54|%  65|+ 1211|- 194]: release test-repl-require-context 
                                                             
[14:55|%  65|+ 1212|- 194]: release test-repl-reset-event 
                                                         
=== release test-repl-reset-event ===
Path: parallel/test-repl-reset-event
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-reset-event.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-reset-event.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90552]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55bcee1b1048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55bcee27e869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x1eb74260427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-reset-event.js
--- CRASHED (Signal: 6) ---

                                                         
[14:55|%  65|+ 1212|- 195]: release test-repl-save-load 
                                                       
=== release test-repl-save-load ===
Path: parallel/test-repl-save-load
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-save-load.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-save-load.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90561]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x5594a113a048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x5594a1207869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x28804c98427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-save-load.js
--- CRASHED (Signal: 6) ---

                                                       
[14:55|%  66|+ 1212|- 196]: release test-repl-setprompt 
                                                       
[14:56|%  66|+ 1213|- 196]: release test-repl-sigint 
                                                    
[14:56|%  66|+ 1214|- 196]: release test-repl-sigint-nested-eval 
                                                                
[14:57|%  66|+ 1215|- 196]: release test-repl-syntax-error-handling 
                                                                   
[14:57|%  66|+ 1216|- 196]: release test-repl-syntax-error-stack 
                                                                
=== release test-repl-syntax-error-stack ===
Path: parallel/test-repl-syntax-error-stack
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-syntax-error-stack.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-syntax-error-stack.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90630]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55a4ab57d048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55a4ab64a869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x244d8da0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-syntax-error-stack.js
--- CRASHED (Signal: 6) ---

                                                                
[14:57|%  66|+ 1216|- 197]: release test-repl-tab 
                                                 
=== release test-repl-tab ===
Path: parallel/test-repl-tab
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-tab.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-tab.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90639]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55e5951dc048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55e5952a9869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x1fe88ef8427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-tab.js
--- CRASHED (Signal: 6) ---

                                                 
[14:58|%  66|+ 1216|- 198]: release test-repl-tab-complete 
                                                          
=== release test-repl-tab-complete ===
Path: parallel/test-repl-tab-complete
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-tab-complete.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-tab-complete.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90648]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x561d4f4d8048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x561d4f5a5869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x27df3860427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-tab-complete.js
--- CRASHED (Signal: 6) ---

                                                          
[14:58|%  66|+ 1216|- 199]: release test-repl-tab-complete-crash 
                                                                
=== release test-repl-tab-complete-crash ===
Path: parallel/test-repl-tab-complete-crash
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-tab-complete-crash.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-tab-complete-crash.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90657]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x561dd3f01048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x561dd3fce869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x3fe1fee8427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-tab-complete-crash.js
--- CRASHED (Signal: 6) ---

                                                                
[14:59|%  66|+ 1216|- 200]: release test-repl-tab-complete-no-warn 
                                                                  
=== release test-repl-tab-complete-no-warn ===
Path: parallel/test-repl-tab-complete-no-warn
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-tab-complete-no-warn.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-tab-complete-no-warn.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90666]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55df6e4ea048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55df6e5b7869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0xcf3d4c8427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-tab-complete-no-warn.js
--- CRASHED (Signal: 6) ---

                                                                  
[14:59|%  66|+ 1216|- 201]: release test-repl-throw-null-or-undefined 
                                                                     
=== release test-repl-throw-null-or-undefined ===
Path: parallel/test-repl-throw-null-or-undefined
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-throw-null-or-undefined.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-throw-null-or-undefined.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90675]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x556de58e3048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x556de59b0869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x2d427e88427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-throw-null-or-undefined.js
--- CRASHED (Signal: 6) ---

                                                                     
[14:59|%  66|+ 1216|- 202]: release test-repl-top-level-await 
                                                             
=== release test-repl-top-level-await ===
Path: parallel/test-repl-top-level-await
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-top-level-await.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-top-level-await.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90684]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x558be7f3c048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x558be8009869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0xdd8f460427d
Command: out/Release/node --expose-internals --experimental-repl-await /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-top-level-await.js
--- CRASHED (Signal: 6) ---

                                                             
[15:00|%  66|+ 1216|- 203]: release test-repl-turn-off-editor-mode 
                                                                  
=== release test-repl-turn-off-editor-mode ===
Path: parallel/test-repl-turn-off-editor-mode
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-turn-off-editor-mode.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-turn-off-editor-mode.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90693]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55e2f292a048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55e2f29f7869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x212a1d30427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-turn-off-editor-mode.js
--- CRASHED (Signal: 6) ---

                                                                  
[15:00|%  66|+ 1216|- 204]: release test-repl-underscore 
                                                        
=== release test-repl-underscore ===
Path: parallel/test-repl-underscore
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-underscore.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-underscore.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90702]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55aace442048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55aace50f869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x22e11fa0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-underscore.js
--- CRASHED (Signal: 6) ---

                                                        
[15:01|%  66|+ 1216|- 205]: release test-repl-unexpected-token-recoverable 
                                                                          
[15:01|%  66|+ 1217|- 205]: release test-repl-use-global 
                                                        
=== release test-repl-use-global ===
Path: parallel/test-repl-use-global
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-repl-use-global.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-repl-use-global.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90727]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x5626d6f97048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x5626d7064869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x10e8dcd0427d
Command: out/Release/node --expose-internals /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-repl-use-global.js
--- CRASHED (Signal: 6) ---

                                                        
[15:01|%  66|+ 1217|- 206]: release test-require-cache 
                                                      
[15:02|%  66|+ 1218|- 206]: release test-require-deps-deprecation 
                                                                 
[15:02|%  66|+ 1219|- 206]: release test-require-dot 
                                                    
[15:02|%  66|+ 1220|- 206]: release test-require-exceptions 
                                                           
[15:03|%  66|+ 1221|- 206]: release test-require-extension-over-directory 
                                                                         
[15:03|%  66|+ 1222|- 206]: release test-require-extensions-main 
                                                                
[15:03|%  66|+ 1223|- 206]: release test-require-extensions-same-filename-a... 
                                                                              
[15:04|%  67|+ 1224|- 206]: release test-require-extensions-same-filename-a... 
                                                                              
[15:04|%  67|+ 1225|- 206]: release test-require-invalid-package 
                                                                
[15:04|%  67|+ 1226|- 206]: release test-require-json 
                                                     
[15:04|%  67|+ 1227|- 206]: release test-require-long-path 
                                                          
=== release test-require-long-path ===
Path: parallel/test-require-long-path
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-require-long-path.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-require-long-path.js' ]
1..0 # Skipped: this test is Windows-specific.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90816]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55fe590b0048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55fe590b11d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55fe5932fbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x17d4f878427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-require-long-path.js
--- CRASHED (Signal: 6) ---

                                                          
[15:05|%  67|+ 1227|- 207]: release test-require-nul 
                                                    
[15:05|%  67|+ 1228|- 207]: release test-require-process 
                                                        
[15:05|%  67|+ 1229|- 207]: release test-require-resolve 
                                                        
[15:06|%  67|+ 1230|- 207]: release test-require-symlink 
                                                        
=== release test-require-symlink ===
Path: parallel/test-require-symlink
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-require-symlink.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-require-symlink.js' ]
1..0 # Skipped: insufficient privileges
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90849]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x562021aa4048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x562021aa51d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x562021d23bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x1a139d28427d
Command: out/Release/node --preserve-symlinks /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-require-symlink.js
--- CRASHED (Signal: 6) ---

                                                        
[15:06|%  67|+ 1230|- 208]: release test-require-unicode 
                                                        
[15:06|%  67|+ 1231|- 208]: release test-setproctitle 
                                                     
[15:07|%  67|+ 1232|- 208]: release test-sigint-infinite-loop 
                                                             
[15:07|%  67|+ 1233|- 208]: release test-signal-args 
                                                    
[15:07|%  67|+ 1234|- 208]: release test-signal-handler 
                                                       
=== release test-signal-handler ===
Path: parallel/test-signal-handler
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-signal-handler.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-signal-handler.js' ]
process.pid: 90900
------zone(testZone):worker(0) is terminating------
running process...1
running process...2
running process...3
running process...4
running process...5
running process...6
running process...7
running process...8
running process...9
End.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90900]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x558ed49d9048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x558ed49da1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x558ed4c58bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x246df5d0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-signal-handler.js
--- CRASHED (Signal: 6) ---

                                                       
[15:08|%  67|+ 1234|- 209]: release test-signal-safety 
                                                      
[15:08|%  67|+ 1235|- 209]: release test-signal-unregister 
                                                          
=== release test-signal-unregister ===
Path: parallel/test-signal-unregister
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-signal-unregister.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-signal-unregister.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
events.js:167
      throw er; // Unhandled 'error' event
      ^

Error: spawn /home/zhanglei/src/node/test/parallel/test-signal-unregister.js EACCES
    at Process.ChildProcess._handle.onexit (internal/child_process.js:217:19)
    at onErrorNT (internal/child_process.js:394:16)
    at process._tickCallback (internal/process/next_tick.js:174:19)
Emitted 'error' event at:
    at Process.ChildProcess._handle.onexit (internal/child_process.js:223:12)
    at onErrorNT (internal/child_process.js:394:16)
    at process._tickCallback (internal/process/next_tick.js:174:19)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-signal-unregister.js

                                                          
[15:08|%  67|+ 1235|- 210]: release test-socket-address 
                                                       
[15:09|%  67|+ 1236|- 210]: release test-socket-write-after-fin 
                                                               
[15:09|%  67|+ 1237|- 210]: release test-socket-write-after-fin-error 
                                                                     
[15:09|%  67|+ 1238|- 210]: release test-spawn-cmd-named-pipe 
                                                             
=== release test-spawn-cmd-named-pipe ===
Path: parallel/test-spawn-cmd-named-pipe
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-spawn-cmd-named-pipe.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-spawn-cmd-named-pipe.js' ]
1..0 # Skipped: this test is Windows-specific.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[90958]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x556e58634048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x556e586351d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x556e588b3bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0xb1e3cb8427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-spawn-cmd-named-pipe.js
--- CRASHED (Signal: 6) ---

                                                             
[15:10|%  67|+ 1238|- 211]: release test-stdin-child-proc 
                                                         
[15:10|%  67|+ 1239|- 211]: release test-stdin-from-file 
                                                        
=== release test-stdin-from-file ===
Path: parallel/test-stdin-from-file
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-stdin-from-file.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-stdin-from-file.js' ]
"/home/zhanglei/src/node/test/parallel/test-stdin-from-file.js" "/home/zhanglei/src/node/test/fixtures/echo-close-check.js" < "/home/zhanglei/src/node/test/.tmp.0/stdin.txt"


------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:607
    throw newErr;
    ^

AssertionError [ERR_ASSERTION]: ifError got unwanted exception: Command failed: "/home/zhanglei/src/node/test/parallel/test-stdin-from-file.js" "/home/zhanglei/src/node/test/fixtures/echo-close-check.js" < "/home/zhanglei/src/node/test/.tmp.0/stdin.txt"
/bin/sh: 1: /home/zhanglei/src/node/test/parallel/test-stdin-from-file.js: Permission denied

    at ChildProcess.exithandler (child_process.js:282:12)
    at ChildProcess.emit (events.js:182:13)
    at maybeClose (internal/child_process.js:947:16)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:236:5)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-stdin-from-file.js

                                                        
[15:10|%  68|+ 1239|- 212]: release test-stdin-hang 
                                                   
[15:11|%  68|+ 1240|- 212]: release test-stdin-pause-resume 
                                                           
[15:11|%  68|+ 1241|- 212]: release test-stdin-pause-resume-sync 
                                                                
[15:11|%  68|+ 1242|- 212]: release test-stdin-pipe-large 
                                                         
[15:12|%  68|+ 1243|- 212]: release test-stdin-pipe-resume 
                                                          
[15:12|%  68|+ 1244|- 212]: release test-stdin-resume-pause 
                                                           
[15:12|%  68|+ 1245|- 212]: release test-stdin-script-child 
                                                           
[15:13|%  68|+ 1246|- 212]: release test-stdin-script-child-option 
                                                                  
[15:13|%  68|+ 1247|- 212]: release test-stdio-closed 
                                                     
[15:13|%  68|+ 1248|- 212]: release test-stdio-pipe-access 
                                                          
[15:14|%  68|+ 1249|- 212]: release test-stdio-pipe-redirect 
                                                            
=== release test-stdio-pipe-redirect ===
Path: parallel/test-stdio-pipe-redirect
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-stdio-pipe-redirect.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-stdio-pipe-redirect.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
out/Release/node[91139]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x557f2d5f9048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x557f2d5fa1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x557f2d878bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x3a92cd28427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-stdio-pipe-redirect.js
--- CRASHED (Signal: 6) ---

                                                            
[15:15|%  68|+ 1249|- 213]: release test-stdio-readable-writable 
                                                                
[15:15|%  68|+ 1250|- 213]: release test-stdout-cannot-be-closed-child-proc... 
                                                                              
[15:15|%  68|+ 1251|- 213]: release test-stdout-close-catch 
                                                           
[15:16|%  68|+ 1252|- 213]: release test-stdout-close-unref 
                                                           
[15:16|%  68|+ 1253|- 213]: release test-stdout-stderr-reading 
                                                              
[15:17|%  68|+ 1254|- 213]: release test-stdout-to-file 
                                                       
=== release test-stdout-to-file ===
Path: parallel/test-stdout-to-file
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-stdout-to-file.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-stdout-to-file.js' ]
1048576 chars to /home/zhanglei/src/node/test/.tmp.0/stdout.txt...
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:607
    throw newErr;
    ^

AssertionError [ERR_ASSERTION]: ifError got unwanted exception: Command failed: "/home/zhanglei/src/node/test/parallel/test-stdout-to-file.js" "/home/zhanglei/src/node/test/fixtures/print-chars.js" 1048576 > "/home/zhanglei/src/node/test/.tmp.0/stdout.txt"
/bin/sh: 1: /home/zhanglei/src/node/test/parallel/test-stdout-to-file.js: Permission denied

    at ChildProcess.exithandler (child_process.js:282:12)
    at ChildProcess.emit (events.js:182:13)
    at maybeClose (internal/child_process.js:947:16)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:236:5)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-stdout-to-file.js

                                                       
[15:17|%  68|+ 1254|- 214]: release test-stream-backpressure 
                                                            
[15:17|%  68|+ 1255|- 214]: release test-stream-base-prototype-accessors-en... 
                                                                              
[15:18|%  68|+ 1256|- 214]: release test-stream-base-typechecking 
                                                                 
[15:18|%  68|+ 1257|- 214]: release test-stream-big-packet 
                                                          
[15:18|%  69|+ 1258|- 214]: release test-stream-big-push 
                                                        
[15:19|%  69|+ 1259|- 214]: release test-stream-buffer-list 
                                                           
[15:19|%  69|+ 1260|- 214]: release test-stream-decoder-objectmode 
                                                                  
[15:19|%  69|+ 1261|- 214]: release test-stream-destroy-event-order 
                                                                   
[15:19|%  69|+ 1262|- 214]: release test-stream-duplex 
                                                      
[15:20|%  69|+ 1263|- 214]: release test-stream-duplex-destroy 
                                                              
[15:20|%  69|+ 1264|- 214]: release test-stream-duplex-error-write 
                                                                  
[15:20|%  69|+ 1265|- 214]: release test-stream-end-paused 
                                                          
[15:21|%  69|+ 1266|- 214]: release test-stream-events-prepend 
                                                              
[15:21|%  69|+ 1267|- 214]: release test-stream-finished 
                                                        
[15:21|%  69|+ 1268|- 214]: release test-stream-inheritance 
                                                           
[15:21|%  69|+ 1269|- 214]: release test-stream-ispaused 
                                                        
[15:22|%  69|+ 1270|- 214]: release test-stream-objectmode-undefined 
                                                                    
[15:22|%  69|+ 1271|- 214]: release test-stream-pipe-after-end 
                                                              
[15:22|%  69|+ 1272|- 214]: release test-stream-pipe-await-drain 
                                                                
[15:23|%  69|+ 1273|- 214]: release test-stream-pipe-await-drain-manual-res... 
                                                                              
[15:23|%  69|+ 1274|- 214]: release test-stream-pipe-await-drain-push-while... 
                                                                              
[15:23|%  69|+ 1275|- 214]: release test-stream-pipe-cleanup 
                                                            
[15:24|%  69|+ 1276|- 214]: release test-stream-pipe-cleanup-pause 
                                                                  
[15:24|%  69|+ 1277|- 214]: release test-stream-pipe-error-handling 
                                                                   
[15:24|%  69|+ 1278|- 214]: release test-stream-pipe-event 
                                                          
[15:25|%  69|+ 1279|- 214]: release test-stream-pipe-flow 
                                                         
[15:25|%  70|+ 1280|- 214]: release test-stream-pipe-flow-after-unpipe 
                                                                      
[15:25|%  70|+ 1281|- 214]: release test-stream-pipe-manual-resume 
                                                                  
[15:25|%  70|+ 1282|- 214]: release test-stream-pipe-multiple-pipes 
                                                                   
[15:26|%  70|+ 1283|- 214]: release test-stream-pipe-same-destination-twice 
                                                                           
[15:26|%  70|+ 1284|- 214]: release test-stream-pipe-unpipe-streams 
                                                                   
[15:26|%  70|+ 1285|- 214]: release test-stream-pipe-without-listenerCount 
                                                                          
[15:27|%  70|+ 1286|- 214]: release test-stream-pipeline 
                                                        
[15:27|%  70|+ 1287|- 214]: release test-stream-preprocess 
                                                          
[15:28|%  70|+ 1288|- 214]: release test-stream-push-order 
                                                          
[15:28|%  70|+ 1289|- 214]: release test-stream-push-strings 
                                                            
[15:28|%  70|+ 1290|- 214]: release test-stream-readable-async-iterators 
                                                                        
[15:28|%  70|+ 1291|- 214]: release test-stream-readable-constructor-set-me... 
                                                                              
[15:29|%  70|+ 1292|- 214]: release test-stream-readable-destroy 
                                                                
[15:29|%  70|+ 1293|- 214]: release test-stream-readable-emittedReadable 
                                                                        
[15:29|%  70|+ 1294|- 214]: release test-stream-readable-event 
                                                              
[15:30|%  70|+ 1295|- 214]: release test-stream-readable-flow-recursion 
                                                                       
[15:30|%  70|+ 1296|- 214]: release test-stream-readable-invalid-chunk 
                                                                      
[15:30|%  70|+ 1297|- 214]: release test-stream-readable-needReadable 
                                                                     
[15:30|%  70|+ 1298|- 214]: release test-stream-readable-no-unneeded-readab... 
                                                                              
[15:31|%  70|+ 1299|- 214]: release test-stream-readable-object-multi-push-... 
                                                                              
[15:31|%  70|+ 1300|- 214]: release test-stream-readable-pause-and-resume 
                                                                         
[15:31|%  71|+ 1301|- 214]: release test-stream-readable-reading-readingMor... 
                                                                              
[15:32|%  71|+ 1302|- 214]: release test-stream-readable-resumeScheduled 
                                                                        
[15:32|%  71|+ 1303|- 214]: release test-stream-readable-with-unimplemented... 
                                                                              
[15:32|%  71|+ 1304|- 214]: release test-stream-readableListening-state 
                                                                       
[15:33|%  71|+ 1305|- 214]: release test-stream-transform-callback-twice 
                                                                        
[15:33|%  71|+ 1306|- 214]: release test-stream-transform-constructor-set-m... 
                                                                              
[15:33|%  71|+ 1307|- 214]: release test-stream-transform-destroy 
                                                                 
[15:33|%  71|+ 1308|- 214]: release test-stream-transform-final 
                                                               
[15:34|%  71|+ 1309|- 214]: release test-stream-transform-final-sync 
                                                                    
[15:34|%  71|+ 1310|- 214]: release test-stream-transform-flush-data 
                                                                    
[15:34|%  71|+ 1311|- 214]: release test-stream-transform-objectmode-falsey... 
                                                                              
[15:35|%  71|+ 1312|- 214]: release test-stream-transform-split-highwaterma... 
                                                                              
[15:35|%  71|+ 1313|- 214]: release test-stream-transform-split-objectmode 
                                                                          
[15:35|%  71|+ 1314|- 214]: release test-stream-uint8array 
                                                          
[15:35|%  71|+ 1315|- 214]: release test-stream-unpipe-event 
                                                            
[15:36|%  71|+ 1316|- 214]: release test-stream-unshift-empty-chunk 
                                                                   
[15:36|%  71|+ 1317|- 214]: release test-stream-unshift-read-race 
                                                                 
[15:36|%  71|+ 1318|- 214]: release test-stream-wrap 
                                                    
[15:37|%  71|+ 1319|- 214]: release test-stream-wrap-encoding 
                                                             
[15:37|%  71|+ 1320|- 214]: release test-stream-writable-change-default-enc... 
                                                                              
[15:37|%  71|+ 1321|- 214]: release test-stream-writable-constructor-set-me... 
                                                                              
[15:37|%  72|+ 1322|- 214]: release test-stream-writable-decoded-encoding 
                                                                         
[15:38|%  72|+ 1323|- 214]: release test-stream-writable-destroy 
                                                                
[15:38|%  72|+ 1324|- 214]: release test-stream-writable-ended-state 
                                                                    
[15:38|%  72|+ 1325|- 214]: release test-stream-writable-finished-state 
                                                                       
[15:39|%  72|+ 1326|- 214]: release test-stream-writable-needdrain-state 
                                                                        
[15:39|%  72|+ 1327|- 214]: release test-stream-writable-null 
                                                             
[15:39|%  72|+ 1328|- 214]: release test-stream-writable-write-cb-twice 
                                                                       
[15:40|%  72|+ 1329|- 214]: release test-stream-writable-write-writev-finis... 
                                                                              
[15:40|%  72|+ 1330|- 214]: release test-stream-writableState-ending 
                                                                    
[15:40|%  72|+ 1331|- 214]: release test-stream-writableState-uncorked-buff... 
                                                                              
[15:40|%  72|+ 1332|- 214]: release test-stream-write-final 
                                                           
[15:41|%  72|+ 1333|- 214]: release test-stream-writev 
                                                      
[15:41|%  72|+ 1334|- 214]: release test-stream2-base64-single-char-read-en... 
                                                                              
[15:41|%  72|+ 1335|- 214]: release test-stream2-basic 
                                                      
[15:42|%  72|+ 1336|- 214]: release test-stream2-compatibility 
                                                              
[15:42|%  72|+ 1337|- 214]: release test-stream2-decode-partial 
                                                               
[15:43|%  72|+ 1338|- 214]: release test-stream2-finish-pipe 
                                                            
[15:43|%  72|+ 1339|- 214]: release test-stream2-httpclient-response-end 
                                                                        
[15:43|%  72|+ 1340|- 214]: release test-stream2-large-read-stall 
                                                                 
[15:44|%  72|+ 1341|- 214]: release test-stream2-objects 
                                                        
[15:44|%  72|+ 1342|- 214]: release test-stream2-pipe-error-handling 
                                                                    
[15:44|%  72|+ 1343|- 214]: release test-stream2-pipe-error-once-listener 
                                                                         
[15:45|%  73|+ 1344|- 214]: release test-stream2-push 
                                                     
[15:45|%  73|+ 1345|- 214]: release test-stream2-read-sync-stack 
                                                                
[15:45|%  73|+ 1346|- 214]: release test-stream2-readable-empty-buffer-no-e... 
                                                                              
[15:46|%  73|+ 1347|- 214]: release test-stream2-readable-from-list 
                                                                   
[15:46|%  73|+ 1348|- 214]: release test-stream2-readable-legacy-drain 
                                                                      
[15:46|%  73|+ 1349|- 214]: release test-stream2-readable-non-empty-end 
                                                                       
[15:46|%  73|+ 1350|- 214]: release test-stream2-readable-wrap 
                                                              
[15:47|%  73|+ 1351|- 214]: release test-stream2-readable-wrap-empty 
                                                                    
[15:47|%  73|+ 1352|- 214]: release test-stream2-set-encoding 
                                                             
[15:47|%  73|+ 1353|- 214]: release test-stream2-transform 
                                                          
[15:48|%  73|+ 1354|- 214]: release test-stream2-unpipe-drain 
                                                             
[15:48|%  73|+ 1355|- 214]: release test-stream2-unpipe-leak 
                                                            
[15:49|%  73|+ 1356|- 214]: release test-stream2-writable 
                                                         
[15:50|%  73|+ 1357|- 214]: release test-stream3-cork-end 
                                                         
[15:50|%  73|+ 1358|- 214]: release test-stream3-cork-uncork 
                                                            
[15:50|%  73|+ 1359|- 214]: release test-stream3-pause-then-read 
                                                                
[15:50|%  73|+ 1360|- 214]: release test-streams-highwatermark 
                                                              
[15:51|%  73|+ 1361|- 214]: release test-string-decoder 
                                                       
[15:51|%  73|+ 1362|- 214]: release test-string-decoder-end 
                                                           
[15:51|%  73|+ 1363|- 214]: release test-stringbytes-external 
                                                             
[15:52|%  73|+ 1364|- 214]: release test-sync-fileread 
                                                      
[15:52|%  74|+ 1365|- 214]: release test-sync-io-option 
                                                       
[15:53|%  74|+ 1366|- 214]: release test-sys 
                                            
[15:53|%  74|+ 1367|- 214]: release test-tcp-wrap 
                                                 
[15:53|%  74|+ 1368|- 214]: release test-tcp-wrap-connect 
                                                         
[15:54|%  74|+ 1369|- 214]: release test-tcp-wrap-listen 
                                                        
[15:54|%  74|+ 1370|- 214]: release test-tick-processor-version-check 
                                                                     
[15:54|%  74|+ 1371|- 214]: release test-timer-close 
                                                    
[15:54|%  74|+ 1372|- 214]: release test-timer-immediate 
                                                        
[15:55|%  74|+ 1373|- 214]: release test-timers 
                                               
[15:55|%  74|+ 1374|- 214]: release test-timers-active 
                                                      
[15:55|%  74|+ 1375|- 214]: release test-timers-api-refs 
                                                        
=== release test-timers-api-refs ===
Path: parallel/test-timers-api-refs
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-timers-api-refs.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-timers-api-refs.js' ]
------zone(testZone):worker(0) keep alive interval at 2018-05-14T22:24:07.648Z
------zone(testZone):worker(0) keep alive interval at 2018-05-14T22:24:37.671Z
------zone(testZone):worker(0) keep alive interval at 2018-05-14T22:25:07.672Z
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-timers-api-refs.js
--- TIMEOUT ---

                                                        
[17:55|%  74|+ 1375|- 215]: release test-timers-args 
                                                    
[17:56|%  74|+ 1376|- 215]: release test-timers-clear-null-does-not-throw-e... 
                                                                              
[17:56|%  74|+ 1377|- 215]: release test-timers-clear-timeout-interval-equi... 
                                                                              
[17:56|%  74|+ 1378|- 215]: release test-timers-clearImmediate 
                                                              
[17:57|%  74|+ 1379|- 215]: release test-timers-enroll-invalid-msecs 
                                                                    
[17:57|%  74|+ 1380|- 215]: release test-timers-enroll-second-time 
                                                                  
[17:57|%  74|+ 1381|- 215]: release test-timers-immediate 
                                                         
[17:58|%  74|+ 1382|- 215]: release test-timers-immediate-queue 
                                                               
[17:58|%  74|+ 1383|- 215]: release test-timers-immediate-queue-throw 
                                                                     
[17:58|%  74|+ 1384|- 215]: release test-timers-immediate-unref 
                                                               
[17:58|%  75|+ 1385|- 215]: release test-timers-immediate-unref-simple 
                                                                      
=== release test-timers-immediate-unref-simple ===
Path: parallel/test-timers-immediate-unref-simple
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-timers-immediate-unref-simple.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-timers-immediate-unref-simple.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: function should not have been called at /home/zhanglei/src/node/test/parallel/test-timers-immediate-unref-simple.js:7
    at Immediate.mustNotCall (/home/zhanglei/src/node/test/common/index.js:539:12)
    at runCallback (timers.js:696:18)
    at tryOnImmediate (timers.js:667:5)
    at processImmediate (timers.js:649:5)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-timers-immediate-unref-simple.js

                                                                      
[17:59|%  75|+ 1385|- 216]: release test-timers-linked-list 
                                                           
[17:59|%  75|+ 1386|- 216]: release test-timers-max-duration-warning 
                                                                    
[17:59|%  75|+ 1387|- 216]: release test-timers-nested 
                                                      
[18:00|%  75|+ 1388|- 216]: release test-timers-non-integer-delay 
                                                                 
=== release test-timers-non-integer-delay ===
Path: parallel/test-timers-non-integer-delay
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-timers-non-integer-delay.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-timers-non-integer-delay.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[92396]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x5621159bd048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x5621159be1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x562115c3cbca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x260fae88427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-timers-non-integer-delay.js
--- CRASHED (Signal: 6) ---

                                                                 
[18:00|%  75|+ 1388|- 217]: release test-timers-now 
                                                   
[18:01|%  75|+ 1389|- 217]: release test-timers-ordering 
                                                        
[18:01|%  75|+ 1390|- 217]: release test-timers-promisified 
                                                           
[18:01|%  75|+ 1391|- 217]: release test-timers-refresh 
                                                       
[18:02|%  75|+ 1392|- 217]: release test-timers-reset-process-domain-on-thr... 
                                                                              
[18:02|%  75|+ 1393|- 217]: release test-timers-same-timeout-wrong-list-del... 
                                                                              
[18:02|%  75|+ 1394|- 217]: release test-timers-setimmediate-infinite-loop 
                                                                          
[18:03|%  75|+ 1395|- 217]: release test-timers-socket-timeout-removes-othe... 
                                                                              
[18:03|%  75|+ 1396|- 217]: release test-timers-this 
                                                    
[18:03|%  75|+ 1397|- 217]: release test-timers-throw-when-cb-not-function 
                                                                          
[18:04|%  75|+ 1398|- 217]: release test-timers-timeout-to-interval 
                                                                   
[18:04|%  75|+ 1399|- 217]: release test-timers-uncaught-exception 
                                                                  
[18:05|%  75|+ 1400|- 217]: release test-timers-unenroll-unref-interval 
                                                                       
[18:05|%  75|+ 1401|- 217]: release test-timers-unref 
                                                     
[18:05|%  75|+ 1402|- 217]: release test-timers-unref-active 
                                                            
[18:07|%  75|+ 1403|- 217]: release test-timers-unref-call 
                                                          
[18:07|%  75|+ 1404|- 217]: release test-timers-unref-leak 
                                                          
[18:08|%  76|+ 1405|- 217]: release test-timers-unref-remove-other-unref-ti... 
                                                                              
[18:08|%  76|+ 1406|- 217]: release test-timers-unref-remove-other-unref-ti... 
                                                                              
[18:08|%  76|+ 1407|- 217]: release test-timers-unref-reuse-no-exposed-list 
                                                                           
[18:08|%  76|+ 1408|- 217]: release test-timers-unref-throw-then-ref 
                                                                    
[18:09|%  76|+ 1409|- 217]: release test-timers-unrefd-interval-still-fires 
                                                                           
[18:09|%  76|+ 1410|- 217]: release test-timers-unrefed-in-beforeexit 
                                                                     
[18:09|%  76|+ 1411|- 217]: release test-timers-unrefed-in-callback 
                                                                   
[18:10|%  76|+ 1412|- 217]: release test-timers-user-call 
                                                         
[18:10|%  76|+ 1413|- 217]: release test-timers-zero-timeout 
                                                            
[18:10|%  76|+ 1414|- 217]: release test-tls-0-dns-altname 
                                                          
[18:11|%  76|+ 1415|- 217]: release test-tls-addca 
                                                  
[18:11|%  76|+ 1416|- 217]: release test-tls-alert 
                                                  
[18:11|%  76|+ 1417|- 217]: release test-tls-alert-handling 
                                                           
[18:12|%  76|+ 1418|- 217]: release test-tls-alpn-server-client 
                                                               
[18:12|%  76|+ 1419|- 217]: release test-tls-async-cb-after-socket-end 
                                                                      
[18:12|%  76|+ 1420|- 217]: release test-tls-basic-validations 
                                                              
[18:13|%  76|+ 1421|- 217]: release test-tls-buffersize 
                                                       
[18:13|%  76|+ 1422|- 217]: release test-tls-ca-concat 
                                                      
[18:13|%  76|+ 1423|- 217]: release test-tls-canonical-ip 
                                                         
[18:14|%  76|+ 1424|- 217]: release test-tls-cert-chains-concat 
                                                               
[18:14|%  76|+ 1425|- 217]: release test-tls-cert-chains-in-ca 
                                                              
[18:14|%  77|+ 1426|- 217]: release test-tls-cert-regression 
                                                            
[18:15|%  77|+ 1427|- 217]: release test-tls-check-server-identity 
                                                                  
[18:15|%  77|+ 1428|- 217]: release test-tls-cipher-list 
                                                        
[18:15|%  77|+ 1429|- 217]: release test-tls-client-abort 
                                                         
[18:16|%  77|+ 1430|- 217]: release test-tls-client-abort2 
                                                          
[18:16|%  77|+ 1431|- 217]: release test-tls-client-default-ciphers 
                                                                   
[18:16|%  77|+ 1432|- 217]: release test-tls-client-destroy-soon 
                                                                
[18:16|%  77|+ 1433|- 217]: release test-tls-client-getephemeralkeyinfo 
                                                                       
[18:17|%  77|+ 1434|- 217]: release test-tls-client-mindhsize 
                                                             
[18:17|%  77|+ 1435|- 217]: release test-tls-client-reject 
                                                          
[18:17|%  77|+ 1436|- 217]: release test-tls-client-resume 
                                                          
[18:18|%  77|+ 1437|- 217]: release test-tls-client-verify 
                                                          
[18:18|%  77|+ 1438|- 217]: release test-tls-clientcertengine-invalid-arg-t... 
                                                                              
[18:18|%  77|+ 1439|- 217]: release test-tls-clientcertengine-unsupported 
                                                                         
[18:19|%  77|+ 1440|- 217]: release test-tls-close-error 
                                                        
[18:19|%  77|+ 1441|- 217]: release test-tls-close-notify 
                                                         
[18:19|%  77|+ 1442|- 217]: release test-tls-cnnic-whitelist 
                                                            
[18:20|%  77|+ 1443|- 217]: release test-tls-connect-address-family 
                                                                   
[18:20|%  77|+ 1444|- 217]: release test-tls-connect-given-socket 
                                                                 
[18:20|%  77|+ 1445|- 217]: release test-tls-connect-no-host 
                                                            
[18:20|%  77|+ 1446|- 217]: release test-tls-connect-pipe 
                                                         
[18:21|%  78|+ 1447|- 217]: release test-tls-connect-secure-context 
                                                                   
[18:21|%  78|+ 1448|- 217]: release test-tls-connect-simple 
                                                           
[18:21|%  78|+ 1449|- 217]: release test-tls-connect-stream-writes 
                                                                  
[18:22|%  78|+ 1450|- 217]: release test-tls-delayed-attach 
                                                           
[18:22|%  78|+ 1451|- 217]: release test-tls-delayed-attach-error 
                                                                 
[18:23|%  78|+ 1452|- 217]: release test-tls-destroy-whilst-write 
                                                                 
[18:23|%  78|+ 1453|- 217]: release test-tls-dhe 
                                                
[18:23|%  78|+ 1454|- 217]: release test-tls-disable-renegotiation 
                                                                  
[18:24|%  78|+ 1455|- 217]: release test-tls-ecdh 
                                                 
[18:24|%  78|+ 1456|- 217]: release test-tls-ecdh-auto 
                                                      
[18:24|%  78|+ 1457|- 217]: release test-tls-ecdh-disable 
                                                         
=== release test-tls-ecdh-disable ===
Path: parallel/test-tls-ecdh-disable
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-tls-ecdh-disable.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-tls-ecdh-disable.js' ]
1..0 # Skipped: false ecdhCurve not supported in OpenSSL 1.1.0
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[93100]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x557a2efc1048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x557a2efc21d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x557a2f240bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x11df36a0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-tls-ecdh-disable.js
--- CRASHED (Signal: 6) ---

                                                         
[18:25|%  78|+ 1457|- 218]: release test-tls-ecdh-multiple 
                                                          
[18:25|%  78|+ 1458|- 218]: release test-tls-econnreset 
                                                       
[18:26|%  78|+ 1459|- 218]: release test-tls-empty-sni-context 
                                                              
[18:26|%  78|+ 1460|- 218]: release test-tls-env-bad-extra-ca 
                                                             
[18:26|%  78|+ 1461|- 218]: release test-tls-env-extra-ca 
                                                         
[18:27|%  78|+ 1462|- 218]: release test-tls-error-servername 
                                                             
[18:27|%  78|+ 1463|- 218]: release test-tls-external-accessor 
                                                              
[18:27|%  78|+ 1464|- 218]: release test-tls-fast-writing 
                                                         
=== release test-tls-fast-writing ===
Path: parallel/test-tls-fast-writing
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-tls-fast-writing.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-tls-fast-writing.js' ]
------zone(testZone):worker(0) is terminating------
ok - got chunk
ok - got drain
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[93192]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x5618c4189048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x5618c418a1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x5618c4408bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x4998778427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-tls-fast-writing.js
--- CRASHED (Signal: 6) ---

                                                         
[18:28|%  78|+ 1464|- 219]: release test-tls-finished 
                                                     
[18:28|%  78|+ 1465|- 219]: release test-tls-friendly-error-message 
                                                                   
[18:29|%  78|+ 1466|- 219]: release test-tls-generic-stream 
                                                           
[18:29|%  79|+ 1467|- 219]: release test-tls-getcipher 
                                                      
[18:29|%  79|+ 1468|- 219]: release test-tls-getprotocol 
                                                        
[18:30|%  79|+ 1469|- 219]: release test-tls-handshake-error 
                                                            
[18:30|%  79|+ 1470|- 219]: release test-tls-handshake-nohang 
                                                             
[18:31|%  79|+ 1471|- 219]: release test-tls-hello-parser-failure 
                                                                 
[18:31|%  79|+ 1472|- 219]: release test-tls-honorcipherorder 
                                                             
[18:32|%  79|+ 1473|- 219]: release test-tls-inception 
                                                      
[18:32|%  79|+ 1474|- 219]: release test-tls-interleave 
                                                       
[18:32|%  79|+ 1475|- 219]: release test-tls-invoke-queued 
                                                          
[18:32|%  79|+ 1476|- 219]: release test-tls-js-stream 
                                                      
[18:33|%  79|+ 1477|- 219]: release test-tls-junk-closes-server 
                                                               
[18:33|%  79|+ 1478|- 219]: release test-tls-junk-server 
                                                        
[18:33|%  79|+ 1479|- 219]: release test-tls-key-mismatch 
                                                         
[18:34|%  79|+ 1480|- 219]: release test-tls-legacy-deprecated 
                                                              
[18:34|%  79|+ 1481|- 219]: release test-tls-max-send-fragment 
                                                              
[18:34|%  79|+ 1482|- 219]: release test-tls-multi-key 
                                                      
[18:35|%  79|+ 1483|- 219]: release test-tls-multi-pfx 
                                                      
[18:35|%  79|+ 1484|- 219]: release test-tls-net-connect-prefer-path 
                                                                    
[18:35|%  79|+ 1485|- 219]: release test-tls-no-cert-required 
                                                             
[18:36|%  79|+ 1486|- 219]: release test-tls-no-rsa-key 
                                                       
[18:36|%  79|+ 1487|- 219]: release test-tls-no-sslv23 
                                                      
[18:36|%  80|+ 1488|- 219]: release test-tls-no-sslv3 
                                                     
[18:37|%  80|+ 1489|- 219]: release test-tls-ocsp-callback 
                                                          
[18:37|%  80|+ 1490|- 219]: release test-tls-on-empty-socket 
                                                            
[18:38|%  80|+ 1491|- 219]: release test-tls-options-boolean-check 
                                                                  
[18:38|%  80|+ 1492|- 219]: release test-tls-over-http-tunnel 
                                                             
[18:38|%  80|+ 1493|- 219]: release test-tls-parse-cert-string 
                                                              
[18:39|%  80|+ 1494|- 219]: release test-tls-passphrase 
                                                       
[18:39|%  80|+ 1495|- 219]: release test-tls-pause 
                                                  
[18:39|%  80|+ 1496|- 219]: release test-tls-peer-certificate 
                                                             
[18:40|%  80|+ 1497|- 219]: release test-tls-peer-certificate-encoding 
                                                                      
[18:40|%  80|+ 1498|- 219]: release test-tls-peer-certificate-multi-keys 
                                                                        
[18:40|%  80|+ 1499|- 219]: release test-tls-pfx-authorizationerror 
                                                                   
[18:41|%  80|+ 1500|- 219]: release test-tls-request-timeout 
                                                            
[18:41|%  80|+ 1501|- 219]: release test-tls-retain-handle-no-abort 
                                                                   
[18:41|%  80|+ 1502|- 219]: release test-tls-securepair-fiftharg 
                                                                
[18:42|%  80|+ 1503|- 219]: release test-tls-securepair-leak 
                                                            
[18:44|%  80|+ 1504|- 219]: release test-tls-securepair-server 
                                                              
[18:44|%  80|+ 1505|- 219]: release test-tls-server-connection-server 
                                                                     
[18:44|%  80|+ 1506|- 219]: release test-tls-server-failed-handshake-emits-... 
                                                                              
[18:45|%  80|+ 1507|- 219]: release test-tls-server-setoptions-clientcerten... 
                                                                              
[18:45|%  80|+ 1508|- 219]: release test-tls-server-verify 
                                                          
[18:46|%  81|+ 1509|- 219]: release test-tls-session-cache 
                                                          
[18:46|%  81|+ 1510|- 219]: release test-tls-set-ciphers 
                                                        
[18:46|%  81|+ 1511|- 219]: release test-tls-set-encoding 
                                                         
[18:47|%  81|+ 1512|- 219]: release test-tls-sni-option 
                                                       
[18:48|%  81|+ 1513|- 219]: release test-tls-sni-server-client 
                                                              
[18:48|%  81|+ 1514|- 219]: release test-tls-socket-close 
                                                         
[18:49|%  81|+ 1515|- 219]: release test-tls-socket-constructor-alpn-option... 
                                                                              
[18:49|%  81|+ 1516|- 219]: release test-tls-socket-default-options 
                                                                   
[18:49|%  81|+ 1517|- 219]: release test-tls-socket-destroy 
                                                           
[18:50|%  81|+ 1518|- 219]: release test-tls-socket-failed-handshake-emits-... 
                                                                              
[18:50|%  81|+ 1519|- 219]: release test-tls-socket-snicallback-without-ser... 
                                                                              
[18:51|%  81|+ 1520|- 219]: release test-tls-startcom-wosign-whitelist 
                                                                      
[18:51|%  81|+ 1521|- 219]: release test-tls-starttls-server 
                                                            
[18:52|%  81|+ 1522|- 219]: release test-tls-ticket 
                                                   
[18:52|%  81|+ 1523|- 219]: release test-tls-ticket-cluster 
                                                           
[18:52|%  81|+ 1524|- 219]: release test-tls-timeout-server 
                                                           
[18:53|%  81|+ 1525|- 219]: release test-tls-timeout-server-2 
                                                             
[18:53|%  81|+ 1526|- 219]: release test-tls-tlswrap-segfault 
                                                             
[18:54|%  81|+ 1527|- 219]: release test-tls-translate-peer-certificate 
                                                                       
[18:54|%  81|+ 1528|- 219]: release test-tls-transport-destroy-after-own-gc 
                                                                           
[18:54|%  81|+ 1529|- 219]: release test-tls-two-cas-one-string 
                                                               
[18:55|%  81|+ 1530|- 219]: release test-tls-wrap-econnreset 
                                                            
[18:55|%  82|+ 1531|- 219]: release test-tls-wrap-econnreset-localaddress 
                                                                         
[18:55|%  82|+ 1532|- 219]: release test-tls-wrap-econnreset-pipe 
                                                                 
[18:56|%  82|+ 1533|- 219]: release test-tls-wrap-econnreset-socket 
                                                                   
[18:56|%  82|+ 1534|- 219]: release test-tls-wrap-event-emmiter 
                                                               
[18:56|%  82|+ 1535|- 219]: release test-tls-wrap-no-abort 
                                                          
[18:56|%  82|+ 1536|- 219]: release test-tls-wrap-timeout 
                                                         
[18:57|%  82|+ 1537|- 219]: release test-tls-writewrap-leak 
                                                           
[18:57|%  82|+ 1538|- 219]: release test-tls-zero-clear-in 
                                                          
[18:57|%  82|+ 1539|- 219]: release test-trace-events-all 
                                                         
[18:58|%  82|+ 1540|- 219]: release test-trace-events-api 
                                                         
[18:58|%  82|+ 1541|- 219]: release test-trace-events-async-hooks 
                                                                 
[18:59|%  82|+ 1542|- 219]: release test-trace-events-binding 
                                                             
[18:59|%  82|+ 1543|- 219]: release test-trace-events-bootstrap 
                                                               
[18:59|%  82|+ 1544|- 219]: release test-trace-events-category-used 
                                                                   
[19:00|%  82|+ 1545|- 219]: release test-trace-events-file-pattern 
                                                                  
[19:00|%  82|+ 1546|- 219]: release test-trace-events-fs-sync 
                                                             
[19:02|%  82|+ 1547|- 219]: release test-trace-events-none 
                                                          
[19:02|%  82|+ 1548|- 219]: release test-trace-events-perf 
                                                          
[19:03|%  82|+ 1549|- 219]: release test-trace-events-process-exit 
                                                                  
[19:03|%  82|+ 1550|- 219]: release test-trace-events-v8 
                                                        
[19:03|%  82|+ 1551|- 219]: release test-tty-backwards-api 
                                                          
=== release test-tty-backwards-api ===
Path: parallel/test-tty-backwards-api
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-tty-backwards-api.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-tty-backwards-api.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
SystemError [ERR_TTY_INIT_FAILED]: TTY initialization failed: uv_tty_init returned EINVAL (invalid argument) Unhandled Rejection at Promise Promise {
  <rejected> 'SystemError [ERR_TTY_INIT_FAILED]: TTY initialization failed: uv_tty_init returned EINVAL (invalid argument)' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-tty-backwards-api.js

                                                          
[19:04|%  83|+ 1551|- 220]: release test-tty-stdin-end 
                                                      
[19:04|%  83|+ 1552|- 220]: release test-tty-stdin-pipe 
                                                       
[19:04|%  83|+ 1553|- 220]: release test-ttywrap-invalid-fd 
                                                           
[19:05|%  83|+ 1554|- 220]: release test-umask 
                                              
[19:05|%  83|+ 1555|- 220]: release test-url-domain-ascii-unicode 
                                                                 
[19:05|%  83|+ 1556|- 220]: release test-url-format 
                                                   
[19:06|%  83|+ 1557|- 220]: release test-url-format-invalid-input 
                                                                 
[19:06|%  83|+ 1558|- 220]: release test-url-format-whatwg 
                                                          
[19:06|%  83|+ 1559|- 220]: release test-url-parse-format 
                                                         
[19:06|%  83|+ 1560|- 220]: release test-url-parse-invalid-input 
                                                                
[19:07|%  83|+ 1561|- 220]: release test-url-parse-query 
                                                        
[19:07|%  83|+ 1562|- 220]: release test-url-relative 
                                                     
[19:07|%  83|+ 1563|- 220]: release test-utf8-scripts 
                                                     
[19:07|%  83|+ 1564|- 220]: release test-util 
                                             
[19:08|%  83|+ 1565|- 220]: release test-util-callbackify 
                                                         
[19:08|%  83|+ 1566|- 220]: release test-util-deprecate 
                                                       
[19:09|%  83|+ 1567|- 220]: release test-util-deprecate-invalid-code 
                                                                    
[19:09|%  83|+ 1568|- 220]: release test-util-emit-experimental-warning 
                                                                       
[19:09|%  83|+ 1569|- 220]: release test-util-format 
                                                    
[19:09|%  83|+ 1570|- 220]: release test-util-format-shared-arraybuffer 
                                                                       
[19:10|%  83|+ 1571|- 220]: release test-util-inherits 
                                                      
[19:10|%  84|+ 1572|- 220]: release test-util-inspect 
                                                     
[19:10|%  84|+ 1573|- 220]: release test-util-inspect-bigint 
                                                            
[19:11|%  84|+ 1574|- 220]: release test-util-inspect-deprecated 
                                                                
[19:11|%  84|+ 1575|- 220]: release test-util-inspect-proxy 
                                                           
[19:11|%  84|+ 1576|- 220]: release test-util-internal 
                                                      
[19:11|%  84|+ 1577|- 220]: release test-util-isDeepStrictEqual 
                                                               
[19:12|%  84|+ 1578|- 220]: release test-util-log 
                                                 
[19:12|%  84|+ 1579|- 220]: release test-util-promisify 
                                                       
[19:12|%  84|+ 1580|- 220]: release test-util-sigint-watchdog 
                                                             
[19:13|%  84|+ 1581|- 220]: release test-util-types 
                                                   
[19:13|%  84|+ 1582|- 220]: release test-uv-binding-constant 
                                                            
[19:13|%  84|+ 1583|- 220]: release test-uv-errno 
                                                 
[19:13|%  84|+ 1584|- 220]: release test-v8-flag-type-check 
                                                           
[19:14|%  84|+ 1585|- 220]: release test-v8-flags 
                                                 
[19:15|%  84|+ 1586|- 220]: release test-v8-global-setter 
                                                         
[19:15|%  84|+ 1587|- 220]: release test-v8-serdes 
                                                  
[19:15|%  84|+ 1588|- 220]: release test-v8-stats 
                                                 
[19:16|%  84|+ 1589|- 220]: release test-v8-untrusted-code-mitigations 
                                                                      
[19:16|%  84|+ 1590|- 220]: release test-v8-version-tag 
                                                       
[19:16|%  84|+ 1591|- 220]: release test-vm-access-process-env 
                                                              
[19:16|%  84|+ 1592|- 220]: release test-vm-api-handles-getter-errors 
                                                                     
[19:17|%  84|+ 1593|- 220]: release test-vm-attributes-property-not-on-sand... 
                                                                              
[19:18|%  85|+ 1594|- 220]: release test-vm-basic 
                                                 
[19:18|%  85|+ 1595|- 220]: release test-vm-cached-data 
                                                       
=== release test-vm-cached-data ===
Path: parallel/test-vm-cached-data
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-vm-cached-data.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-vm-cached-data.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

  assert(!script.cachedDataRejected)
 Unhandled Rejection at Promise Promise {
  <rejected> 'AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:\n\n  assert(!script.cachedDataRejected)\n' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-vm-cached-data.js

                                                       
[19:18|%  85|+ 1595|- 221]: release test-vm-codegen 
                                                   
[19:18|%  85|+ 1596|- 221]: release test-vm-context 
                                                   
[19:19|%  85|+ 1597|- 221]: release test-vm-context-async-script 
                                                                
[19:19|%  85|+ 1598|- 221]: release test-vm-context-property-forwarding 
                                                                       
[19:19|%  85|+ 1599|- 221]: release test-vm-create-and-run-in-context 
                                                                     
[19:20|%  85|+ 1600|- 221]: release test-vm-create-context-accessors 
                                                                    
[19:20|%  85|+ 1601|- 221]: release test-vm-create-context-arg 
                                                              
[19:20|%  85|+ 1602|- 221]: release test-vm-create-context-circular-referen... 
                                                                              
[19:20|%  85|+ 1603|- 221]: release test-vm-cross-context 
                                                         
[19:21|%  85|+ 1604|- 221]: release test-vm-data-property-writable 
                                                                  
[19:21|%  85|+ 1605|- 221]: release test-vm-deleting-property 
                                                             
[19:21|%  85|+ 1606|- 221]: release test-vm-function-declaration 
                                                                
[19:22|%  85|+ 1607|- 221]: release test-vm-function-redefinition 
                                                                 
[19:22|%  85|+ 1608|- 221]: release test-vm-getters 
                                                   
[19:22|%  85|+ 1609|- 221]: release test-vm-global-assignment 
                                                             
[19:22|%  85|+ 1610|- 221]: release test-vm-global-define-property 
                                                                  
[19:23|%  85|+ 1611|- 221]: release test-vm-global-identity 
                                                           
[19:23|%  85|+ 1612|- 221]: release test-vm-global-non-writable-properties 
                                                                          
[19:23|%  85|+ 1613|- 221]: release test-vm-global-property-interceptors 
                                                                        
[19:23|%  86|+ 1614|- 221]: release test-vm-harmony-symbols 
                                                           
[19:24|%  86|+ 1615|- 221]: release test-vm-indexed-properties 
                                                              
[19:24|%  86|+ 1616|- 221]: release test-vm-inherited_properties 
                                                                
[19:24|%  86|+ 1617|- 221]: release test-vm-is-context 
                                                      
[19:25|%  86|+ 1618|- 221]: release test-vm-low-stack-space 
                                                           
[19:25|%  86|+ 1619|- 221]: release test-vm-module-basic 
                                                        
[19:26|%  86|+ 1620|- 221]: release test-vm-module-dynamic-import 
                                                                 
[19:26|%  86|+ 1621|- 221]: release test-vm-module-errors 
                                                         
[19:26|%  86|+ 1622|- 221]: release test-vm-module-import-meta 
                                                              
[19:27|%  86|+ 1623|- 221]: release test-vm-module-link 
                                                       
[19:27|%  86|+ 1624|- 221]: release test-vm-module-reevaluate 
                                                             
[19:27|%  86|+ 1625|- 221]: release test-vm-new-script-new-context 
                                                                  
[19:28|%  86|+ 1626|- 221]: release test-vm-new-script-this-context 
                                                                   
[19:28|%  86|+ 1627|- 221]: release test-vm-options-validation 
                                                              
[19:28|%  86|+ 1628|- 221]: release test-vm-parse-abort-on-uncaught-excepti... 
                                                                              
[19:28|%  86|+ 1629|- 221]: release test-vm-preserves-property 
                                                              
[19:29|%  86|+ 1630|- 221]: release test-vm-property-not-on-sandbox 
                                                                   
[19:29|%  86|+ 1631|- 221]: release test-vm-proxies 
                                                   
[19:29|%  86|+ 1632|- 221]: release test-vm-proxy-failure-CP 
                                                            
[19:30|%  86|+ 1633|- 221]: release test-vm-run-in-new-context 
                                                              
[19:30|%  86|+ 1634|- 221]: release test-vm-script-throw-in-tostring 
                                                                    
[19:30|%  87|+ 1635|- 221]: release test-vm-sigint 
                                                  
[19:31|%  87|+ 1636|- 221]: release test-vm-sigint-existing-handler 
                                                                   
[19:31|%  87|+ 1637|- 221]: release test-vm-static-this 
                                                       
[19:32|%  87|+ 1638|- 221]: release test-vm-strict-assign 
                                                         
[19:32|%  87|+ 1639|- 221]: release test-vm-strict-mode 
                                                       
[19:32|%  87|+ 1640|- 221]: release test-vm-symbols 
                                                   
[19:32|%  87|+ 1641|- 221]: release test-vm-syntax-error-message 
                                                                
[19:33|%  87|+ 1642|- 221]: release test-vm-syntax-error-stderr 
                                                               
[19:33|%  87|+ 1643|- 221]: release test-vm-timeout 
                                                   
[19:34|%  87|+ 1644|- 221]: release test-warn-sigprof 
                                                     
[19:34|%  87|+ 1645|- 221]: release test-wasm-simple 
                                                    
[19:35|%  87|+ 1646|- 221]: release test-whatwg-encoding-fatal-streaming 
                                                                        
[19:35|%  87|+ 1647|- 221]: release test-whatwg-encoding-internals 
                                                                  
[19:35|%  87|+ 1648|- 221]: release test-whatwg-encoding-surrogates-utf8 
                                                                        
[19:35|%  87|+ 1649|- 221]: release test-whatwg-encoding-textdecoder 
                                                                    
[19:36|%  87|+ 1650|- 221]: release test-whatwg-encoding-textdecoder-fatal 
                                                                          
[19:36|%  87|+ 1651|- 221]: release test-whatwg-encoding-textdecoder-ignore... 
                                                                              
[19:36|%  87|+ 1652|- 221]: release test-whatwg-encoding-textdecoder-stream... 
                                                                              
[19:37|%  87|+ 1653|- 221]: release test-whatwg-encoding-textdecoder-utf16-... 
                                                                              
[19:37|%  87|+ 1654|- 221]: release test-whatwg-encoding-textencoder 
                                                                    
[19:37|%  87|+ 1655|- 221]: release test-whatwg-encoding-textencoder-utf16-... 
                                                                              
[19:37|%  87|+ 1656|- 221]: release test-whatwg-url-constructor 
                                                               
[19:38|%  88|+ 1657|- 221]: release test-whatwg-url-domainto 
                                                            
[19:38|%  88|+ 1658|- 221]: release test-whatwg-url-global 
                                                          
[19:38|%  88|+ 1659|- 221]: release test-whatwg-url-historical 
                                                              
[19:39|%  88|+ 1660|- 221]: release test-whatwg-url-inspect 
                                                           
[19:39|%  88|+ 1661|- 221]: release test-whatwg-url-origin 
                                                          
[19:39|%  88|+ 1662|- 221]: release test-whatwg-url-parsing 
                                                           
[19:39|%  88|+ 1663|- 221]: release test-whatwg-url-properties 
                                                              
[19:40|%  88|+ 1664|- 221]: release test-whatwg-url-searchparams 
                                                                
[19:40|%  88|+ 1665|- 221]: release test-whatwg-url-searchparams-append 
                                                                       
[19:40|%  88|+ 1666|- 221]: release test-whatwg-url-searchparams-constructo... 
                                                                              
[19:41|%  88|+ 1667|- 221]: release test-whatwg-url-searchparams-delete 
                                                                       
[19:41|%  88|+ 1668|- 221]: release test-whatwg-url-searchparams-entries 
                                                                        
[19:41|%  88|+ 1669|- 221]: release test-whatwg-url-searchparams-foreach 
                                                                        
[19:41|%  88|+ 1670|- 221]: release test-whatwg-url-searchparams-get 
                                                                    
[19:42|%  88|+ 1671|- 221]: release test-whatwg-url-searchparams-getall 
                                                                       
[19:42|%  88|+ 1672|- 221]: release test-whatwg-url-searchparams-has 
                                                                    
[19:42|%  88|+ 1673|- 221]: release test-whatwg-url-searchparams-inspect 
                                                                        
[19:43|%  88|+ 1674|- 221]: release test-whatwg-url-searchparams-keys 
                                                                     
[19:43|%  88|+ 1675|- 221]: release test-whatwg-url-searchparams-set 
                                                                    
[19:43|%  88|+ 1676|- 221]: release test-whatwg-url-searchparams-sort 
                                                                     
[19:44|%  88|+ 1677|- 221]: release test-whatwg-url-searchparams-stringifie... 
                                                                              
[19:44|%  89|+ 1678|- 221]: release test-whatwg-url-searchparams-values 
                                                                       
[19:44|%  89|+ 1679|- 221]: release test-whatwg-url-setters 
                                                           
[19:44|%  89|+ 1680|- 221]: release test-whatwg-url-toascii 
                                                           
[19:45|%  89|+ 1681|- 221]: release test-whatwg-url-tojson 
                                                          
[19:45|%  89|+ 1682|- 221]: release test-whatwg-url-tostringtag 
                                                               
[19:45|%  89|+ 1683|- 221]: release test-windows-abort-exitcode 
                                                               
=== release test-windows-abort-exitcode ===
Path: parallel/test-windows-abort-exitcode
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-windows-abort-exitcode.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-windows-abort-exitcode.js' ]
1..0 # Skipped: test is windows specific
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[95839]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55dffa91a048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55dffa91b1d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55dffab99bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x85e2aa0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-windows-abort-exitcode.js
--- CRASHED (Signal: 6) ---

                                                               
[19:46|%  89|+ 1683|- 222]: release test-windows-failed-heap-allocation 
                                                                       
=== release test-windows-failed-heap-allocation ===
Path: parallel/test-windows-failed-heap-allocation
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/parallel/test-windows-failed-heap-allocation.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/parallel/test-windows-failed-heap-allocation.js' ]
1..0 # Skipped: Windows-only
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[95848]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55af00956048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55af009571d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55af00bd5bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x363e4380427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/parallel/test-windows-failed-heap-allocation.js
--- CRASHED (Signal: 6) ---

                                                                       
[19:46|%  89|+ 1683|- 223]: release test-wrap-js-stream-duplex 
                                                              
[19:47|%  89|+ 1684|- 223]: release test-wrap-js-stream-exceptions 
                                                                  
[19:47|%  89|+ 1685|- 223]: release test-wrap-js-stream-read-stop 
                                                                 
[19:47|%  89|+ 1686|- 223]: release test-zlib 
                                             
[19:48|%  89|+ 1687|- 223]: release test-zlib-bytes-read 
                                                        
[19:48|%  89|+ 1688|- 223]: release test-zlib-close-after-error 
                                                               
[19:48|%  89|+ 1689|- 223]: release test-zlib-close-after-write 
                                                               
[19:49|%  89|+ 1690|- 223]: release test-zlib-const 
                                                   
[19:49|%  89|+ 1691|- 223]: release test-zlib-convenience-methods 
                                                                 
[19:49|%  89|+ 1692|- 223]: release test-zlib-create-raw 
                                                        
[19:50|%  89|+ 1693|- 223]: release test-zlib-deflate-constructors 
                                                                  
[19:50|%  89|+ 1694|- 223]: release test-zlib-deflate-raw-inherits 
                                                                  
[19:50|%  89|+ 1695|- 223]: release test-zlib-destroy-pipe 
                                                          
[19:51|%  89|+ 1696|- 223]: release test-zlib-dictionary 
                                                        
[19:51|%  90|+ 1697|- 223]: release test-zlib-dictionary-fail 
                                                             
[19:51|%  90|+ 1698|- 223]: release test-zlib-empty-buffer 
                                                          
[19:52|%  90|+ 1699|- 223]: release test-zlib-failed-init 
                                                         
[19:52|%  90|+ 1700|- 223]: release test-zlib-flush 
                                                   
[19:52|%  90|+ 1701|- 223]: release test-zlib-flush-drain 
                                                         
[19:53|%  90|+ 1702|- 223]: release test-zlib-flush-drain-longblock 
                                                                   
[19:53|%  90|+ 1703|- 223]: release test-zlib-flush-flags 
                                                         
[19:53|%  90|+ 1704|- 223]: release test-zlib-flush-multiple-scheduled 
                                                                      
[19:54|%  90|+ 1705|- 223]: release test-zlib-from-concatenated-gzip 
                                                                    
[19:54|%  90|+ 1706|- 223]: release test-zlib-from-gzip 
                                                       
[19:54|%  90|+ 1707|- 223]: release test-zlib-from-gzip-with-trailing-garba... 
                                                                              
[19:55|%  90|+ 1708|- 223]: release test-zlib-from-string 
                                                         
[19:55|%  90|+ 1709|- 223]: release test-zlib-invalid-input 
                                                           
[19:55|%  90|+ 1710|- 223]: release test-zlib-kmaxlength-rangeerror 
                                                                   
[19:56|%  90|+ 1711|- 223]: release test-zlib-not-string-or-buffer 
                                                                  
[19:56|%  90|+ 1712|- 223]: release test-zlib-object-write 
                                                          
[19:56|%  90|+ 1713|- 223]: release test-zlib-params 
                                                    
[19:57|%  90|+ 1714|- 223]: release test-zlib-random-byte-pipes 
                                                               
[19:57|%  90|+ 1715|- 223]: release test-zlib-sync-no-event 
                                                           
[19:57|%  90|+ 1716|- 223]: release test-zlib-truncated 
                                                       
[19:58|%  90|+ 1717|- 223]: release test-zlib-unzip-one-byte-chunks 
                                                                   
[19:58|%  90|+ 1718|- 223]: release test-zlib-write-after-close 
                                                               
[19:58|%  91|+ 1719|- 223]: release test-zlib-write-after-flush 
                                                               
[19:58|%  91|+ 1720|- 223]: release test-zlib-zero-byte 
                                                       
[19:59|%  91|+ 1721|- 223]: release test-zlib-zero-windowBits 
                                                             
[19:59|%  91|+ 1722|- 223]: release 2100bytes.js length differs.
expect=42
actual=52
patterns:
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_50$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_100$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_150$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_200$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_250$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_300$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_350$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_400$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_450$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_500$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_550$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_600$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_650$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_700$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_750$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_800$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_850$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_900$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_950$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_1000$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_1050$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_1100$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_1150$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_1200$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_1250$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_1300$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_1350$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_1400$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_1450$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_1500$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_1550$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_1600$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_1650$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_1700$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_1750$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_1800$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_1850$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_1900$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_1950$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_2000$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_2050$
pattern = ^\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_2100$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/2100bytes.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/2100bytes.js' ]
outline = _______________________________________________50
outline = ______________________________________________100
outline = ______________________________________________150
outline = ______________________________________________200
outline = ______________________________________________250
outline = ______________________________________________300
outline = ______________________________________________350
outline = ______________________________________________400
outline = ______________________________________________450
outline = ______________________________________________500
outline = ______________________________________________550
outline = ______________________________________________600
outline = ______________________________________________650
outline = ______________________________________________700
outline = ______________________________________________750
outline = ______________________________________________800
outline = ______________________________________________850
outline = ______________________________________________900
outline = ______________________________________________950
outline = _____________________________________________1000
outline = _____________________________________________1050
outline = _____________________________________________1100
outline = _____________________________________________1150
outline = _____________________________________________1200
outline = _____________________________________________1250
outline = _____________________________________________1300
outline = _____________________________________________1350
outline = _____________________________________________1400
outline = _____________________________________________1450
outline = _____________________________________________1500
outline = _____________________________________________1550
outline = _____________________________________________1600
outline = _____________________________________________1650
outline = _____________________________________________1700
outline = _____________________________________________1750
outline = _____________________________________________1800
outline = _____________________________________________1850
outline = _____________________________________________1900
outline = _____________________________________________1950
outline = _____________________________________________2000
outline = _____________________________________________2050
outline = _____________________________________________2100
outline = ------zone(testZone):worker(0) is terminating------
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.

                                                
=== release 2100bytes.js ===
Path: message/2100bytes.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/2100bytes.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/2100bytes.js' ]
_______________________________________________50
______________________________________________100
______________________________________________150
______________________________________________200
______________________________________________250
______________________________________________300
______________________________________________350
______________________________________________400
______________________________________________450
______________________________________________500
______________________________________________550
______________________________________________600
______________________________________________650
______________________________________________700
______________________________________________750
______________________________________________800
______________________________________________850
______________________________________________900
______________________________________________950
_____________________________________________1000
_____________________________________________1050
_____________________________________________1100
_____________________________________________1150
_____________________________________________1200
_____________________________________________1250
_____________________________________________1300
_____________________________________________1350
_____________________________________________1400
_____________________________________________1450
_____________________________________________1500
_____________________________________________1550
_____________________________________________1600
_____________________________________________1650
_____________________________________________1700
_____________________________________________1750
_____________________________________________1800
_____________________________________________1850
_____________________________________________1900
_____________________________________________1950
_____________________________________________2000
_____________________________________________2050
_____________________________________________2100
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/2100bytes.js

                                                
[19:59|%  91|+ 1722|- 224]: release assert_throws_stack.js length differs.
expect=18
actual=16
patterns:
pattern = ^assert\.js\:.*$
pattern = ^\ \ throw\ new\ AssertionError\(obj\)\;$
pattern = ^\ \ \^$
pattern = ^AssertionError\ \[ERR\_ASSERTION\]\:\ Input\ A\ expected\ to\ strictly\ deep\-equal\ input\ B\:$
pattern = ^\+\ expected\ \-\ actual$
pattern = ^\-\ Comparison\ \{\}$
pattern = ^\+\ Comparison\ \{$
pattern = ^\+\ \ \ bar\:\ true$
pattern = ^\+\ \}$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(.*assert\_throws\_stack\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/assert_throws_stack.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/assert_throws_stack.js' ]
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = AssertionError [ERR_ASSERTION]: Input A expected to strictly deep-equal input B:
outline = + expected - actual
outline = - Comparison {}
outline = + Comparison {
outline = +   bar: true
outline = + } Unhandled Rejection at Promise Promise {
outline =   <rejected> 'AssertionError [ERR_ASSERTION]: Input A expected to strictly deep-equal input B:\n+ expected - actual\n\n- Comparison {}\n+ Comparison {\n+   bar: true\n+ }' }

                                                          
=== release assert_throws_stack.js ===
Path: message/assert_throws_stack.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/assert_throws_stack.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/assert_throws_stack.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
AssertionError [ERR_ASSERTION]: Input A expected to strictly deep-equal input B:
+ expected - actual

- Comparison {}
+ Comparison {
+   bar: true
+ } Unhandled Rejection at Promise Promise {
  <rejected> 'AssertionError [ERR_ASSERTION]: Input A expected to strictly deep-equal input B:\n+ expected - actual\n\n- Comparison {}\n+ Comparison {\n+   bar: true\n+ }' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/assert_throws_stack.js

                                                          
[20:00|%  91|+ 1722|- 225]: release console_low_stack_space.js length differs.
expect=1
actual=10
patterns:
pattern = ^Hello\,\ World\!$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/console_low_stack_space.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/console_low_stack_space.js' ]
outline = Hello, World!
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.

                                                              
=== release console_low_stack_space.js ===
Path: message/console_low_stack_space.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/console_low_stack_space.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/console_low_stack_space.js' ]
Hello, World!
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/console_low_stack_space.js

                                                              
[20:00|%  91|+ 1722|- 226]: release core_line_numbers.js length differs.
expect=14
actual=10
patterns:
pattern = ^punycode\.js\:42$
pattern = ^\	throw\ new\ RangeError\(errors\[type\]\)\;$
pattern = ^\	\^$
pattern = ^RangeError\:\ Invalid\ input$
pattern = ^\ \ \ \ at\ error\ \(punycode\.js\:42\:.*\)$
pattern = ^\ \ \ \ at\ Object\.decode\ \(punycode\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(.*test.*message.*core\_line\_numbers\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Object\.Module\.\_extensions\.\.js\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.load\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ tryModuleLoad\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.\_load\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.runMain\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ startup\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/core_line_numbers.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/core_line_numbers.js' ]
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = RangeError: Invalid input Unhandled Rejection at Promise Promise { <rejected> 'RangeError: Invalid input' }

                                                        
=== release core_line_numbers.js ===
Path: message/core_line_numbers.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/core_line_numbers.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/core_line_numbers.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
RangeError: Invalid input Unhandled Rejection at Promise Promise { <rejected> 'RangeError: Invalid input' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/core_line_numbers.js

                                                        
[20:00|%  91|+ 1722|- 227]: release error_exit.js length differs.
expect=17
actual=14
patterns:
pattern = ^Exiting\ with\ code\=1$
pattern = ^assert\.js\:.*$
pattern = ^\ \ throw\ new\ AssertionError\(obj\)\;$
pattern = ^\ \ \^$
pattern = ^AssertionError\ \[ERR\_ASSERTION\]\:\ Input\ A\ expected\ to\ strictly\ equal\ input\ B\:$
pattern = ^\+\ expected\ \-\ actual$
pattern = ^\-\ 1$
pattern = ^\+\ 2$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(.*test.*message.*error\_exit\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Object\.Module\.\_extensions\.\.js\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.load\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ tryModuleLoad\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.\_load\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.runMain\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ startup\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ bootstrapNodeJSCore\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/error_exit.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/error_exit.js' ]
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
outline = + expected - actual
outline = - 1
outline = + 2 Unhandled Rejection at Promise Promise {
outline =   <rejected> 'AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:\n+ expected - actual\n\n- 1\n+ 2' }

                                                 
=== release error_exit.js ===
Path: message/error_exit.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/error_exit.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/error_exit.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 1
+ 2 Unhandled Rejection at Promise Promise {
  <rejected> 'AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:\n+ expected - actual\n\n- 1\n+ 2' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/error_exit.js

                                                 
[20:00|%  91|+ 1722|- 228]: release esm_display_syntax_error.mjs length differs.
expect=6
actual=13
patterns:
pattern = ^\(node\:.*\)\ ExperimentalWarning\:\ The\ ESM\ module\ loader\ is\ experimental\.$
pattern = ^file\:\/\/\/.*\/test\/message\/esm\_display\_syntax\_error\.mjs\:3$
pattern = ^await\ async\ \(\)\ \=\>\ 0\;$
pattern = ^\^\^\^\^\^$
pattern = ^SyntaxError\:\ Unexpected\ reserved\ word$
pattern = ^\ \ \ \ at\ translators\.set\ \(internal\/modules\/esm\/translators\.js\:.*\:.*\)$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/esm_display_syntax_error.mjs
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/esm_display_syntax_error.mjs' ]
outline = (node:96319) ExperimentalWarning: The ESM module loader is experimental.
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = (node:96319) ExperimentalWarning: The ESM module loader is experimental.
outline = Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/message/esm_display_syntax_error.mjs Unhandled Rejection at Promise Promise {
outline =   <rejected> 'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/message/esm_display_syntax_error.mjs' }

                                                                
=== release esm_display_syntax_error.mjs ===
Path: message/esm_display_syntax_error.mjs
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/esm_display_syntax_error.mjs
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/esm_display_syntax_error.mjs' ]
(node:96319) ExperimentalWarning: The ESM module loader is experimental.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
(node:96319) ExperimentalWarning: The ESM module loader is experimental.
Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/message/esm_display_syntax_error.mjs Unhandled Rejection at Promise Promise {
  <rejected> 'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/message/esm_display_syntax_error.mjs' }
Command: out/Release/node --experimental-modules /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/esm_display_syntax_error.mjs

                                                                
[20:01|%  91|+ 1722|- 229]: release esm_display_syntax_error_import.mjs length differs.
expect=6
actual=13
patterns:
pattern = ^\(node\:.*\)\ ExperimentalWarning\:\ The\ ESM\ module\ loader\ is\ experimental\.$
pattern = ^file\:\/\/\/.*\/test\/message\/esm\_display\_syntax\_error\_import\.mjs\:6$
pattern = ^\ \ notfound$
pattern = ^\ \ \^\^\^\^\^\^\^\^$
pattern = ^SyntaxError\:\ The\ requested\ module\ \'\.\.\/fixtures\/es\-module\-loaders\/module\-named\-exports\'\ does\ not\ provide\ an\ export\ named\ \'notfound\'$
pattern = ^\ \ \ \ at\ ModuleJob\.\_instantiate\ \(internal\/modules\/esm\/module\_job\.js\:.*\:.*\)$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/esm_display_syntax_error_import.mjs
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/esm_display_syntax_error_import.mjs' ]
outline = (node:96327) ExperimentalWarning: The ESM module loader is experimental.
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = (node:96327) ExperimentalWarning: The ESM module loader is experimental.
outline = Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/message/esm_display_syntax_error_import.mjs Unhandled Rejection at Promise Promise {
outline =   <rejected> 'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/message/esm_display_syntax_error_import.mjs' }

                                                                       
=== release esm_display_syntax_error_import.mjs ===
Path: message/esm_display_syntax_error_import.mjs
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/esm_display_syntax_error_import.mjs
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/esm_display_syntax_error_import.mjs' ]
(node:96327) ExperimentalWarning: The ESM module loader is experimental.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
(node:96327) ExperimentalWarning: The ESM module loader is experimental.
Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/message/esm_display_syntax_error_import.mjs Unhandled Rejection at Promise Promise {
  <rejected> 'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/message/esm_display_syntax_error_import.mjs' }
Command: out/Release/node --experimental-modules /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/esm_display_syntax_error_import.mjs

                                                                       
[20:01|%  91|+ 1722|- 230]: release esm_display_syntax_error_import_module.... length differs.
expect=6
actual=13
patterns:
pattern = ^\(node\:.*\)\ ExperimentalWarning\:\ The\ ESM\ module\ loader\ is\ experimental\.$
pattern = ^file\:\/\/\/.*\/test\/fixtures\/es\-module\-loaders\/syntax\-error\-import\.mjs\:1$
pattern = ^import\ \{\ foo\,\ notfound\ \}\ from\ \'\.\/module\-named\-exports\'\;$
pattern = ^\ \ \ \ \ \ \ \ \ \ \ \ \ \ \^\^\^\^\^\^\^\^$
pattern = ^SyntaxError\:\ The\ requested\ module\ \'\.\/module\-named\-exports\'\ does\ not\ provide\ an\ export\ named\ \'notfound\'$
pattern = ^\ \ \ \ at\ ModuleJob\.\_instantiate\ \(internal\/modules\/esm\/module\_job\.js\:.*\:.*\)$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/esm_display_syntax_error_import_module.mjs
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/esm_display_syntax_error_import_module.mjs' ]
outline = (node:96335) ExperimentalWarning: The ESM module loader is experimental.
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = (node:96335) ExperimentalWarning: The ESM module loader is experimental.
outline = Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/message/esm_display_syntax_error_import_module.mjs Unhandled Rejection at Promise Promise {
outline =   <rejected> 'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/message/esm_display_syntax_error_import_module.mjs' }

                                                                              
=== release esm_display_syntax_error_import_module.mjs ===
Path: message/esm_display_syntax_error_import_module.mjs
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/esm_display_syntax_error_import_module.mjs
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/esm_display_syntax_error_import_module.mjs' ]
(node:96335) ExperimentalWarning: The ESM module loader is experimental.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
(node:96335) ExperimentalWarning: The ESM module loader is experimental.
Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/message/esm_display_syntax_error_import_module.mjs Unhandled Rejection at Promise Promise {
  <rejected> 'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/message/esm_display_syntax_error_import_module.mjs' }
Command: out/Release/node --experimental-modules /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/esm_display_syntax_error_import_module.mjs

                                                                              
[20:01|%  91|+ 1722|- 231]: release esm_display_syntax_error_module.mjs length differs.
expect=6
actual=13
patterns:
pattern = ^\(node\:.*\)\ ExperimentalWarning\:\ The\ ESM\ module\ loader\ is\ experimental\.$
pattern = ^file\:\/\/\/.*\/test\/fixtures\/es\-module\-loaders\/syntax\-error\.mjs\:2$
pattern = ^await\ async\ \(\)\ \=\>\ 0\;$
pattern = ^\^\^\^\^\^$
pattern = ^SyntaxError\:\ Unexpected\ reserved\ word$
pattern = ^\ \ \ \ at\ translators\.set\ \(internal\/modules\/esm\/translators\.js\:.*\:.*\)$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/esm_display_syntax_error_module.mjs
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/esm_display_syntax_error_module.mjs' ]
outline = (node:96343) ExperimentalWarning: The ESM module loader is experimental.
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = (node:96343) ExperimentalWarning: The ESM module loader is experimental.
outline = Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/message/esm_display_syntax_error_module.mjs Unhandled Rejection at Promise Promise {
outline =   <rejected> 'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/message/esm_display_syntax_error_module.mjs' }

                                                                       
=== release esm_display_syntax_error_module.mjs ===
Path: message/esm_display_syntax_error_module.mjs
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/esm_display_syntax_error_module.mjs
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/esm_display_syntax_error_module.mjs' ]
(node:96343) ExperimentalWarning: The ESM module loader is experimental.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
(node:96343) ExperimentalWarning: The ESM module loader is experimental.
Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/message/esm_display_syntax_error_module.mjs Unhandled Rejection at Promise Promise {
  <rejected> 'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/message/esm_display_syntax_error_module.mjs' }
Command: out/Release/node --experimental-modules /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/esm_display_syntax_error_module.mjs

                                                                       
[20:02|%  91|+ 1722|- 232]: release eval_messages.js length differs.
expect=61
actual=71
patterns:
pattern = ^\[eval\]$
pattern = ^\[eval\]\:1$
pattern = ^with\(this\)\{\_\_filename\}$
pattern = ^\^\^\^\^$
pattern = ^SyntaxError\:\ Strict\ mode\ code\ may\ not\ include\ a\ with\ statement$
pattern = ^\ \ \ \ at\ new\ Script\ \(vm\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ createScript\ \(vm\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Object\.runInThisContext\ \(vm\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(\[eval\]\-wrapper\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ evalScript\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ startup\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ bootstrapNodeJSCore\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^42$
pattern = ^42$
pattern = ^\[eval\]\:1$
pattern = ^throw\ new\ Error\(\"hello\"\)$
pattern = ^\^$
pattern = ^Error\:\ hello$
pattern = ^\ \ \ \ at\ \[eval\]\:1\:7$
pattern = ^\ \ \ \ at\ Script\.runInThisContext\ \(vm\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Object\.runInThisContext\ \(vm\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(\[eval\]\-wrapper\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ evalScript\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ startup\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ bootstrapNodeJSCore\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\[eval\]\:1$
pattern = ^throw\ new\ Error\(\"hello\"\)$
pattern = ^\^$
pattern = ^Error\:\ hello$
pattern = ^\ \ \ \ at\ \[eval\]\:1\:7$
pattern = ^\ \ \ \ at\ Script\.runInThisContext\ \(vm\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Object\.runInThisContext\ \(vm\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(\[eval\]\-wrapper\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ evalScript\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ startup\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ bootstrapNodeJSCore\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^100$
pattern = ^\[eval\]\:1$
pattern = ^var\ x\ \=\ 100\;\ y\ \=\ x\;$
pattern = ^\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \^$
pattern = ^ReferenceError\:\ y\ is\ not\ defined$
pattern = ^\ \ \ \ at\ \[eval\]\:1\:16$
pattern = ^\ \ \ \ at\ Script\.runInThisContext\ \(vm\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Object\.runInThisContext\ \(vm\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(\[eval\]\-wrapper\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ evalScript\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ startup\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ bootstrapNodeJSCore\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\[eval\]\:1$
pattern = ^var\ \_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\;\ throw\ 10$
pattern = ^\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \^$
pattern = ^10$
pattern = ^\[eval\]\:1$
pattern = ^var\ \_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\;\ throw\ 10$
pattern = ^\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \^$
pattern = ^10$
pattern = ^done$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/eval_messages.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/eval_messages.js' ]
outline = ------zone(testZone):worker(0) is terminating------
outline = [eval]
outline = [eval]:1
outline = with(this){__filename}
outline = ^^^^
outline = SyntaxError: Strict mode code may not include a with statement
outline =     at new Script (vm.js:74:7)
outline =     at createScript (vm.js:246:10)
outline =     at Object.runInThisContext (vm.js:298:10)
outline =     at Object.<anonymous> ([eval]-wrapper:6:22)
outline =     at Module._compile (internal/modules/cjs/loader.js:678:30)
outline =     at evalScript (internal/bootstrap/node.js:542:27)
outline =     at startup (internal/bootstrap/node.js:204:9)
outline =     at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
outline = 42
outline = 42
outline = [eval]:1
outline = throw new Error("hello")
outline = ^
outline = Error: hello
outline =     at [eval]:1:7
outline =     at Script.runInThisContext (vm.js:91:20)
outline =     at Object.runInThisContext (vm.js:298:38)
outline =     at Object.<anonymous> ([eval]-wrapper:6:22)
outline =     at Module._compile (internal/modules/cjs/loader.js:678:30)
outline =     at evalScript (internal/bootstrap/node.js:542:27)
outline =     at startup (internal/bootstrap/node.js:204:9)
outline =     at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
outline = [eval]:1
outline = throw new Error("hello")
outline = ^
outline = Error: hello
outline =     at [eval]:1:7
outline =     at Script.runInThisContext (vm.js:91:20)
outline =     at Object.runInThisContext (vm.js:298:38)
outline =     at Object.<anonymous> ([eval]-wrapper:6:22)
outline =     at Module._compile (internal/modules/cjs/loader.js:678:30)
outline =     at evalScript (internal/bootstrap/node.js:542:27)
outline =     at startup (internal/bootstrap/node.js:204:9)
outline =     at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
outline = 100
outline = [eval]:1
outline = var x = 100; y = x;
outline =                ^
outline = ReferenceError: y is not defined
outline =     at [eval]:1:16
outline =     at Script.runInThisContext (vm.js:91:20)
outline =     at Object.runInThisContext (vm.js:298:38)
outline =     at Object.<anonymous> ([eval]-wrapper:6:22)
outline =     at Module._compile (internal/modules/cjs/loader.js:678:30)
outline =     at evalScript (internal/bootstrap/node.js:542:27)
outline =     at startup (internal/bootstrap/node.js:204:9)
outline =     at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
outline = [eval]:1
outline = var ______________________________________________; throw 10
outline =                                                     ^
outline = 10
outline = [eval]:1
outline = var ______________________________________________; throw 10
outline =                                                     ^
outline = 10
outline = done
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.

                                                    
=== release eval_messages.js ===
Path: message/eval_messages.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/eval_messages.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/eval_messages.js' ]
------zone(testZone):worker(0) is terminating------
[eval]
[eval]:1
with(this){__filename}
^^^^

SyntaxError: Strict mode code may not include a with statement
    at new Script (vm.js:74:7)
    at createScript (vm.js:246:10)
    at Object.runInThisContext (vm.js:298:10)
    at Object.<anonymous> ([eval]-wrapper:6:22)
    at Module._compile (internal/modules/cjs/loader.js:678:30)
    at evalScript (internal/bootstrap/node.js:542:27)
    at startup (internal/bootstrap/node.js:204:9)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
42
42
[eval]:1
throw new Error("hello")
^

Error: hello
    at [eval]:1:7
    at Script.runInThisContext (vm.js:91:20)
    at Object.runInThisContext (vm.js:298:38)
    at Object.<anonymous> ([eval]-wrapper:6:22)
    at Module._compile (internal/modules/cjs/loader.js:678:30)
    at evalScript (internal/bootstrap/node.js:542:27)
    at startup (internal/bootstrap/node.js:204:9)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
[eval]:1
throw new Error("hello")
^

Error: hello
    at [eval]:1:7
    at Script.runInThisContext (vm.js:91:20)
    at Object.runInThisContext (vm.js:298:38)
    at Object.<anonymous> ([eval]-wrapper:6:22)
    at Module._compile (internal/modules/cjs/loader.js:678:30)
    at evalScript (internal/bootstrap/node.js:542:27)
    at startup (internal/bootstrap/node.js:204:9)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
100
[eval]:1
var x = 100; y = x;
               ^

ReferenceError: y is not defined
    at [eval]:1:16
    at Script.runInThisContext (vm.js:91:20)
    at Object.runInThisContext (vm.js:298:38)
    at Object.<anonymous> ([eval]-wrapper:6:22)
    at Module._compile (internal/modules/cjs/loader.js:678:30)
    at evalScript (internal/bootstrap/node.js:542:27)
    at startup (internal/bootstrap/node.js:204:9)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)

[eval]:1
var ______________________________________________; throw 10
                                                    ^
10

[eval]:1
var ______________________________________________; throw 10
                                                    ^
10
done
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/eval_messages.js

                                                    
[20:03|%  91|+ 1722|- 233]: release events_unhandled_error_common_trace.js length differs.
expect=21
actual=10
patterns:
pattern = ^events\.js\:.*$
pattern = ^\ \ \ \ \ \ throw\ er\;\ \/\/\ Unhandled\ \'error\'\ event$
pattern = ^\ \ \ \ \ \ \^$
pattern = ^Error\:\ foo\:bar$
pattern = ^\ \ \ \ at\ bar\ \(.*events\_unhandled\_error\_common\_trace\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ foo\ \(.*events\_unhandled\_error\_common\_trace\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(.*events\_unhandled\_error\_common\_trace\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Object\.Module\.\_extensions\.\.js\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.load\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ tryModuleLoad\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.\_load\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.runMain\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ startup\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^Emitted\ \'error\'\ event\ at\:$
pattern = ^\ \ \ \ at\ quux\ \(.*events\_unhandled\_error\_common\_trace\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(.*events\_unhandled\_error\_common\_trace\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ \[\.\.\.\ lines\ matching\ original\ stack\ trace\ \.\.\.\]$
pattern = ^\ \ \ \ at\ startup\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ bootstrapNodeJSCore\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/events_unhandled_error_common_trace.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/events_unhandled_error_common_trace.js' ]
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = Error: foo:bar Unhandled Rejection at Promise Promise { <rejected> 'Error: foo:bar' }

                                                                          
=== release events_unhandled_error_common_trace.js ===
Path: message/events_unhandled_error_common_trace.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/events_unhandled_error_common_trace.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/events_unhandled_error_common_trace.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error: foo:bar Unhandled Rejection at Promise Promise { <rejected> 'Error: foo:bar' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/events_unhandled_error_common_trace.js

                                                                          
[20:03|%  91|+ 1722|- 234]: release events_unhandled_error_nexttick.js length differs.
expect=19
actual=26
patterns:
pattern = ^events\.js\:.*$
pattern = ^\ \ \ \ \ \ throw\ er\;\ \/\/\ Unhandled\ \'error\'\ event$
pattern = ^\ \ \ \ \ \ \^$
pattern = ^Error$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(.*events\_unhandled\_error\_nexttick\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Object\.Module\.\_extensions\.\.js\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.load\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ tryModuleLoad\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.\_load\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.runMain\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ startup\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ bootstrapNodeJSCore\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^Emitted\ \'error\'\ event\ at\:$
pattern = ^\ \ \ \ at\ process\.nextTick\ \(.*events\_unhandled\_error\_nexttick\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ process\.\_tickCallback\ \(internal\/process\/next\_tick\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.runMain\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ startup\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ bootstrapNodeJSCore\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/events_unhandled_error_nexttick.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/events_unhandled_error_nexttick.js' ]
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = events.js:167
outline =       throw er; // Unhandled 'error' event
outline =       ^
outline = Error
outline =     at Object.<anonymous> (/home/zhanglei/src/node/test/message/events_unhandled_error_nexttick.js:4:12)
outline =     at Module._compile (internal/modules/cjs/loader.js:678:30)
outline =     at Object.Module._extensions..js (internal/modules/cjs/loader.js:689:10)
outline =     at Module.load (internal/modules/cjs/loader.js:589:32)
outline =     at tryModuleLoad (internal/modules/cjs/loader.js:528:12)
outline =     at Function.Module._load (internal/modules/cjs/loader.js:520:3)
outline =     at Module.require (internal/modules/cjs/loader.js:626:17)
outline =     at require (internal/modules/cjs/helpers.js:20:18)
outline =     at eval (eval at callFunction (/home/zhanglei/src/napajs/lib/zone/function-call.js:90:17), <anonymous>:1:1)
outline =     at eval (<anonymous>)
outline = Emitted 'error' event at:
outline =     at process.nextTick (/home/zhanglei/src/node/test/message/events_unhandled_error_nexttick.js:6:22)
outline =     at process._tickCallback (internal/process/next_tick.js:172:11)

                                                                      
=== release events_unhandled_error_nexttick.js ===
Path: message/events_unhandled_error_nexttick.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/events_unhandled_error_nexttick.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/events_unhandled_error_nexttick.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
events.js:167
      throw er; // Unhandled 'error' event
      ^

Error
    at Object.<anonymous> (/home/zhanglei/src/node/test/message/events_unhandled_error_nexttick.js:4:12)
    at Module._compile (internal/modules/cjs/loader.js:678:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:689:10)
    at Module.load (internal/modules/cjs/loader.js:589:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:528:12)
    at Function.Module._load (internal/modules/cjs/loader.js:520:3)
    at Module.require (internal/modules/cjs/loader.js:626:17)
    at require (internal/modules/cjs/helpers.js:20:18)
    at eval (eval at callFunction (/home/zhanglei/src/napajs/lib/zone/function-call.js:90:17), <anonymous>:1:1)
    at eval (<anonymous>)
Emitted 'error' event at:
    at process.nextTick (/home/zhanglei/src/node/test/message/events_unhandled_error_nexttick.js:6:22)
    at process._tickCallback (internal/process/next_tick.js:172:11)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/events_unhandled_error_nexttick.js

                                                                      
[20:03|%  91|+ 1722|- 235]: release events_unhandled_error_sameline.js length differs.
expect=18
actual=10
patterns:
pattern = ^events\.js\:.*$
pattern = ^\ \ \ \ \ \ throw\ er\;\ \/\/\ Unhandled\ \'error\'\ event$
pattern = ^\ \ \ \ \ \ \^$
pattern = ^Error$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(.*events\_unhandled\_error\_sameline\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Object\.Module\.\_extensions\.\.js\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.load\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ tryModuleLoad\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.\_load\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.runMain\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ startup\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ bootstrapNodeJSCore\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^Emitted\ \'error\'\ event\ at\:$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(.*events\_unhandled\_error\_sameline\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ \[\.\.\.\ lines\ matching\ original\ stack\ trace\ \.\.\.\]$
pattern = ^\ \ \ \ at\ bootstrapNodeJSCore\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/events_unhandled_error_sameline.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/events_unhandled_error_sameline.js' ]
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = Error Unhandled Rejection at Promise Promise { <rejected> 'Error' }

                                                                      
=== release events_unhandled_error_sameline.js ===
Path: message/events_unhandled_error_sameline.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/events_unhandled_error_sameline.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/events_unhandled_error_sameline.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Error Unhandled Rejection at Promise Promise { <rejected> 'Error' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/events_unhandled_error_sameline.js

                                                                      
[20:04|%  91|+ 1722|- 236]: release hello_world.js length differs.
expect=1
actual=11
patterns:
pattern = ^hello\ world$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/hello_world.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/hello_world.js' ]
outline = hello world
outline = ------zone(testZone):worker(0) is terminating------
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.

                                                  
=== release hello_world.js ===
Path: message/hello_world.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/hello_world.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/hello_world.js' ]
hello world
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/hello_world.js

                                                  
[20:04|%  91|+ 1722|- 237]: release if-error-has-good-stack.js length differs.
expect=18
actual=11
patterns:
pattern = ^assert\.js\:.*$
pattern = ^\ \ \ \ throw\ newErr\;$
pattern = ^\ \ \ \ \^$
pattern = ^AssertionError\ \[ERR\_ASSERTION\]\:\ ifError\ got\ unwanted\ exception\:\ test\ error$
pattern = ^\ \ \ \ at\ z\ \(.*if\-error\-has\-good\-stack\.js\:.*\:.*$
pattern = ^\ \ \ \ at\ y\ \(.*if\-error\-has\-good\-stack\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ x\ \(.*if\-error\-has\-good\-stack\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(.*if\-error\-has\-good\-stack\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ c\ \(.*if\-error\-has\-good\-stack\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ b\ \(.*if\-error\-has\-good\-stack\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ a\ \(.*if\-error\-has\-good\-stack\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(.*if\-error\-has\-good\-stack\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Object\.Module\.\_extensions\.\.js\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.load\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ tryModuleLoad\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.\_load\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.runMain\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/if-error-has-good-stack.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/if-error-has-good-stack.js' ]
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = AssertionError [ERR_ASSERTION]: ifError got unwanted exception: test error Unhandled Rejection at Promise Promise {
outline =   <rejected> 'AssertionError [ERR_ASSERTION]: ifError got unwanted exception: test error' }

                                                              
=== release if-error-has-good-stack.js ===
Path: message/if-error-has-good-stack.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/if-error-has-good-stack.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/if-error-has-good-stack.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
AssertionError [ERR_ASSERTION]: ifError got unwanted exception: test error Unhandled Rejection at Promise Promise {
  <rejected> 'AssertionError [ERR_ASSERTION]: ifError got unwanted exception: test error' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/if-error-has-good-stack.js

                                                              
[20:04|%  91|+ 1722|- 238]: release max_tick_depth.js length differs.
expect=21
actual=31
patterns:
pattern = ^tick\ 20$
pattern = ^tick\ 19$
pattern = ^tick\ 18$
pattern = ^tick\ 17$
pattern = ^tick\ 16$
pattern = ^tick\ 15$
pattern = ^tick\ 14$
pattern = ^tick\ 13$
pattern = ^tick\ 12$
pattern = ^tick\ 11$
pattern = ^tick\ 10$
pattern = ^tick\ 9$
pattern = ^tick\ 8$
pattern = ^tick\ 7$
pattern = ^tick\ 6$
pattern = ^tick\ 5$
pattern = ^tick\ 4$
pattern = ^tick\ 3$
pattern = ^tick\ 2$
pattern = ^tick\ 1$
pattern = ^tick\ 0$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/max_tick_depth.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/max_tick_depth.js' ]
outline = ------zone(testZone):worker(0) is terminating------
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = tick 20
outline = tick 19
outline = tick 18
outline = tick 17
outline = tick 16
outline = tick 15
outline = tick 14
outline = tick 13
outline = tick 12
outline = tick 11
outline = tick 10
outline = tick 9
outline = tick 8
outline = tick 7
outline = tick 6
outline = tick 5
outline = tick 4
outline = tick 3
outline = tick 2
outline = tick 1
outline = tick 0

                                                     
=== release max_tick_depth.js ===
Path: message/max_tick_depth.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/max_tick_depth.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/max_tick_depth.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
tick 20
tick 19
tick 18
tick 17
tick 16
tick 15
tick 14
tick 13
tick 12
tick 11
tick 10
tick 9
tick 8
tick 7
tick 6
tick 5
tick 4
tick 3
tick 2
tick 1
tick 0
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/max_tick_depth.js

                                                     
[20:04|%  91|+ 1722|- 239]: release nexttick_throw.js length differs.
expect=9
actual=15
patterns:
pattern = ^.*test.*message.*nexttick\_throw\.js\:.*$
pattern = ^\ \ \ \ \ \ \ \ undefined\_reference\_error\_maker\;$
pattern = ^\ \ \ \ \ \ \ \ \^$
pattern = ^ReferenceError\:\ undefined\_reference\_error\_maker\ is\ not\ defined$
pattern = ^\ \ \ \ at\ .*test.*message.*nexttick\_throw\.js\:.*\:.*$
pattern = ^\ \ \ \ at\ process\.\_tickCallback\ \(internal\/process\/next\_tick\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.runMain\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ startup\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ bootstrapNodeJSCore\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/nexttick_throw.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/nexttick_throw.js' ]
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = /home/zhanglei/src/node/test/message/nexttick_throw.js:30
outline =         undefined_reference_error_maker;
outline =         ^
outline = ReferenceError: undefined_reference_error_maker is not defined
outline =     at /home/zhanglei/src/node/test/message/nexttick_throw.js:30:9
outline =     at process._tickCallback (internal/process/next_tick.js:172:11)

                                                     
=== release nexttick_throw.js ===
Path: message/nexttick_throw.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/nexttick_throw.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/nexttick_throw.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
/home/zhanglei/src/node/test/message/nexttick_throw.js:30
        undefined_reference_error_maker;
        ^

ReferenceError: undefined_reference_error_maker is not defined
    at /home/zhanglei/src/node/test/message/nexttick_throw.js:30:9
    at process._tickCallback (internal/process/next_tick.js:172:11)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/nexttick_throw.js

                                                     
[20:05|%  91|+ 1722|- 240]: release stack_overflow.js length differs.
expect=5
actual=11
patterns:
pattern = ^before$
pattern = ^.*test.*message.*stack\_overflow\.js\:.*$
pattern = ^JSON\.stringify\(array\)\;$
pattern = ^\ \ \ \ \ \^$
pattern = ^RangeError\:\ Maximum\ call\ stack\ size\ exceeded$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/stack_overflow.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/stack_overflow.js' ]
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = before
outline = RangeError: Maximum call stack size exceeded Unhandled Rejection at Promise Promise { <rejected> 'RangeError: Maximum call stack size exceeded' }

                                                     
=== release stack_overflow.js ===
Path: message/stack_overflow.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/stack_overflow.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/stack_overflow.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
before
RangeError: Maximum call stack size exceeded Unhandled Rejection at Promise Promise { <rejected> 'RangeError: Maximum call stack size exceeded' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/stack_overflow.js

                                                     
[20:05|%  92|+ 1722|- 241]: release stdin_messages.js length differs.
expect=69
actual=79
patterns:
pattern = ^\[stdin\]$
pattern = ^\[stdin\]\:1$
pattern = ^with\(this\)\{\_\_filename\}$
pattern = ^\^\^\^\^$
pattern = ^SyntaxError\:\ Strict\ mode\ code\ may\ not\ include\ a\ with\ statement$
pattern = ^\ \ \ \ at\ new\ Script\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ createScript\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.runInThisContext\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(\[stdin\]\-wrapper\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ evalScript\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Socket\.\<anonymous\>\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Socket\.emit\ \(events\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ endReadableNT\ \(\_stream\_readable\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ process\.\_tickCallback\ \(internal\/process\/next\_tick\.js\:.*\:.*\)$
pattern = ^42$
pattern = ^42$
pattern = ^\[stdin\]\:1$
pattern = ^throw\ new\ Error\(\"hello\"\)$
pattern = ^\^$
pattern = ^Error\:\ hello$
pattern = ^\ \ \ \ at\ \[stdin\]\:1\:7$
pattern = ^\ \ \ \ at\ Script\.runInThisContext\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.runInThisContext\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(\[stdin\]\-wrapper\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ evalScript\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Socket\.\<anonymous\>\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Socket\.emit\ \(events\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ endReadableNT\ \(\_stream\_readable\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ process\.\_tickCallback\ \(internal\/process\/next\_tick\.js\:.*\:.*\)$
pattern = ^\[stdin\]\:1$
pattern = ^throw\ new\ Error\(\"hello\"\)$
pattern = ^\^$
pattern = ^Error\:\ hello$
pattern = ^\ \ \ \ at\ \[stdin\]\:1\:.*$
pattern = ^\ \ \ \ at\ Script\.runInThisContext\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.runInThisContext\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(\[stdin\]\-wrapper\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ evalScript\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Socket\.\<anonymous\>\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Socket\.emit\ \(events\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ endReadableNT\ \(\_stream\_readable\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ process\.\_tickCallback\ \(internal\/process\/next\_tick\.js\:.*\:.*\)$
pattern = ^100$
pattern = ^\[stdin\]\:1$
pattern = ^var\ x\ \=\ 100\;\ y\ \=\ x\;$
pattern = ^\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \^$
pattern = ^ReferenceError\:\ y\ is\ not\ defined$
pattern = ^\ \ \ \ at\ \[stdin\]\:1\:16$
pattern = ^\ \ \ \ at\ Script\.runInThisContext\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.runInThisContext\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(\[stdin\]\-wrapper\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ evalScript\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Socket\.\<anonymous\>\ \(internal\/bootstrap\/node\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Socket\.emit\ \(events\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ endReadableNT\ \(\_stream\_readable\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ process\.\_tickCallback\ \(internal\/process\/next\_tick\.js\:.*\:.*\)$
pattern = ^\[stdin\]\:1$
pattern = ^var\ \_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\;\ throw\ 10$
pattern = ^\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \^$
pattern = ^10$
pattern = ^\[stdin\]\:1$
pattern = ^var\ \_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\;\ throw\ 10$
pattern = ^\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \^$
pattern = ^10$
pattern = ^done$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/stdin_messages.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/stdin_messages.js' ]
outline = ------zone(testZone):worker(0) is terminating------
outline = [stdin]
outline = [stdin]:1
outline = with(this){__filename}
outline = ^^^^
outline = SyntaxError: Strict mode code may not include a with statement
outline =     at new Script (vm.js:74:7)
outline =     at createScript (vm.js:246:10)
outline =     at Object.runInThisContext (vm.js:298:10)
outline =     at Object.<anonymous> ([stdin]-wrapper:6:22)
outline =     at Module._compile (internal/modules/cjs/loader.js:678:30)
outline =     at evalScript (internal/bootstrap/node.js:542:27)
outline =     at Socket.<anonymous> (internal/bootstrap/node.js:274:15)
outline =     at Socket.emit (events.js:187:15)
outline =     at endReadableNT (_stream_readable.js:1091:14)
outline =     at process._tickCallback (internal/process/next_tick.js:174:19)
outline = 42
outline = 42
outline = [stdin]:1
outline = throw new Error("hello")
outline = ^
outline = Error: hello
outline =     at [stdin]:1:7
outline =     at Script.runInThisContext (vm.js:91:20)
outline =     at Object.runInThisContext (vm.js:298:38)
outline =     at Object.<anonymous> ([stdin]-wrapper:6:22)
outline =     at Module._compile (internal/modules/cjs/loader.js:678:30)
outline =     at evalScript (internal/bootstrap/node.js:542:27)
outline =     at Socket.<anonymous> (internal/bootstrap/node.js:274:15)
outline =     at Socket.emit (events.js:187:15)
outline =     at endReadableNT (_stream_readable.js:1091:14)
outline =     at process._tickCallback (internal/process/next_tick.js:174:19)
outline = [stdin]:1
outline = throw new Error("hello")
outline = ^
outline = Error: hello
outline =     at [stdin]:1:7
outline =     at Script.runInThisContext (vm.js:91:20)
outline =     at Object.runInThisContext (vm.js:298:38)
outline =     at Object.<anonymous> ([stdin]-wrapper:6:22)
outline =     at Module._compile (internal/modules/cjs/loader.js:678:30)
outline =     at evalScript (internal/bootstrap/node.js:542:27)
outline =     at Socket.<anonymous> (internal/bootstrap/node.js:274:15)
outline =     at Socket.emit (events.js:187:15)
outline =     at endReadableNT (_stream_readable.js:1091:14)
outline =     at process._tickCallback (internal/process/next_tick.js:174:19)
outline = 100
outline = [stdin]:1
outline = var x = 100; y = x;
outline =                ^
outline = ReferenceError: y is not defined
outline =     at [stdin]:1:16
outline =     at Script.runInThisContext (vm.js:91:20)
outline =     at Object.runInThisContext (vm.js:298:38)
outline =     at Object.<anonymous> ([stdin]-wrapper:6:22)
outline =     at Module._compile (internal/modules/cjs/loader.js:678:30)
outline =     at evalScript (internal/bootstrap/node.js:542:27)
outline =     at Socket.<anonymous> (internal/bootstrap/node.js:274:15)
outline =     at Socket.emit (events.js:187:15)
outline =     at endReadableNT (_stream_readable.js:1091:14)
outline =     at process._tickCallback (internal/process/next_tick.js:174:19)
outline = [stdin]:1
outline = var ______________________________________________; throw 10
outline =                                                     ^
outline = 10
outline = [stdin]:1
outline = var ______________________________________________; throw 10
outline =                                                     ^
outline = 10
outline = done
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.

                                                     
=== release stdin_messages.js ===
Path: message/stdin_messages.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/stdin_messages.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/stdin_messages.js' ]
------zone(testZone):worker(0) is terminating------
[stdin]
[stdin]:1
with(this){__filename}
^^^^

SyntaxError: Strict mode code may not include a with statement
    at new Script (vm.js:74:7)
    at createScript (vm.js:246:10)
    at Object.runInThisContext (vm.js:298:10)
    at Object.<anonymous> ([stdin]-wrapper:6:22)
    at Module._compile (internal/modules/cjs/loader.js:678:30)
    at evalScript (internal/bootstrap/node.js:542:27)
    at Socket.<anonymous> (internal/bootstrap/node.js:274:15)
    at Socket.emit (events.js:187:15)
    at endReadableNT (_stream_readable.js:1091:14)
    at process._tickCallback (internal/process/next_tick.js:174:19)
42
42
[stdin]:1
throw new Error("hello")
^

Error: hello
    at [stdin]:1:7
    at Script.runInThisContext (vm.js:91:20)
    at Object.runInThisContext (vm.js:298:38)
    at Object.<anonymous> ([stdin]-wrapper:6:22)
    at Module._compile (internal/modules/cjs/loader.js:678:30)
    at evalScript (internal/bootstrap/node.js:542:27)
    at Socket.<anonymous> (internal/bootstrap/node.js:274:15)
    at Socket.emit (events.js:187:15)
    at endReadableNT (_stream_readable.js:1091:14)
    at process._tickCallback (internal/process/next_tick.js:174:19)
[stdin]:1
throw new Error("hello")
^

Error: hello
    at [stdin]:1:7
    at Script.runInThisContext (vm.js:91:20)
    at Object.runInThisContext (vm.js:298:38)
    at Object.<anonymous> ([stdin]-wrapper:6:22)
    at Module._compile (internal/modules/cjs/loader.js:678:30)
    at evalScript (internal/bootstrap/node.js:542:27)
    at Socket.<anonymous> (internal/bootstrap/node.js:274:15)
    at Socket.emit (events.js:187:15)
    at endReadableNT (_stream_readable.js:1091:14)
    at process._tickCallback (internal/process/next_tick.js:174:19)
100
[stdin]:1
var x = 100; y = x;
               ^

ReferenceError: y is not defined
    at [stdin]:1:16
    at Script.runInThisContext (vm.js:91:20)
    at Object.runInThisContext (vm.js:298:38)
    at Object.<anonymous> ([stdin]-wrapper:6:22)
    at Module._compile (internal/modules/cjs/loader.js:678:30)
    at evalScript (internal/bootstrap/node.js:542:27)
    at Socket.<anonymous> (internal/bootstrap/node.js:274:15)
    at Socket.emit (events.js:187:15)
    at endReadableNT (_stream_readable.js:1091:14)
    at process._tickCallback (internal/process/next_tick.js:174:19)

[stdin]:1
var ______________________________________________; throw 10
                                                    ^
10

[stdin]:1
var ______________________________________________; throw 10
                                                    ^
10
done
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/stdin_messages.js

                                                     
[20:06|%  92|+ 1722|- 242]: release throw_custom_error.js length differs.
expect=4
actual=10
patterns:
pattern = ^.*test.*message.*throw\_custom\_error\.js\:.*$
pattern = ^throw\ \(\{\ name\:\ \'MyCustomError\'\,\ message\:\ \'This\ is\ a\ custom\ message\'\ \}\)\;$
pattern = ^\^$
pattern = ^MyCustomError\:\ This\ is\ a\ custom\ message$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/throw_custom_error.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/throw_custom_error.js' ]
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = [object Object] Unhandled Rejection at Promise Promise { <rejected> '[object Object]' }

                                                         
=== release throw_custom_error.js ===
Path: message/throw_custom_error.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/throw_custom_error.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/throw_custom_error.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
[object Object] Unhandled Rejection at Promise Promise { <rejected> '[object Object]' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/throw_custom_error.js

                                                         
[20:06|%  92|+ 1722|- 243]: release throw_in_line_with_tabs.js length differs.
expect=5
actual=12
patterns:
pattern = ^before$
pattern = ^.*test.*message.*throw\_in\_line\_with\_tabs\.js\:.*$
pattern = ^\	throw\ \(\{\ foo\:\ \'bar\'\ \}\)\;$
pattern = ^\	\^$
pattern = ^\[object\ Object\]$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/throw_in_line_with_tabs.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/throw_in_line_with_tabs.js' ]
outline = ------zone(testZone):worker(0) is terminating------
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = before
outline = [object Object] Unhandled Rejection at Promise Promise { <rejected> '[object Object]' }

                                                              
=== release throw_in_line_with_tabs.js ===
Path: message/throw_in_line_with_tabs.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/throw_in_line_with_tabs.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/throw_in_line_with_tabs.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
before
[object Object] Unhandled Rejection at Promise Promise { <rejected> '[object Object]' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/throw_in_line_with_tabs.js

                                                              
[20:07|%  92|+ 1722|- 244]: release throw_non_error.js length differs.
expect=4
actual=10
patterns:
pattern = ^.*test.*message.*throw\_non\_error\.js\:.*$
pattern = ^throw\ \(\{\ foo\:\ \'bar\'\ \}\)\;$
pattern = ^\^$
pattern = ^\[object\ Object\]$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/throw_non_error.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/throw_non_error.js' ]
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = [object Object] Unhandled Rejection at Promise Promise { <rejected> '[object Object]' }

                                                      
=== release throw_non_error.js ===
Path: message/throw_non_error.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/throw_non_error.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/throw_non_error.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
[object Object] Unhandled Rejection at Promise Promise { <rejected> '[object Object]' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/throw_non_error.js

                                                      
[20:07|%  92|+ 1722|- 245]: release throw_null.js length differs.
expect=4
actual=10
patterns:
pattern = ^.*test.*message.*throw\_null\.js\:.*$
pattern = ^throw\ null\;$
pattern = ^\^$
pattern = ^null$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/throw_null.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/throw_null.js' ]
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = null Unhandled Rejection at Promise Promise { <rejected> 'null' }

                                                 
=== release throw_null.js ===
Path: message/throw_null.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/throw_null.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/throw_null.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
null Unhandled Rejection at Promise Promise { <rejected> 'null' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/throw_null.js

                                                 
[20:07|%  92|+ 1722|- 246]: release throw_undefined.js length differs.
expect=4
actual=10
patterns:
pattern = ^.*test.*message.*throw\_undefined\.js\:.*$
pattern = ^throw\ undefined\;$
pattern = ^\^$
pattern = ^undefined$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/throw_undefined.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/throw_undefined.js' ]
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = undefined Unhandled Rejection at Promise Promise { <rejected> 'undefined' }

                                                      
=== release throw_undefined.js ===
Path: message/throw_undefined.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/throw_undefined.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/throw_undefined.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
undefined Unhandled Rejection at Promise Promise { <rejected> 'undefined' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/throw_undefined.js

                                                      
[20:07|%  92|+ 1722|- 247]: release timeout_throw.js length differs.
expect=9
actual=19
patterns:
pattern = ^.*test.*message.*timeout\_throw\.js\:.*$
pattern = ^\ \ undefined\_reference\_error\_maker\;$
pattern = ^\ \ \^$
pattern = ^ReferenceError\:\ undefined\_reference\_error\_maker\ is\ not\ defined$
pattern = ^\ \ \ \ at\ Timeout\.\_onTimeout\ \(.*test.*message.*timeout\_throw\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ ontimeout\ \(timers\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ tryOnTimeout\ \(timers\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ listOnTimeout\ \(timers\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Timer\.processTimers\ \(timers\.js\:.*\:.*\)$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/timeout_throw.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/timeout_throw.js' ]
outline = ------zone(testZone):worker(0) is terminating------
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = /home/zhanglei/src/node/test/message/timeout_throw.js:27
outline =   undefined_reference_error_maker;
outline =   ^
outline = ReferenceError: undefined_reference_error_maker is not defined
outline =     at Timeout._onTimeout (/home/zhanglei/src/node/test/message/timeout_throw.js:27:3)
outline =     at ontimeout (timers.js:427:11)
outline =     at tryOnTimeout (timers.js:289:5)
outline =     at listOnTimeout (timers.js:252:5)
outline =     at Timer.processTimers (timers.js:212:10)

                                                    
=== release timeout_throw.js ===
Path: message/timeout_throw.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/timeout_throw.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/timeout_throw.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
/home/zhanglei/src/node/test/message/timeout_throw.js:27
  undefined_reference_error_maker;
  ^

ReferenceError: undefined_reference_error_maker is not defined
    at Timeout._onTimeout (/home/zhanglei/src/node/test/message/timeout_throw.js:27:3)
    at ontimeout (timers.js:427:11)
    at tryOnTimeout (timers.js:289:5)
    at listOnTimeout (timers.js:252:5)
    at Timer.processTimers (timers.js:212:10)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/timeout_throw.js

                                                    
[20:08|%  92|+ 1722|- 248]: release undefined_reference_in_new_context.js length differs.
expect=15
actual=11
patterns:
pattern = ^before$
pattern = ^evalmachine\.\<anonymous\>\:1$
pattern = ^foo\.bar\ \=\ 5\;$
pattern = ^\^$
pattern = ^ReferenceError\:\ foo\ is\ not\ defined$
pattern = ^\ \ \ \ at\ evalmachine\.\<anonymous\>\:1\:1$
pattern = ^\ \ \ \ at\ Script\.runInContext\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Script\.runInNewContext\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.runInNewContext\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(.*test.*message.*undefined\_reference\_in\_new\_context\.js\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ .*\.\.js\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ Module\.load\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ tryModuleLoad\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.\_load\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/undefined_reference_in_new_context.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/undefined_reference_in_new_context.js' ]
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = before
outline = ReferenceError: foo is not defined Unhandled Rejection at Promise Promise { <rejected> 'ReferenceError: foo is not defined' }

                                                                         
=== release undefined_reference_in_new_context.js ===
Path: message/undefined_reference_in_new_context.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/undefined_reference_in_new_context.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/undefined_reference_in_new_context.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
before
ReferenceError: foo is not defined Unhandled Rejection at Promise Promise { <rejected> 'ReferenceError: foo is not defined' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/undefined_reference_in_new_context.js

                                                                         
[20:08|%  92|+ 1722|- 249]: release unhandled_promise_trace_warnings.js length differs.
expect=42
actual=48
patterns:
pattern = ^\(node\:.*\)\ UnhandledPromiseRejectionWarning\:\ Error\:\ This\ was\ rejected$
pattern = ^\ \ \ \ at\ .*\ \(.*test.*message.*unhandled\_promise\_trace\_warnings\.js\:.*\)$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\(node\:.*\)\ Error\:\ This\ was\ rejected$
pattern = ^\ \ \ \ at\ .*\ \(.*test.*message.*unhandled\_promise\_trace\_warnings\.js\:.*\)$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\(node\:.*\)\ \[DEP0018\]\ DeprecationWarning\:\ Unhandled\ promise\ rejections\ are\ deprecated\.\ In\ the\ future\,\ promise\ rejections\ that\ are\ not\ handled\ will\ terminate\ the\ Node\.js\ process\ with\ a\ non\-zero\ exit\ code\.$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\(node\:.*\)\ PromiseRejectionHandledWarning\:\ Promise\ rejection\ was\ handled\ asynchronously\ \(rejection\ id\:\ 1\)$
pattern = ^\ \ \ \ at\ handledRejection\ \(internal\/process\/promises\.js\:.*\)$
pattern = ^\ \ \ \ at\ Promise\.then\ .*$
pattern = ^\ \ \ \ at\ Promise\.catch\ .*$
pattern = ^\ \ \ \ at\ Immediate\.setImmediate\ \(.*test.*message.*unhandled\_promise\_trace\_warnings\.js\:.*\)$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
pattern = ^\ \ \ \ at\ .*$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/unhandled_promise_trace_warnings.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/unhandled_promise_trace_warnings.js' ]
outline = ------zone(testZone):worker(0) is terminating------
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = (node:96607) UnhandledPromiseRejectionWarning: Error: This was rejected
outline =     at Object.<anonymous> (/home/zhanglei/src/node/test/message/unhandled_promise_trace_warnings.js:4:26)
outline =     at Module._compile (internal/modules/cjs/loader.js:678:30)
outline =     at Object.Module._extensions..js (internal/modules/cjs/loader.js:689:10)
outline =     at Module.load (internal/modules/cjs/loader.js:589:32)
outline =     at tryModuleLoad (internal/modules/cjs/loader.js:528:12)
outline =     at Function.Module._load (internal/modules/cjs/loader.js:520:3)
outline =     at Module.require (internal/modules/cjs/loader.js:626:17)
outline =     at require (internal/modules/cjs/helpers.js:20:18)
outline =     at eval (eval at callFunction (/home/zhanglei/src/napajs/lib/zone/function-call.js:90:17), <anonymous>:1:1)
outline =     at eval (<anonymous>)
outline =     at emitWarning (internal/process/promises.js:49:15)
outline =     at emitPromiseRejectionWarnings (internal/process/promises.js:105:9)
outline =     at process._tickCallback (internal/process/next_tick.js:179:42)
outline = (node:96607) Error: This was rejected
outline =     at Object.<anonymous> (/home/zhanglei/src/node/test/message/unhandled_promise_trace_warnings.js:4:26)
outline =     at Module._compile (internal/modules/cjs/loader.js:678:30)
outline =     at Object.Module._extensions..js (internal/modules/cjs/loader.js:689:10)
outline =     at Module.load (internal/modules/cjs/loader.js:589:32)
outline =     at tryModuleLoad (internal/modules/cjs/loader.js:528:12)
outline =     at Function.Module._load (internal/modules/cjs/loader.js:520:3)
outline =     at Module.require (internal/modules/cjs/loader.js:626:17)
outline =     at require (internal/modules/cjs/helpers.js:20:18)
outline =     at eval (eval at callFunction (/home/zhanglei/src/napajs/lib/zone/function-call.js:90:17), <anonymous>:1:1)
outline =     at eval (<anonymous>)
outline = (node:96607) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
outline =     at emitDeprecationWarning (internal/process/promises.js:80:13)
outline =     at emitWarning (internal/process/promises.js:73:3)
outline =     at emitPromiseRejectionWarnings (internal/process/promises.js:105:9)
outline =     at process._tickCallback (internal/process/next_tick.js:179:42)
outline = (node:96607) PromiseRejectionHandledWarning: Promise rejection was handled asynchronously (rejection id: 1)
outline =     at handledRejection (internal/process/promises.js:34:23)
outline =     at Promise.then (<anonymous>)
outline =     at Promise.catch (<anonymous>)
outline =     at Immediate.setImmediate (/home/zhanglei/src/node/test/message/unhandled_promise_trace_warnings.js:5:27)
outline =     at runCallback (timers.js:696:18)
outline =     at tryOnImmediate (timers.js:667:5)
outline =     at processImmediate (timers.js:649:5)

                                                                       
=== release unhandled_promise_trace_warnings.js ===
Path: message/unhandled_promise_trace_warnings.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/unhandled_promise_trace_warnings.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/unhandled_promise_trace_warnings.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
(node:96607) UnhandledPromiseRejectionWarning: Error: This was rejected
    at Object.<anonymous> (/home/zhanglei/src/node/test/message/unhandled_promise_trace_warnings.js:4:26)
    at Module._compile (internal/modules/cjs/loader.js:678:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:689:10)
    at Module.load (internal/modules/cjs/loader.js:589:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:528:12)
    at Function.Module._load (internal/modules/cjs/loader.js:520:3)
    at Module.require (internal/modules/cjs/loader.js:626:17)
    at require (internal/modules/cjs/helpers.js:20:18)
    at eval (eval at callFunction (/home/zhanglei/src/napajs/lib/zone/function-call.js:90:17), <anonymous>:1:1)
    at eval (<anonymous>)
    at emitWarning (internal/process/promises.js:49:15)
    at emitPromiseRejectionWarnings (internal/process/promises.js:105:9)
    at process._tickCallback (internal/process/next_tick.js:179:42)
(node:96607) Error: This was rejected
    at Object.<anonymous> (/home/zhanglei/src/node/test/message/unhandled_promise_trace_warnings.js:4:26)
    at Module._compile (internal/modules/cjs/loader.js:678:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:689:10)
    at Module.load (internal/modules/cjs/loader.js:589:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:528:12)
    at Function.Module._load (internal/modules/cjs/loader.js:520:3)
    at Module.require (internal/modules/cjs/loader.js:626:17)
    at require (internal/modules/cjs/helpers.js:20:18)
    at eval (eval at callFunction (/home/zhanglei/src/napajs/lib/zone/function-call.js:90:17), <anonymous>:1:1)
    at eval (<anonymous>)
(node:96607) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
    at emitDeprecationWarning (internal/process/promises.js:80:13)
    at emitWarning (internal/process/promises.js:73:3)
    at emitPromiseRejectionWarnings (internal/process/promises.js:105:9)
    at process._tickCallback (internal/process/next_tick.js:179:42)
(node:96607) PromiseRejectionHandledWarning: Promise rejection was handled asynchronously (rejection id: 1)
    at handledRejection (internal/process/promises.js:34:23)
    at Promise.then (<anonymous>)
    at Promise.catch (<anonymous>)
    at Immediate.setImmediate (/home/zhanglei/src/node/test/message/unhandled_promise_trace_warnings.js:5:27)
    at runCallback (timers.js:696:18)
    at tryOnImmediate (timers.js:667:5)
    at processImmediate (timers.js:649:5)
Command: out/Release/node --trace-warnings /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/unhandled_promise_trace_warnings.js

                                                                       
[20:08|%  92|+ 1722|- 250]: release vm_caught_custom_runtime_error.js length differs.
expect=3
actual=13
patterns:
pattern = ^beginning$
pattern = ^received\ error\ MyCustomError$
pattern = ^end$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/vm_caught_custom_runtime_error.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/vm_caught_custom_runtime_error.js' ]
outline = ------zone(testZone):worker(0) is terminating------
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = beginning
outline = received error MyCustomError
outline = end

                                                                     
=== release vm_caught_custom_runtime_error.js ===
Path: message/vm_caught_custom_runtime_error.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/vm_caught_custom_runtime_error.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/vm_caught_custom_runtime_error.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
beginning
received error MyCustomError
end
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/vm_caught_custom_runtime_error.js

                                                                     
[20:09|%  92|+ 1722|- 251]: release vm_display_runtime_error.js length differs.
expect=29
actual=25
patterns:
pattern = ^beginning$
pattern = ^test\.vm\:1$
pattern = ^throw\ new\ Error\(\"boo\!\"\)$
pattern = ^\^$
pattern = ^Error\:\ boo\!$
pattern = ^\ \ \ \ at\ test\.vm\:1\:7$
pattern = ^\ \ \ \ at\ Script\.runInThisContext\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.runInThisContext\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(.*test.*message.*vm\_display\_runtime\_error\.js\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.Module\.\_extensions\.\.js\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ Module\.load\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ tryModuleLoad\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.\_load\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.runMain\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^test\.vm\:1$
pattern = ^throw\ new\ Error\(\"spooky\!\"\)$
pattern = ^\^$
pattern = ^Error\:\ spooky\!$
pattern = ^\ \ \ \ at\ test\.vm\:1\:7$
pattern = ^\ \ \ \ at\ Script\.runInThisContext\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.runInThisContext\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(.*test.*message.*vm\_display\_runtime\_error\.js\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.Module\.\_extensions\.\.js\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ Module\.load\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ tryModuleLoad\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.\_load\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.runMain\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/vm_display_runtime_error.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/vm_display_runtime_error.js' ]
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = beginning
outline = test.vm:1
outline = throw new Error("boo!")
outline = ^
outline = Error: boo!
outline =     at test.vm:1:7
outline =     at Script.runInThisContext (vm.js:91:20)
outline =     at Object.runInThisContext (vm.js:298:38)
outline =     at Object.<anonymous> (/home/zhanglei/src/node/test/message/vm_display_runtime_error.js:29:6)
outline =     at Module._compile (internal/modules/cjs/loader.js:678:30)
outline =     at Object.Module._extensions..js (internal/modules/cjs/loader.js:689:10)
outline =     at Module.load (internal/modules/cjs/loader.js:589:32)
outline =     at tryModuleLoad (internal/modules/cjs/loader.js:528:12)
outline =     at Function.Module._load (internal/modules/cjs/loader.js:520:3)
outline =     at Module.require (internal/modules/cjs/loader.js:626:17)
outline = Error: spooky! Unhandled Rejection at Promise Promise { <rejected> 'Error: spooky!' }

                                                               
=== release vm_display_runtime_error.js ===
Path: message/vm_display_runtime_error.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/vm_display_runtime_error.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/vm_display_runtime_error.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
beginning
test.vm:1
throw new Error("boo!")
^

Error: boo!
    at test.vm:1:7
    at Script.runInThisContext (vm.js:91:20)
    at Object.runInThisContext (vm.js:298:38)
    at Object.<anonymous> (/home/zhanglei/src/node/test/message/vm_display_runtime_error.js:29:6)
    at Module._compile (internal/modules/cjs/loader.js:678:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:689:10)
    at Module.load (internal/modules/cjs/loader.js:589:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:528:12)
    at Function.Module._load (internal/modules/cjs/loader.js:520:3)
    at Module.require (internal/modules/cjs/loader.js:626:17)
Error: spooky! Unhandled Rejection at Promise Promise { <rejected> 'Error: spooky!' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/vm_display_runtime_error.js

                                                               
[20:09|%  92|+ 1722|- 252]: release vm_display_syntax_error.js length differs.
expect=29
actual=25
patterns:
pattern = ^beginning$
pattern = ^foo\.vm\:1$
pattern = ^var\ 4\;$
pattern = ^\ \ \ \ \^$
pattern = ^SyntaxError\:\ Unexpected\ number$
pattern = ^\ \ \ \ at\ new\ Script\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ createScript\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.runInThisContext\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(.*test.*message.*vm\_display\_syntax\_error\.js\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.Module\.\_extensions\.\.js\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ Module\.load\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ tryModuleLoad\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.\_load\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.runMain\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^test\.vm\:1$
pattern = ^var\ 5\;$
pattern = ^\ \ \ \ \^$
pattern = ^SyntaxError\:\ Unexpected\ number$
pattern = ^\ \ \ \ at\ new\ Script\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ createScript\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.runInThisContext\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(.*test.*message.*vm\_display\_syntax\_error\.js\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.Module\.\_extensions\.\.js\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ Module\.load\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ tryModuleLoad\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.\_load\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.runMain\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/vm_display_syntax_error.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/vm_display_syntax_error.js' ]
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = beginning
outline = foo.vm:1
outline = var 4;
outline =     ^
outline = SyntaxError: Unexpected number
outline =     at new Script (vm.js:74:7)
outline =     at createScript (vm.js:246:10)
outline =     at Object.runInThisContext (vm.js:298:10)
outline =     at Object.<anonymous> (/home/zhanglei/src/node/test/message/vm_display_syntax_error.js:29:6)
outline =     at Module._compile (internal/modules/cjs/loader.js:678:30)
outline =     at Object.Module._extensions..js (internal/modules/cjs/loader.js:689:10)
outline =     at Module.load (internal/modules/cjs/loader.js:589:32)
outline =     at tryModuleLoad (internal/modules/cjs/loader.js:528:12)
outline =     at Function.Module._load (internal/modules/cjs/loader.js:520:3)
outline =     at Module.require (internal/modules/cjs/loader.js:626:17)
outline = SyntaxError: Unexpected number Unhandled Rejection at Promise Promise { <rejected> 'SyntaxError: Unexpected number' }

                                                              
=== release vm_display_syntax_error.js ===
Path: message/vm_display_syntax_error.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/vm_display_syntax_error.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/vm_display_syntax_error.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
beginning
foo.vm:1
var 4;
    ^

SyntaxError: Unexpected number
    at new Script (vm.js:74:7)
    at createScript (vm.js:246:10)
    at Object.runInThisContext (vm.js:298:10)
    at Object.<anonymous> (/home/zhanglei/src/node/test/message/vm_display_syntax_error.js:29:6)
    at Module._compile (internal/modules/cjs/loader.js:678:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:689:10)
    at Module.load (internal/modules/cjs/loader.js:589:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:528:12)
    at Function.Module._load (internal/modules/cjs/loader.js:520:3)
    at Module.require (internal/modules/cjs/loader.js:626:17)
SyntaxError: Unexpected number Unhandled Rejection at Promise Promise { <rejected> 'SyntaxError: Unexpected number' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/vm_display_syntax_error.js

                                                              
[20:09|%  92|+ 1722|- 253]: release vm_dont_display_runtime_error.js length differs.
expect=16
actual=12
patterns:
pattern = ^beginning$
pattern = ^middle$
pattern = ^test\.vm\:1$
pattern = ^throw\ new\ Error\(\"boo\!\"\)$
pattern = ^\^$
pattern = ^Error\:\ boo\!$
pattern = ^\ \ \ \ at\ test\.vm\:1\:7$
pattern = ^\ \ \ \ at\ Script\.runInThisContext\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.runInThisContext\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(.*test.*message.*vm\_dont\_display\_runtime\_error\.js\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.Module\.\_extensions\.\.js\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ Module\.load\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ tryModuleLoad\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.\_load\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.runMain\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/vm_dont_display_runtime_error.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/vm_dont_display_runtime_error.js' ]
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = beginning
outline = middle
outline = Error: boo! Unhandled Rejection at Promise Promise { <rejected> 'Error: boo!' }

                                                                    
=== release vm_dont_display_runtime_error.js ===
Path: message/vm_dont_display_runtime_error.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/vm_dont_display_runtime_error.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/vm_dont_display_runtime_error.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
beginning
middle
Error: boo! Unhandled Rejection at Promise Promise { <rejected> 'Error: boo!' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/vm_dont_display_runtime_error.js

                                                                    
[20:10|%  92|+ 1722|- 254]: release vm_dont_display_syntax_error.js length differs.
expect=16
actual=12
patterns:
pattern = ^beginning$
pattern = ^middle$
pattern = ^test\.vm\:1$
pattern = ^var\ 5\;$
pattern = ^\ \ \ \ \^$
pattern = ^SyntaxError\:\ Unexpected\ number$
pattern = ^\ \ \ \ at\ new\ Script\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ createScript\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.runInThisContext\ \(vm\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.\<anonymous\>\ \(.*test.*message.*vm\_dont\_display\_syntax\_error\.js\:.*\)$
pattern = ^\ \ \ \ at\ Module\.\_compile\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ Object\.Module\.\_extensions\.\.js\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ Module\.load\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ tryModuleLoad\ \(internal\/modules\/cjs\/loader\.js\:.*\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.\_load\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
pattern = ^\ \ \ \ at\ Function\.Module\.runMain\ \(internal\/modules\/cjs\/loader\.js\:.*\)$
outlines:
outline = ------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/vm_dont_display_syntax_error.js
outline = Using NODE_WORKER_TEST_WORKER_COUNT= 1
outline = ------zone(testZone):worker(0) is initializing------
outline = ------zone(testZone):worker(0) is initialized------
outline = ------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/vm_dont_display_syntax_error.js' ]
outline = WARN napajs binding Thanks for using Napa.js.
outline = WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
outline = WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
outline = WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
outline = beginning
outline = middle
outline = SyntaxError: Unexpected number Unhandled Rejection at Promise Promise { <rejected> 'SyntaxError: Unexpected number' }

                                                                   
=== release vm_dont_display_syntax_error.js ===
Path: message/vm_dont_display_syntax_error.js
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/message/vm_dont_display_syntax_error.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/message/vm_dont_display_syntax_error.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
beginning
middle
SyntaxError: Unexpected number Unhandled Rejection at Promise Promise { <rejected> 'SyntaxError: Unexpected number' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/message/vm_dont_display_syntax_error.js

                                                                   
[20:10|%  92|+ 1722|- 255]: release test-abort-backtrace 
                                                        
[20:10|%  92|+ 1723|- 255]: release test-abort-uncaught-exception 
                                                                 
[20:11|%  92|+ 1724|- 255]: release test-http-parser-consume 
                                                            
[20:12|%  92|+ 1725|- 255]: release test-process-abort-exitcode 
                                                               
[20:12|%  92|+ 1726|- 255]: release test-zlib-invalid-internals-usage 
                                                                     
[20:13|%  92|+ 1727|- 255]: release test-cwd-enoent-file 
                                                        
[20:13|%  92|+ 1728|- 255]: release test-dgram-bind-shared-ports-after-port... 
                                                                              
=== release test-dgram-bind-shared-ports-after-port-0 [negative] ===
Path: known_issues/test-dgram-bind-shared-ports-after-port-0
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/known_issues/test-dgram-bind-shared-ports-after-port-0.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/known_issues/test-dgram-bind-shared-ports-after-port-0.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/known_issues/test-dgram-bind-shared-ports-after-port-0.js

                                                                              
[20:14|%  93|+ 1728|- 256]: release test-http-path-contains-unicode 
                                                                   
[20:14|%  93|+ 1729|- 256]: release test-inspector-cluster-port-clash 
                                                                     
[20:14|%  93|+ 1730|- 256]: release test-module-deleted-extensions 
                                                                  
[20:15|%  93|+ 1731|- 256]: release test-path-parse-6229 
                                                        
[20:15|%  93|+ 1732|- 256]: release test-repl-require-context 
                                                             
=== release test-repl-require-context [negative] ===
Path: known_issues/test-repl-require-context
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/known_issues/test-repl-require-context.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/known_issues/test-repl-require-context.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[96808]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x564da7215048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x564da72e2869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x267ae448427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/known_issues/test-repl-require-context.js
--- CRASHED (Signal: 6) ---

                                                             
[20:15|%  93|+ 1732|- 257]: release test-stdin-is-always-net.socket 
                                                                   
=== release test-stdin-is-always-net.socket [negative] ===
Path: known_issues/test-stdin-is-always-net.socket
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/known_issues/test-stdin-is-always-net.socket.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/known_issues/test-stdin-is-always-net.socket.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/known_issues/test-stdin-is-always-net.socket.js

                                                                   
[20:16|%  93|+ 1732|- 258]: release test-url-parse-conformance 
                                                              
[20:16|%  93|+ 1733|- 258]: release test-vm-ownkeys 
                                                   
[20:17|%  93|+ 1734|- 258]: release test-vm-ownpropertynames 
                                                            
[20:17|%  93|+ 1735|- 258]: release test-vm-ownpropertysymbols 
                                                              
[20:17|%  93|+ 1736|- 258]: release test-esm-basic-imports 
                                                          
=== release test-esm-basic-imports ===
Path: es-module/test-esm-basic-imports
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/es-module/test-esm-basic-imports.mjs
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/es-module/test-esm-basic-imports.mjs' ]
(node:96864) ExperimentalWarning: The ESM module loader is experimental.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
(node:96864) ExperimentalWarning: The ESM module loader is experimental.
Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-basic-imports.mjs Unhandled Rejection at Promise Promise {
  <rejected> 'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-basic-imports.mjs' }
Command: out/Release/node --experimental-modules /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/es-module/test-esm-basic-imports.mjs

                                                          
[20:18|%  93|+ 1736|- 259]: release test-esm-cyclic-dynamic-import 
                                                                  
[20:18|%  93|+ 1737|- 259]: release test-esm-double-encoding 
                                                            
=== release test-esm-double-encoding ===
Path: es-module/test-esm-double-encoding
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/es-module/test-esm-double-encoding.mjs
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/es-module/test-esm-double-encoding.mjs' ]
(node:96880) ExperimentalWarning: The ESM module loader is experimental.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
(node:96880) ExperimentalWarning: The ESM module loader is experimental.
Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-double-encoding.mjs Unhandled Rejection at Promise Promise {
  <rejected> 'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-double-encoding.mjs' }
Command: out/Release/node --experimental-modules /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/es-module/test-esm-double-encoding.mjs

                                                            
[20:18|%  93|+ 1737|- 260]: release test-esm-dynamic-import 
                                                           
[20:19|%  93|+ 1738|- 260]: release test-esm-encoded-path 
                                                         
=== release test-esm-encoded-path ===
Path: es-module/test-esm-encoded-path
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/es-module/test-esm-encoded-path.mjs
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/es-module/test-esm-encoded-path.mjs' ]
(node:96900) ExperimentalWarning: The ESM module loader is experimental.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
(node:96900) ExperimentalWarning: The ESM module loader is experimental.
Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-encoded-path.mjs Unhandled Rejection at Promise Promise {
  <rejected> 'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-encoded-path.mjs' }
Command: out/Release/node --experimental-modules /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/es-module/test-esm-encoded-path.mjs

                                                         
[20:19|%  93|+ 1738|- 261]: release test-esm-encoded-path-native 
                                                                
[20:19|%  93|+ 1739|- 261]: release test-esm-example-loader 
                                                           
=== release test-esm-example-loader ===
Path: es-module/test-esm-example-loader
(node:96926) ExperimentalWarning: The ESM module loader is experimental.
ReferenceError: require is not defined
    at file:///home/zhanglei/src/napajs/node-test-wrapper.js:3:10
    at ModuleJob.run (internal/modules/esm/module_job.js:106:14)
Command: out/Release/node --experimental-modules --loader ./test/fixtures/es-module-loaders/example-loader.mjs /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/es-module/test-esm-example-loader.js

                                                           
[20:20|%  93|+ 1739|- 262]: release test-esm-forbidden-globals 
                                                              
=== release test-esm-forbidden-globals ===
Path: es-module/test-esm-forbidden-globals
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/es-module/test-esm-forbidden-globals.mjs
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/es-module/test-esm-forbidden-globals.mjs' ]
(node:96936) ExperimentalWarning: The ESM module loader is experimental.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
(node:96936) ExperimentalWarning: The ESM module loader is experimental.
Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-forbidden-globals.mjs Unhandled Rejection at Promise Promise {
  <rejected> 'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-forbidden-globals.mjs' }
Command: out/Release/node --experimental-modules /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/es-module/test-esm-forbidden-globals.mjs

                                                              
[20:20|%  93|+ 1739|- 263]: release test-esm-import-meta 
                                                        
=== release test-esm-import-meta ===
Path: es-module/test-esm-import-meta
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/es-module/test-esm-import-meta.mjs
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/es-module/test-esm-import-meta.mjs' ]
(node:96944) ExperimentalWarning: The ESM module loader is experimental.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
(node:96944) ExperimentalWarning: The ESM module loader is experimental.
Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-import-meta.mjs Unhandled Rejection at Promise Promise {
  <rejected> 'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-import-meta.mjs' }
Command: out/Release/node --experimental-modules /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/es-module/test-esm-import-meta.mjs

                                                        
[20:20|%  93|+ 1739|- 264]: release test-esm-json 
                                                 
=== release test-esm-json ===
Path: es-module/test-esm-json
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/es-module/test-esm-json.mjs
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/es-module/test-esm-json.mjs' ]
(node:96952) ExperimentalWarning: The ESM module loader is experimental.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
(node:96952) ExperimentalWarning: The ESM module loader is experimental.
Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-json.mjs Unhandled Rejection at Promise Promise {
  <rejected> 'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-json.mjs' }
Command: out/Release/node --experimental-modules /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/es-module/test-esm-json.mjs

                                                 
[20:21|%  93|+ 1739|- 265]: release test-esm-loader-dependency 
                                                              
=== release test-esm-loader-dependency ===
Path: es-module/test-esm-loader-dependency
(node:96960) ExperimentalWarning: The ESM module loader is experimental.
ReferenceError: require is not defined
    at file:///home/zhanglei/src/napajs/node-test-wrapper.js:3:10
    at ModuleJob.run (internal/modules/esm/module_job.js:106:14)
Command: out/Release/node --experimental-modules --loader ./test/fixtures/es-module-loaders/loader-with-dep.mjs /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/es-module/test-esm-loader-dependency.mjs

                                                              
[20:21|%  93|+ 1739|- 266]: release test-esm-loader-modulemap 
                                                             
[20:21|%  94|+ 1740|- 266]: release test-esm-loader-search 
                                                          
[20:21|%  94|+ 1741|- 266]: release test-esm-main-lookup 
                                                        
=== release test-esm-main-lookup ===
Path: es-module/test-esm-main-lookup
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/es-module/test-esm-main-lookup.mjs
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/es-module/test-esm-main-lookup.mjs' ]
(node:96986) ExperimentalWarning: The ESM module loader is experimental.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
(node:96986) ExperimentalWarning: The ESM module loader is experimental.
Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-main-lookup.mjs Unhandled Rejection at Promise Promise {
  <rejected> 'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-main-lookup.mjs' }
Command: out/Release/node --experimental-modules /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/es-module/test-esm-main-lookup.mjs

                                                        
[20:22|%  94|+ 1741|- 267]: release test-esm-named-exports 
                                                          
[20:22|%  94|+ 1742|- 267]: release test-esm-namespace 
                                                      
=== release test-esm-namespace ===
Path: es-module/test-esm-namespace
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/es-module/test-esm-namespace.mjs
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/es-module/test-esm-namespace.mjs' ]
(node:97006) ExperimentalWarning: The ESM module loader is experimental.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
(node:97006) ExperimentalWarning: The ESM module loader is experimental.
Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-namespace.mjs Unhandled Rejection at Promise Promise {
  <rejected> 'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-namespace.mjs' }
Command: out/Release/node --experimental-modules /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/es-module/test-esm-namespace.mjs

                                                      
[20:22|%  94|+ 1742|- 268]: release test-esm-preserve-symlinks 
                                                              
[20:23|%  94|+ 1743|- 268]: release test-esm-preserve-symlinks-not-found 
                                                                        
[20:23|%  94|+ 1744|- 268]: release test-esm-preserve-symlinks-not-found-pl... 
                                                                              
[20:23|%  94|+ 1745|- 268]: release test-esm-require-cache 
                                                          
=== release test-esm-require-cache ===
Path: es-module/test-esm-require-cache
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/es-module/test-esm-require-cache.mjs
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/es-module/test-esm-require-cache.mjs' ]
(node:97052) ExperimentalWarning: The ESM module loader is experimental.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
(node:97052) ExperimentalWarning: The ESM module loader is experimental.
Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-require-cache.mjs Unhandled Rejection at Promise Promise {
  <rejected> 'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-require-cache.mjs' }
Command: out/Release/node --experimental-modules /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/es-module/test-esm-require-cache.mjs

                                                          
[20:23|%  94|+ 1745|- 269]: release test-esm-resolve-hook 
                                                         
=== release test-esm-resolve-hook ===
Path: es-module/test-esm-resolve-hook
(node:97060) ExperimentalWarning: The ESM module loader is experimental.
ReferenceError: require is not defined
    at file:///home/zhanglei/src/napajs/node-test-wrapper.js:3:10
    at ModuleJob.run (internal/modules/esm/module_job.js:106:14)
Command: out/Release/node --experimental-modules --loader ./test/fixtures/es-module-loaders/js-loader.mjs /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/es-module/test-esm-resolve-hook.mjs

                                                         
[20:23|%  94|+ 1745|- 270]: release test-esm-shared-loader-dep 
                                                              
[20:24|%  94|+ 1746|- 270]: release test-esm-shebang 
                                                    
=== release test-esm-shebang ===
Path: es-module/test-esm-shebang
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/es-module/test-esm-shebang.mjs
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/es-module/test-esm-shebang.mjs' ]
(node:97082) ExperimentalWarning: The ESM module loader is experimental.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
(node:97082) ExperimentalWarning: The ESM module loader is experimental.
Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-shebang.mjs Unhandled Rejection at Promise Promise {
  <rejected> 'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-shebang.mjs' }
Command: out/Release/node --experimental-modules /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/es-module/test-esm-shebang.mjs

                                                    
[20:24|%  94|+ 1746|- 271]: release test-esm-snapshot 
                                                     
=== release test-esm-snapshot ===
Path: es-module/test-esm-snapshot
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/es-module/test-esm-snapshot.mjs
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/es-module/test-esm-snapshot.mjs' ]
(node:97090) ExperimentalWarning: The ESM module loader is experimental.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
(node:97090) ExperimentalWarning: The ESM module loader is experimental.
Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-snapshot.mjs Unhandled Rejection at Promise Promise {
  <rejected> 'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-snapshot.mjs' }
Command: out/Release/node --experimental-modules /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/es-module/test-esm-snapshot.mjs

                                                     
[20:24|%  94|+ 1746|- 272]: release test-esm-symlink 
                                                    
[20:25|%  94|+ 1747|- 272]: release test-esm-symlink-main 
                                                         
[20:25|%  94|+ 1748|- 272]: release test-esm-throw-undefined 
                                                            
=== release test-esm-throw-undefined ===
Path: es-module/test-esm-throw-undefined
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/es-module/test-esm-throw-undefined.mjs
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/es-module/test-esm-throw-undefined.mjs' ]
(node:97134) ExperimentalWarning: The ESM module loader is experimental.
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
(node:97134) ExperimentalWarning: The ESM module loader is experimental.
Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-throw-undefined.mjs Unhandled Rejection at Promise Promise {
  <rejected> 'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /home/zhanglei/src/node/test/es-module/test-esm-throw-undefined.mjs' }
Command: out/Release/node --experimental-modules /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/es-module/test-esm-throw-undefined.mjs

                                                            
[20:25|%  94|+ 1748|- 273]: release test-async-wrap-getasyncid 
                                                              
=== release test-async-wrap-getasyncid ===
Path: sequential/test-async-wrap-getasyncid
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/sequential/test-async-wrap-getasyncid.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/sequential/test-async-wrap-getasyncid.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[97142]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x555cf68f6048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x555cf69c3869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x343c748427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/sequential/test-async-wrap-getasyncid.js
--- CRASHED (Signal: 6) ---

                                                              
[20:26|%  94|+ 1748|- 274]: release test-benchmark-buffer 
                                                         
[20:30|%  94|+ 1749|- 274]: release test-benchmark-child-process 
                                                                
[20:31|%  94|+ 1750|- 274]: release test-benchmark-http 
                                                       
[20:34|%  94|+ 1751|- 274]: release test-benchmark-net 
                                                      
[20:35|%  94|+ 1752|- 274]: release test-benchmark-tls 
                                                      
[20:36|%  95|+ 1753|- 274]: release test-buffer-creation-regression 
                                                                   
[20:37|%  95|+ 1754|- 274]: release test-child-process-emfile 
                                                             
[20:37|%  95|+ 1755|- 274]: release test-child-process-execsync 
                                                               
[20:38|%  95|+ 1756|- 274]: release test-child-process-exit 
                                                           
[20:39|%  95|+ 1757|- 274]: release test-child-process-fork-getconnections 
                                                                          
=== release test-child-process-fork-getconnections ===
Path: sequential/test-child-process-fork-getconnections
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/sequential/test-child-process-fork-getconnections.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/sequential/test-child-process-fork-getconnections.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
/home/zhanglei/src/node/test/sequential/test-child-process-fork-getconnections.js:62
      throw new Error('child died unexpectedly!');
      ^

Error: child died unexpectedly!
    at ChildProcess.<anonymous> (/home/zhanglei/src/node/test/sequential/test-child-process-fork-getconnections.js:62:13)
    at ChildProcess.emit (events.js:187:15)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/sequential/test-child-process-fork-getconnections.js

                                                                          
[20:39|%  95|+ 1757|- 275]: release test-child-process-pass-fd 
                                                              
[20:46|%  95|+ 1758|- 275]: release test-cluster-inspect-brk 
                                                            
[20:46|%  95|+ 1759|- 275]: release test-cluster-send-handle-large-payload 
                                                                          
=== release test-cluster-send-handle-large-payload ===
Path: sequential/test-cluster-send-handle-large-payload
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/sequential/test-cluster-send-handle-large-payload.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/sequential/test-cluster-send-handle-large-payload.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/sequential/test-cluster-send-handle-large-payload.js
--- TIMEOUT ---

                                                                          
[22:46|%  95|+ 1759|- 276]: release test-crypto-timing-safe-equal 
                                                                 
[22:46|%  95|+ 1760|- 276]: release test-debug-prompt 
                                                     
[22:47|%  95|+ 1761|- 276]: release test-debugger-debug-brk 
                                                           
[22:49|%  95|+ 1762|- 276]: release test-debugger-repeat-last 
                                                             
[22:50|%  95|+ 1763|- 276]: release test-deprecation-flags 
                                                          
[22:50|%  95|+ 1764|- 276]: release test-dgram-bind-shared-ports 
                                                                
=== release test-dgram-bind-shared-ports ===
Path: sequential/test-dgram-bind-shared-ports
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/sequential/test-dgram-bind-shared-ports.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/sequential/test-dgram-bind-shared-ports.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 1
+ 0
    at Worker.worker1.on.common.mustCall (/home/zhanglei/src/node/test/sequential/test-dgram-bind-shared-ports.js:66:12)
    at Worker.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at Worker.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:193:12)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/sequential/test-dgram-bind-shared-ports.js

                                                                
[22:51|%  95|+ 1764|- 277]: release test-dgram-implicit-bind-failure 
                                                                    
[22:51|%  95|+ 1765|- 277]: release test-dgram-pingpong 
                                                       
[22:52|%  95|+ 1766|- 277]: release test-fs-readfile-tostring-fail 
                                                                  
[22:55|%  95|+ 1767|- 277]: release test-fs-stat-sync-overflow 
                                                              
[22:55|%  95|+ 1768|- 277]: release test-fs-watch 
                                                 
[22:56|%  95|+ 1769|- 277]: release test-fs-watch-file-enoent-after-deletio... 
                                                                              
[22:56|%  95|+ 1770|- 277]: release test-http-econnrefused 
                                                          
[22:57|%  96|+ 1771|- 277]: release test-http-keep-alive-large-write 
                                                                    
[22:57|%  96|+ 1772|- 277]: release test-http-keepalive-maxsockets 
                                                                  
[22:57|%  96|+ 1773|- 277]: release test-http-max-sockets 
                                                         
[22:58|%  96|+ 1774|- 277]: release test-http-regr-gh-2928 
                                                          
[22:59|%  96|+ 1775|- 277]: release test-http-server-consumed-timeout 
                                                                     
[22:59|%  96|+ 1776|- 277]: release test-http-server-keep-alive-timeout-slo... 
                                                                              
[23:00|%  96|+ 1777|- 277]: release test-http-server-keep-alive-timeout-slo... 
                                                                              
[23:01|%  96|+ 1778|- 277]: release test-http2-max-session-memory 
                                                                 
[23:02|%  96|+ 1779|- 277]: release test-http2-ping-flood 
                                                         
[23:02|%  96|+ 1780|- 277]: release test-http2-session-timeout 
                                                              
[23:03|%  96|+ 1781|- 277]: release test-http2-settings-flood 
                                                             
[23:04|%  96|+ 1782|- 277]: release test-http2-timeout-large-write 
                                                                  
[23:07|%  96|+ 1783|- 277]: release test-http2-timeout-large-write-file 
                                                                       
[23:10|%  96|+ 1784|- 277]: release test-https-keep-alive-large-write 
                                                                     
[23:10|%  96|+ 1785|- 277]: release test-https-server-keep-alive-timeout 
                                                                        
[23:11|%  96|+ 1786|- 277]: release test-init 
                                             
[23:12|%  96|+ 1787|- 277]: release test-inspector 
                                                  
[23:13|%  96|+ 1788|- 277]: release test-inspector-async-call-stack 
                                                                   
=== release test-inspector-async-call-stack ===
Path: sequential/test-inspector-async-call-stack
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/sequential/test-inspector-async-call-stack.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/sequential/test-inspector-async-call-stack.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[99456]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x5652341af048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x56523427c869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x2751caa8427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/sequential/test-inspector-async-call-stack.js
--- CRASHED (Signal: 6) ---

                                                                   
[23:13|%  96|+ 1788|- 278]: release test-inspector-async-call-stack-abort 
                                                                         
[23:14|%  96|+ 1789|- 278]: release test-inspector-async-hook-setup-at-insp... 
                                                                              
[23:14|%  96|+ 1790|- 278]: release test-inspector-async-hook-setup-at-sign... 
                                                                              
[23:15|%  96|+ 1791|- 278]: release test-inspector-async-stack-traces-promi... 
                                                                              
[23:16|%  97|+ 1792|- 278]: release test-inspector-async-stack-traces-set-i... 
                                                                              
[23:16|%  97|+ 1793|- 278]: release test-inspector-bindings 
                                                           
=== release test-inspector-bindings ===
Path: sequential/test-inspector-bindings
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/sequential/test-inspector-bindings.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/sequential/test-inspector-bindings.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[99555]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55e290f86048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55e291053869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x454d178427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/sequential/test-inspector-bindings.js
--- CRASHED (Signal: 6) ---

                                                           
[23:16|%  97|+ 1793|- 279]: release test-inspector-break-e 
                                                          
[23:17|%  97|+ 1794|- 279]: release test-inspector-break-when-eval 
                                                                  
[23:18|%  97|+ 1795|- 279]: release test-inspector-contexts 
                                                           
=== release test-inspector-contexts ===
Path: sequential/test-inspector-contexts
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/sequential/test-inspector-contexts.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/sequential/test-inspector-contexts.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[99602]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55e5bdb8d048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55e5bdc5a869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x33da1628427d
Command: out/Release/node --expose-gc /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/sequential/test-inspector-contexts.js
--- CRASHED (Signal: 6) ---

                                                           
[23:18|%  97|+ 1795|- 280]: release test-inspector-debug-brk-flag 
                                                                 
[23:19|%  97|+ 1796|- 280]: release test-inspector-debug-end 
                                                            
[23:20|%  97|+ 1797|- 280]: release test-inspector-enabled 
                                                          
=== release test-inspector-enabled ===
Path: sequential/test-inspector-enabled
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/sequential/test-inspector-enabled.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/sequential/test-inspector-enabled.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Debugger listening on ws://127.0.0.1:9229/d023070b-4f4f-47ad-a962-b8b51881a39c
For help, see: https://nodejs.org/en/docs/inspector
out/Release/node[99663]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55ebd2858048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55ebd28591d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55ebd2ad7bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x2c914778427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/sequential/test-inspector-enabled.js
--- CRASHED (Signal: 6) ---

                                                          
[23:20|%  97|+ 1797|- 281]: release test-inspector-exception 
                                                            
[23:21|%  97|+ 1798|- 281]: release test-inspector-invalid-args 
                                                               
[23:21|%  97|+ 1799|- 281]: release test-inspector-ip-detection 
                                                               
[23:22|%  97|+ 1800|- 281]: release test-inspector-module 
                                                         
=== release test-inspector-module ===
Path: sequential/test-inspector-module
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/sequential/test-inspector-module.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/sequential/test-inspector-module.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[99733]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x5633d90db048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x5633d91a8869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x344531b0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/sequential/test-inspector-module.js
--- CRASHED (Signal: 6) ---

                                                         
[23:22|%  97|+ 1800|- 282]: release test-inspector-not-blocked-on-idle 
                                                                      
[23:24|%  97|+ 1801|- 282]: release test-inspector-open 
                                                       
=== release test-inspector-open ===
Path: sequential/test-inspector-open
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/sequential/test-inspector-open.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/sequential/test-inspector-open.js' ]
------zone(testZone):worker(0) is terminating------
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
Debugger listening on ws://127.0.0.1:33769/b7184397-07a6-445d-bf78-016abf7e4e5d
For help, see: https://nodejs.org/en/docs/inspector
Debugger listening on ws://127.0.0.1:38271/e9466d83-0a06-4640-ab48-78954b54d453
For help, see: https://nodejs.org/en/docs/inspector
out/Release/node[99761]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55ff6f132048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55ff6f1331d4 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: 0x55ff6f3b1bca [out/Release/node]
 7: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 8: 0x39be3b0427d
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/sequential/test-inspector-open.js
--- CRASHED (Signal: 6) ---

                                                       
[23:24|%  97|+ 1801|- 283]: release test-inspector-overwrite-config 
                                                                   
=== release test-inspector-overwrite-config ===
Path: sequential/test-inspector-overwrite-config
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/sequential/test-inspector-overwrite-config.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/sequential/test-inspector-overwrite-config.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
out/Release/node[99782]: ../src/inspector_agent.cc:597:node::inspector::InspectorSessionDelegate* node::inspector::Agent::delegate(): Assertion `(client_) != (nullptr)' failed.
 1: node::Abort() [out/Release/node]
 2: 0x55f84b9c1048 [out/Release/node]
 3: node::inspector::Agent::delegate() [out/Release/node]
 4: 0x55f84ba8e869 [out/Release/node]
 5: v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) [out/Release/node]
 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [out/Release/node]
 7: 0x208e298427d
Command: out/Release/node --require ./test/fixtures/overwrite-config-preload-module.js /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/sequential/test-inspector-overwrite-config.js
--- CRASHED (Signal: 6) ---

                                                                   
[23:25|%  97|+ 1801|- 284]: release test-inspector-port-cluster 
                                                               
[23:28|%  97|+ 1802|- 284]: release test-inspector-port-zero 
                                                            
[23:29|%  97|+ 1803|- 284]: release test-inspector-port-zero-cluster 
                                                                    
=== release test-inspector-port-zero-cluster ===
Path: sequential/test-inspector-port-zero-cluster
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/sequential/test-inspector-port-zero-cluster.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/sequential/test-inspector-port-zero-cluster.js' ]
------zone(testZone):worker(0) is terminating------
Debugger listening on ws://127.0.0.1:38241/e748fbb0-f41c-4ea9-9b3a-05e47f61bebe
For help, see: https://nodejs.org/en/docs/inspector
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
assert.js:77
  throw new AssertionError(obj);
  ^

AssertionError [ERR_ASSERTION]: code: 1, signal: null
    at Worker.worker.on.common.mustCall (/home/zhanglei/src/node/test/sequential/test-inspector-port-zero-cluster.js:20:16)
    at Worker.<anonymous> (/home/zhanglei/src/node/test/common/index.js:475:15)
    at Worker.emit (events.js:182:13)
    at ChildProcess.worker.process.once (internal/cluster/master.js:193:12)
    at Object.onceWrapper (events.js:275:13)
    at ChildProcess.emit (events.js:182:13)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:225:12)
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
internal/modules/cjs/loader.js:573
    throw err;
    ^

Error: Cannot find module '/home/zhanglei/src/node/undefined'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:719:10)
    at startup (internal/bootstrap/node.js:228:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:575:3)
Command: out/Release/node --inspect=0 /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/sequential/test-inspector-port-zero-cluster.js

                                                                    
[23:29|%  97|+ 1803|- 285]: release test-inspector-scriptparsed-context 
                                                                       
[23:30|%  97|+ 1804|- 285]: release test-inspector-stop-profile-after-done 
                                                                          
[23:31|%  97|+ 1805|- 285]: release test-inspector-stops-no-file 
                                                                
[23:31|%  98|+ 1806|- 285]: release test-module-loading 
                                                       
=== release test-module-loading ===
Path: sequential/test-module-loading
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/sequential/test-module-loading.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/sequential/test-module-loading.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
load test-module-loading.js
AssertionError [ERR_ASSERTION]: require.main should === module Unhandled Rejection at Promise Promise {
  <rejected> 'AssertionError [ERR_ASSERTION]: require.main should === module' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/sequential/test-module-loading.js

                                                       
[23:32|%  98|+ 1806|- 286]: release test-net-GH-5504 
                                                    
[23:32|%  98|+ 1807|- 286]: release test-net-better-error-messages-port 
                                                                       
[23:33|%  98|+ 1808|- 286]: release test-net-connect-local-error 
                                                                
[23:33|%  98|+ 1809|- 286]: release test-net-listen-shared-ports 
                                                                
[23:33|%  98|+ 1810|- 286]: release test-net-localport 
                                                      
[23:34|%  98|+ 1811|- 286]: release test-net-reconnect-error 
                                                            
[23:34|%  98|+ 1812|- 286]: release test-net-response-size 
                                                          
[23:34|%  98|+ 1813|- 286]: release test-net-server-address 
                                                           
[23:34|%  98|+ 1814|- 286]: release test-net-server-bind 
                                                        
[23:35|%  98|+ 1815|- 286]: release test-next-tick-error-spin 
                                                             
[23:35|%  98|+ 1816|- 286]: release test-performance 
                                                    
=== release test-performance ===
Path: sequential/test-performance
------Wrapper ARGV:/home/zhanglei/src/node/out/Release/node,/home/zhanglei/src/napajs/node-test-wrapper.js,/home/zhanglei/src/node/test/sequential/test-performance.js
Using NODE_WORKER_TEST_WORKER_COUNT= 1
------zone(testZone):worker(0) is initializing------
------zone(testZone):worker(0) is initialized------
------WORKER ARGV: [ '/home/zhanglei/src/node/test/sequential/test-performance.js' ]
WARN napajs binding Thanks for using Napa.js.
WARN napajs binding There is a compatibility issue on Node v8.5.0 and above.
WARN napajs binding The flag "--noincremental-marking" is set to disable V8 incremental marking as a workaround.
WARN napajs binding We are working with Node.js team on a fix in newer Node versions.
AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:
+ expected - actual

- 176.3141510002315
+ -1 Unhandled Rejection at Promise Promise {
  <rejected> 'AssertionError [ERR_ASSERTION]: Input A expected to strictly equal input B:\n+ expected - actual\n\n- 176.3141510002315\n+ -1' }
Command: out/Release/node /home/zhanglei/src/napajs/node-test-wrapper.js /home/zhanglei/src/node/test/sequential/test-performance.js

                                                    
[23:35|%  98|+ 1816|- 287]: release test-pipe 
                                             
[23:36|%  98|+ 1817|- 287]: release test-process-warnings 
                                                         
[23:36|%  98|+ 1818|- 287]: release test-repl-timeout-throw 
                                                           
[23:37|%  98|+ 1819|- 287]: release test-require-cache-without-stat 
                                                                   
[23:37|%  98|+ 1820|- 287]: release test-stream-writable-clear-buffer 
                                                                     
[23:38|%  98|+ 1821|- 287]: release test-stream2-fs 
                                                   
[23:38|%  98|+ 1822|- 287]: release test-stream2-stderr-sync 
                                                            
[23:39|%  98|+ 1823|- 287]: release test-timers-block-eventloop 
                                                               
[23:39|%  98|+ 1824|- 287]: release test-timers-blocking-callback 
                                                                 
[23:40|%  99|+ 1825|- 287]: release test-timers-set-interval-excludes-callb... 
                                                                              
[23:41|%  99|+ 1826|- 287]: release test-tls-connect 
                                                    
[23:41|%  99|+ 1827|- 287]: release test-tls-lookup 
                                                   
[23:41|%  99|+ 1828|- 287]: release test-util-debug 
                                                   
[23:43|%  99|+ 1829|- 287]: release test-vm-timeout-rethrow 
                                                           
[23:43|%  99|+ 1830|- 287]: release console_colors 
                                                  
[23:43|%  99|+ 1831|- 287]: release no_dropped_stdio 
                                                    
[23:43|%  99|+ 1832|- 287]: release no_interleaved_stdio 
                                                        
[23:43|%  99|+ 1833|- 287]: release ref_keeps_node_running 
                                                          
[23:44|%  99|+ 1834|- 287]: release stdin-setrawmode 
                                                    
[23:44|%  99|+ 1835|- 287]: release test-assert-colors 
                                                      
[23:44|%  99|+ 1836|- 287]: release test-async-wrap-getasyncid-tty 
                                                                  
[23:44|%  99|+ 1837|- 287]: release test-handle-wrap-isrefed-tty 
                                                                
[23:44|%  99|+ 1838|- 287]: release test-stderr-stdout-handle-sigwinch 
                                                                      
[23:44|%  99|+ 1839|- 287]: release test-tty-get-color-depth 
                                                            
[23:44|%  99|+ 1840|- 287]: release test-tty-isatty 
                                                   
[23:44|%  99|+ 1841|- 287]: release test-tty-stdout-end 
                                                       
[23:44|%  99|+ 1842|- 287]: release test-tty-stdout-resize 
                                                          
[23:44|%  99|+ 1843|- 287]: release test-tty-stream-constructors 
                                                                
[23:44|%  99|+ 1844|- 287]: release test-tty-window-size 
                                                        
[23:44|%  99|+ 1845|- 287]: release test-tty-wrap 
                                                 
[23:44|% 100|+ 1846|- 287]: Done
